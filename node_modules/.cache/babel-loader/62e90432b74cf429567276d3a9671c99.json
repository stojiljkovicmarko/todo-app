{"ast":null,"code":"var _jsxFileName = \"C:\\\\DRIVER D\\\\BIT JS\\\\typescript projects\\\\react-typescript-demo\\\\src\\\\ui\\\\TodoListLayout.tsx\";\nimport React from \"react\";\nimport \"./TodoListLayout.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoListLayout = _ref => {\n  let {\n    type,\n    children,\n    isDragOverActive\n  } = _ref;\n  const isActive = type === \"active\";\n  const contentToRender = children.props.items.length === 0 ? isActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Start being productive! Add some todos.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Well done! You completed all your tasks.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this) : children;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `todos-layout ${isDragOverActive ? \"drag-target-active\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: isActive ? \"active-layout\" : \"finished-layout\",\n      children: isActive ? \"ACTIVE TODOS\" : \"FINISHED TODOS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), contentToRender]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TodoListLayout;\nexport default TodoListLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoListLayout\");","map":{"version":3,"sources":["C:/DRIVER D/BIT JS/typescript projects/react-typescript-demo/src/ui/TodoListLayout.tsx"],"names":["React","TodoListLayout","type","children","isDragOverActive","isActive","contentToRender","props","items","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,sBAAP;;;AAUA,MAAMC,cAAyC,GAAG,QAA0C;AAAA,MAAzC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA;AAAlB,GAAyC;AAC1F,QAAMC,QAAQ,GAAGH,IAAI,KAAK,QAA1B;AAEA,QAAMI,eAAe,GACnBH,QAAQ,CAACI,KAAT,CAAeC,KAAf,CAAqBC,MAArB,KAAgC,CAAhC,GACEJ,QAAQ,gBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADM,gBAGN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJJ,GAOEF,QARJ;AAWA,sBACE;AACE,IAAA,SAAS,EAAG,gBAAeC,gBAAgB,GAAG,oBAAH,GAA0B,EAAG,EAD1E;AAAA,4BAGE;AAAI,MAAA,SAAS,EAAEC,QAAQ,GAAG,eAAH,GAAqB,iBAA5C;AAAA,gBACGA,QAAQ,GAAG,cAAH,GAAoB;AAD/B;AAAA;AAAA;AAAA;AAAA,YAHF,EAMGC,eANH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAxBD;;KAAML,c;AA0BN,eAAeA,cAAf","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./TodoListLayout.css\";\r\n\r\ninterface ListLayoutProps {\r\n  children: {\r\n    props: object;\r\n  };\r\n  type: \"active\" | \"finished\";\r\n  isDragOverActive: boolean;\r\n}\r\n\r\nconst TodoListLayout: React.FC<ListLayoutProps> = ({ type, children, isDragOverActive }) => {\r\n  const isActive = type === \"active\";\r\n\r\n  const contentToRender =\r\n    children.props.items.length === 0 ? (\r\n      isActive ? (\r\n        <p>Start being productive! Add some todos.</p>\r\n      ) : (\r\n        <p>Well done! You completed all your tasks.</p>\r\n      )\r\n    ) : (\r\n      children\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`todos-layout ${isDragOverActive ? \"drag-target-active\" : \"\"}`}\r\n    >\r\n      <h2 className={isActive ? \"active-layout\" : \"finished-layout\"}>\r\n        {isActive ? \"ACTIVE TODOS\" : \"FINISHED TODOS\"}\r\n      </h2>\r\n      {contentToRender}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoListLayout;\r\n"]},"metadata":{},"sourceType":"module"}