{"ast":null,"code":"var _jsxFileName = \"C:\\\\DRIVER D\\\\BIT JS\\\\typescript projects\\\\react-typescript-demo\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport TodoList from \"./components/TodoList\";\nimport NewTodo from \"./components/NewTodo\";\nimport { ProjectStatus } from \"./model/todo.model\";\nimport TodoListLayout from \"./ui/TodoListLayout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const activeTodos = todos.filter(item => item.status === ProjectStatus.Active);\n  const finishedTodos = todos.filter(item => item.status === ProjectStatus.Finished);\n\n  const todoAddHandler = (text, date) => {\n    setTodos(prevTodos => {\n      return [...prevTodos, {\n        id: Math.random().toString(),\n        text: text,\n        status: ProjectStatus.Active,\n        date: {\n          day: date.getDate(),\n          month: date.getMonth() + 1,\n          year: date.getFullYear(),\n          fullDate: date\n        }\n      }];\n    });\n    console.log(text);\n  };\n\n  const todoDeleteHandler = todoId => {\n    setTodos(prevTodos => prevTodos.filter(todo => todo.id !== todoId));\n  };\n\n  const toggleTodoStatus = (todoId, status) => {\n    const todoIndex = todos.findIndex(todo => todo.id === todoId);\n    const newTodos = [...todos];\n    const newTodo = todos[todoIndex];\n    status === ProjectStatus.Active ? newTodo.status = ProjectStatus.Finished : newTodo.status = ProjectStatus.Active;\n    newTodos[todoIndex] = newTodo;\n    setTodos(newTodos);\n  };\n\n  const dropHandler = event => {\n    event.preventDefault();\n    const todoId = event.dataTransfer.getData(\"todoId\");\n    const todoIndex = todos.findIndex(todo => todo.id === todoId);\n    const newTodos = [...todos];\n    const newTodo = todos[todoIndex];\n    const todoStatus = newTodo.status;\n    todoStatus === ProjectStatus.Active ? newTodo.status = ProjectStatus.Finished : newTodo.status = ProjectStatus.Active;\n    newTodos[todoIndex] = newTodo;\n    setTodos(newTodos);\n  };\n\n  const dragLeaveHandler = event => {};\n\n  const dragOverHandler = event => {\n    if (event.dataTransfer && event.dataTransfer.types[0] === \"text/plain\") {\n      event.preventDefault();\n    }\n\n    return false;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(NewTodo, {\n        onAddTodo: todoAddHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoListLayout, {\n        type: \"active\",\n        dragOverHandler: dragOverHandler,\n        dropHandler: dropHandler,\n        children: /*#__PURE__*/_jsxDEV(TodoList, {\n          items: activeTodos,\n          onChangeTodoStatus: toggleTodoStatus,\n          onDeleteTodo: todoDeleteHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoListLayout, {\n        type: \"finished\",\n        dragOverHandler: dragOverHandler,\n        dropHandler: dropHandler,\n        children: /*#__PURE__*/_jsxDEV(TodoList, {\n          items: finishedTodos,\n          onChangeTodoStatus: toggleTodoStatus,\n          onDeleteTodo: todoDeleteHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"ZATHeV9x55jFrDOww2hwcxQ3V1U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/DRIVER D/BIT JS/typescript projects/react-typescript-demo/src/App.tsx"],"names":["React","useState","TodoList","NewTodo","ProjectStatus","TodoListLayout","App","todos","setTodos","activeTodos","filter","item","status","Active","finishedTodos","Finished","todoAddHandler","text","date","prevTodos","id","Math","random","toString","day","getDate","month","getMonth","year","getFullYear","fullDate","console","log","todoDeleteHandler","todoId","todo","toggleTodoStatus","todoIndex","findIndex","newTodos","newTodo","dropHandler","event","preventDefault","dataTransfer","getData","todoStatus","dragLeaveHandler","dragOverHandler","types"],"mappings":"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","sourcesContent":["import React, { DragEvent, useState } from \"react\";\n\nimport TodoList from \"./components/TodoList\";\nimport NewTodo from \"./components/NewTodo\";\n\nimport { ProjectStatus, Todo } from \"./model/todo.model\";\nimport TodoListLayout from \"./ui/TodoListLayout\";\n\nconst App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const activeTodos = todos.filter(\n    (item) => item.status === ProjectStatus.Active\n  );\n  const finishedTodos = todos.filter(\n    (item) => item.status === ProjectStatus.Finished\n  );\n\n  const todoAddHandler = (text: string, date: Date) => {\n    setTodos((prevTodos) => {\n      return [\n        ...prevTodos,\n        {\n          id: Math.random().toString(),\n          text: text,\n          status: ProjectStatus.Active,\n          date: {\n            day: date.getDate(),\n            month: date.getMonth() + 1,\n            year: date.getFullYear(),\n            fullDate: date,\n          },\n        },\n      ];\n    });\n    console.log(text);\n  };\n\n  const todoDeleteHandler = (todoId: string) => {\n    setTodos((prevTodos) => prevTodos.filter((todo) => todo.id !== todoId));\n  };\n\n  const toggleTodoStatus = (todoId: string, status?: ProjectStatus) => {\n    const todoIndex = todos.findIndex((todo) => todo.id === todoId);\n    const newTodos = [...todos];\n    const newTodo: Todo = todos[todoIndex];\n    status === ProjectStatus.Active\n      ? (newTodo.status = ProjectStatus.Finished)\n      : (newTodo.status = ProjectStatus.Active);\n    newTodos[todoIndex] = newTodo;\n    setTodos(newTodos);\n  };\n\n  const dropHandler = (event: DragEvent) => {\n    \n    event.preventDefault();\n    const todoId = event.dataTransfer.getData(\"todoId\");\n    \n    const todoIndex = todos.findIndex((todo) => todo.id === todoId);\n    const newTodos = [...todos];\n    const newTodo: Todo = todos[todoIndex];\n    const todoStatus = newTodo.status;\n    todoStatus === ProjectStatus.Active\n      ? (newTodo.status = ProjectStatus.Finished)\n      : (newTodo.status = ProjectStatus.Active);\n    newTodos[todoIndex] = newTodo;\n    setTodos(newTodos);\n  };\n\n  const dragLeaveHandler = (event: DragEvent) => {};\n\n  const dragOverHandler = (event: DragEvent) => {\n    if (event.dataTransfer && event.dataTransfer.types[0] === \"text/plain\") {\n      event.preventDefault();\n    }\n    return false;\n  };\n\n  return (\n    <>\n      <div className=\"App\">\n        <NewTodo onAddTodo={todoAddHandler} />\n        <TodoListLayout\n          type={\"active\"}\n          dragOverHandler={dragOverHandler}\n          dropHandler={dropHandler}\n        >\n          <TodoList\n            items={activeTodos}\n            onChangeTodoStatus={toggleTodoStatus}\n            onDeleteTodo={todoDeleteHandler}\n          />\n        </TodoListLayout>\n        <TodoListLayout\n          type={\"finished\"}\n          dragOverHandler={dragOverHandler}\n          dropHandler={dropHandler}\n        >\n          <TodoList\n            items={finishedTodos}\n            onChangeTodoStatus={toggleTodoStatus}\n            onDeleteTodo={todoDeleteHandler}\n          />\n        </TodoListLayout>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}