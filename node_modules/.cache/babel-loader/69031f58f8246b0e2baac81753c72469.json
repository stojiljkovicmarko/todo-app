{"ast":null,"code":"import _slicedToArray from\"C:/DRIVER D/BIT JS/typescript projects/todo-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from\"react\";import{CSSTransition}from\"react-transition-group\";import NewTodo from\"../NewTodo\";import{ProjectStatus}from\"../../model/todo.model\";import months from\"../../data/months\";import daysOfWeek from\"../../data/daysOfWeek\";import{addLeadingZero,sliceDayName,stringifyDate,sameDate,lesserDate}from\"../../util/util-functions\";import\"./ChangeMonth.css\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var ChangeMonth=function ChangeMonth(_ref){var todos=_ref.todos,selectedDay=_ref.selectedDay,onSetSelectedDay=_ref.onSetSelectedDay,submitTodo=_ref.submitTodo;var monthInitOn1st=new Date();monthInitOn1st.setDate(1);var _useState=useState(monthInitOn1st),_useState2=_slicedToArray(_useState,2),actualDate=_useState2[0],setActualDate=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),disablePreviousMonth=_useState4[0],setDisablePreviousMonth=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),showAddBtn=_useState6[0],setShowAddBtn=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),showAddTodo=_useState8[0],setshowAddTodo=_useState8[1];var onToggleShowAddTodo=function onToggleShowAddTodo(){setshowAddTodo(function(prevState){return!prevState;});};useEffect(function(){if(actualDate.getFullYear()===monthInitOn1st.getFullYear()&&actualDate.getMonth()===monthInitOn1st.getMonth()){setDisablePreviousMonth(true);}else{setDisablePreviousMonth(false);}},[actualDate,monthInitOn1st]);//kalendar je niz dana kao objekti sa klasama i brojem koji je broj dana\nvar calendar=[];var onPreviousMonth=function onPreviousMonth(){if(actualDate.getMonth()===0){setActualDate(function(prevDate){var newDate=new Date(prevDate.getTime());newDate.setMonth(11);newDate.setFullYear(prevDate.getFullYear()-1);return newDate;});}else{setActualDate(function(prevDate){var newDate=new Date(prevDate.getTime());newDate.setMonth(prevDate.getMonth()-1);return newDate;});}};var onNextMonth=function onNextMonth(){if(actualDate.getMonth()===11){setActualDate(function(prevDate){var newDate=new Date(prevDate.getTime());newDate.setMonth(0);newDate.setFullYear(prevDate.getFullYear()+1);return newDate;});}else{setActualDate(function(prevDate){var newDate=new Date(prevDate.getTime());newDate.setMonth(prevDate.getMonth()+1);return newDate;});}};//trenutno prikazani mesec\nvar thisMonth=new Date(actualDate.getTime());thisMonth.setDate(1);var firstDayOfMonth=actualDate.getDay()===0?7:actualDate.getDay();//zbog stampanja stavimo prvo dane koji ne pocinju od pocetka nedelje\nfor(var i=1;i<firstDayOfMonth;i++){if(firstDayOfMonth!==7){calendar.push({dayClass:\"no-day\",number:null});}}while(thisMonth.getMonth()===actualDate.getMonth()){//napravimo dayClass kao niz u koji stavljamo klase\nvar dayClass=[\"day\"];//ako je datum manji od danasnjeg onda stavimo disabled\n//ako je actualDate == today stavimo today\nif(lesserDate(thisMonth,new Date())){dayClass.push(\"day-disabled\");}else if(sameDate(thisMonth,new Date())){dayClass.push(\"today\");}if(thisMonth.getDate()===+selectedDay.split(\"/\")[0]){dayClass.push(\"day-selected\");}//zatim filter todos za taj datum koji prolazimo thismonth koj pocinje od prvog\n//vraca prvi element koji ispunjava uslov ako postoji za taj dan\nif(todos.find(function(todo){return todo.status===ProjectStatus.Active&&todo.date===stringifyDate(thisMonth);})){dayClass.push(\"day-todo\");}//zatim niz klasa stavimo u string i dodamo u kalendar niz objekat sa stringom i broejm\ncalendar.push({dayClass:dayClass.join(\" \"),number:thisMonth.getDate()});//uvecamo dan za jedan ali mesec mora biti isti\n//kada zbir predje broj dana u mesecu datum automatski prelazi na prvi dan sledeceg meseca\n//kada se to desi while petlja se prekida\nthisMonth.setDate(thisMonth.getDate()+1);}var onDaySelectHandler=function onDaySelectHandler(event){var selectedDay=event.target.getAttribute(\"day-value\");onSetSelectedDay(selectedDay);};console.log(showAddTodo);return/*#__PURE__*/_jsxs(\"section\",{className:\"default-layout\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"month\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"month__btn\",onClick:onPreviousMonth,disabled:disablePreviousMonth,children:[\" \",\"<\",\" \"]}),/*#__PURE__*/_jsx(\"p\",{className:\"month__name\",children:\"\".concat(months[actualDate.getMonth()],\" \").concat(actualDate.getFullYear())}),/*#__PURE__*/_jsxs(\"button\",{className:\"month__btn\",onClick:onNextMonth,children:[\" \",\">\",\" \"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"grid-col7 days-week\",children:daysOfWeek.map(function(day){return/*#__PURE__*/_jsx(\"div\",{children:sliceDayName(day)},day);})}),/*#__PURE__*/_jsx(\"div\",{className:\"grid-col7\",children:calendar.map(function(day,index){var dateOfDay=\"\".concat(addLeadingZero(day.number),\"/\").concat(addLeadingZero(actualDate.getMonth()+1),\"/\").concat(actualDate.getFullYear());return day.number!==null?/*#__PURE__*/_jsx(\"div\",{className:day.dayClass,\"day-value\":dateOfDay,onClick:function onClick(event){return onDaySelectHandler(event);},children:day.number},index):/*#__PURE__*/_jsx(\"div\",{className:day.dayClass},index);})}),showAddBtn&&/*#__PURE__*/_jsx(\"div\",{className:\"show-add-todo\",children:/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){setshowAddTodo(true);},\"data-tooltip\":\"Add todo\",children:\"+\"})}),/*#__PURE__*/_jsx(CSSTransition,{in:showAddTodo,timeout:300,classNames:\"new-todo\",unmountOnExit:true,onEnter:function onEnter(){return setShowAddBtn(false);},onExited:function onExited(){setShowAddBtn(true);},children:/*#__PURE__*/_jsx(NewTodo,{type:\"new\",submitTodo:submitTodo,selectedDay:selectedDay,onToggleShowAddTodo:onToggleShowAddTodo})})]});};export default ChangeMonth;","map":{"version":3,"sources":["C:/DRIVER D/BIT JS/typescript projects/todo-app/src/components/ChangeMonth/ChangeMonth.tsx"],"names":["React","useEffect","useState","CSSTransition","NewTodo","ProjectStatus","months","daysOfWeek","addLeadingZero","sliceDayName","stringifyDate","sameDate","lesserDate","ChangeMonth","todos","selectedDay","onSetSelectedDay","submitTodo","monthInitOn1st","Date","setDate","actualDate","setActualDate","disablePreviousMonth","setDisablePreviousMonth","showAddBtn","setShowAddBtn","showAddTodo","setshowAddTodo","onToggleShowAddTodo","prevState","getFullYear","getMonth","calendar","onPreviousMonth","prevDate","newDate","getTime","setMonth","setFullYear","onNextMonth","thisMonth","firstDayOfMonth","getDay","i","push","dayClass","number","getDate","split","find","todo","status","Active","date","join","onDaySelectHandler","event","target","getAttribute","console","log","map","day","index","dateOfDay"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport NewTodo from \"../NewTodo\";\r\nimport { ProjectStatus, Todo } from \"../../model/todo.model\";\r\nimport months from \"../../data/months\";\r\nimport daysOfWeek from \"../../data/daysOfWeek\";\r\nimport {\r\n  addLeadingZero,\r\n  sliceDayName,\r\n  stringifyDate,\r\n  sameDate,\r\n  lesserDate,\r\n} from \"../../util/util-functions\";\r\n\r\nimport \"./ChangeMonth.css\";\r\n\r\ntype ChangeMonthProps = {\r\n  todos: Todo[];\r\n  selectedDay: string;\r\n  onSetSelectedDay: (day: string) => void;\r\n  submitTodo: (text: string, date: Date, priority: string) => void;\r\n};\r\n\r\ntype Day = {\r\n  dayClass: string;\r\n  number: number | null;\r\n};\r\n\r\nconst ChangeMonth: React.FC<ChangeMonthProps> = ({\r\n  todos,\r\n  selectedDay,\r\n  onSetSelectedDay,\r\n  submitTodo,\r\n}) => {\r\n  let monthInitOn1st = new Date();\r\n  monthInitOn1st.setDate(1);\r\n  const [actualDate, setActualDate] = useState(monthInitOn1st);\r\n\r\n  const [disablePreviousMonth, setDisablePreviousMonth] = useState(true);\r\n\r\n  const [showAddBtn, setShowAddBtn] = useState(true);\r\n  const [showAddTodo, setshowAddTodo] = useState(false);\r\n\r\n  const onToggleShowAddTodo = () => {\r\n    setshowAddTodo((prevState) => !prevState);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (\r\n      actualDate.getFullYear() === monthInitOn1st.getFullYear() &&\r\n      actualDate.getMonth() === monthInitOn1st.getMonth()\r\n    ) {\r\n      setDisablePreviousMonth(true);\r\n    } else {\r\n      setDisablePreviousMonth(false);\r\n    }\r\n  }, [actualDate, monthInitOn1st]);\r\n\r\n  //kalendar je niz dana kao objekti sa klasama i brojem koji je broj dana\r\n  const calendar: Day[] = [];\r\n\r\n  const onPreviousMonth = () => {\r\n    if (actualDate.getMonth() === 0) {\r\n      setActualDate((prevDate) => {\r\n        const newDate = new Date(prevDate.getTime());\r\n        newDate.setMonth(11);\r\n        newDate.setFullYear(prevDate.getFullYear() - 1);\r\n        return newDate;\r\n      });\r\n    } else {\r\n      setActualDate((prevDate) => {\r\n        const newDate = new Date(prevDate.getTime());\r\n        newDate.setMonth(prevDate.getMonth() - 1);\r\n        return newDate;\r\n      });\r\n    }\r\n  };\r\n\r\n  const onNextMonth = () => {\r\n    if (actualDate.getMonth() === 11) {\r\n      setActualDate((prevDate) => {\r\n        const newDate = new Date(prevDate.getTime());\r\n        newDate.setMonth(0);\r\n        newDate.setFullYear(prevDate.getFullYear() + 1);\r\n        return newDate;\r\n      });\r\n    } else {\r\n      setActualDate((prevDate) => {\r\n        const newDate = new Date(prevDate.getTime());\r\n        newDate.setMonth(prevDate.getMonth() + 1);\r\n        return newDate;\r\n      });\r\n    }\r\n  };\r\n\r\n  //trenutno prikazani mesec\r\n  let thisMonth = new Date(actualDate.getTime());\r\n  thisMonth.setDate(1);\r\n\r\n  let firstDayOfMonth = actualDate.getDay() === 0 ? 7 : actualDate.getDay();\r\n\r\n  //zbog stampanja stavimo prvo dane koji ne pocinju od pocetka nedelje\r\n  for (let i = 1; i < firstDayOfMonth; i++) {\r\n    if (firstDayOfMonth !== 7) {\r\n      calendar.push({ dayClass: \"no-day\", number: null });\r\n    }\r\n  }\r\n\r\n  while (thisMonth.getMonth() === actualDate.getMonth()) {\r\n    //napravimo dayClass kao niz u koji stavljamo klase\r\n    let dayClass = [\"day\"];\r\n\r\n    //ako je datum manji od danasnjeg onda stavimo disabled\r\n    //ako je actualDate == today stavimo today\r\n    if (lesserDate(thisMonth, new Date())) {\r\n      dayClass.push(\"day-disabled\");\r\n    } else if (sameDate(thisMonth, new Date())) {\r\n      dayClass.push(\"today\");\r\n    }\r\n\r\n    if (thisMonth.getDate() === +selectedDay.split(\"/\")[0]) {\r\n      dayClass.push(\"day-selected\");\r\n    }\r\n\r\n    //zatim filter todos za taj datum koji prolazimo thismonth koj pocinje od prvog\r\n    //vraca prvi element koji ispunjava uslov ako postoji za taj dan\r\n    if (\r\n      todos.find(\r\n        (todo) =>\r\n          todo.status === ProjectStatus.Active &&\r\n          todo.date === stringifyDate(thisMonth)\r\n      )\r\n    ) {\r\n      dayClass.push(\"day-todo\");\r\n    }\r\n\r\n    //zatim niz klasa stavimo u string i dodamo u kalendar niz objekat sa stringom i broejm\r\n    calendar.push({\r\n      dayClass: dayClass.join(\" \"),\r\n      number: thisMonth.getDate(),\r\n    });\r\n\r\n    //uvecamo dan za jedan ali mesec mora biti isti\r\n    //kada zbir predje broj dana u mesecu datum automatski prelazi na prvi dan sledeceg meseca\r\n    //kada se to desi while petlja se prekida\r\n    thisMonth.setDate(thisMonth.getDate() + 1);\r\n  }\r\n\r\n  const onDaySelectHandler = (event: React.MouseEvent) => {\r\n    const selectedDay = (event.target as Element).getAttribute(\r\n      \"day-value\"\r\n    ) as string;\r\n    onSetSelectedDay(selectedDay);\r\n  };\r\n  console.log(showAddTodo);\r\n\r\n  return (\r\n    <section className=\"default-layout\">\r\n      <div className=\"month\">\r\n        <button\r\n          className=\"month__btn\"\r\n          onClick={onPreviousMonth}\r\n          disabled={disablePreviousMonth}\r\n        >\r\n          {\" \"}\r\n          &lt;{\" \"}\r\n        </button>\r\n        <p className=\"month__name\">{`${\r\n          months[actualDate.getMonth()]\r\n        } ${actualDate.getFullYear()}`}</p>\r\n        <button className=\"month__btn\" onClick={onNextMonth}>\r\n          {\" \"}\r\n          &gt;{\" \"}\r\n        </button>\r\n      </div>\r\n      <div className=\"grid-col7 days-week\">\r\n        {daysOfWeek.map((day) => (\r\n          <div key={day}>{sliceDayName(day)}</div>\r\n        ))}\r\n      </div>\r\n      <div className=\"grid-col7\">\r\n        {calendar.map((day, index) => {\r\n          let dateOfDay = `${addLeadingZero(day.number)}/${addLeadingZero(\r\n            actualDate.getMonth() + 1\r\n          )}/${actualDate.getFullYear()}`;\r\n          return day.number !== null ? (\r\n            <div\r\n              className={day.dayClass}\r\n              key={index}\r\n              day-value={dateOfDay}\r\n              onClick={(event) => onDaySelectHandler(event)}\r\n            >\r\n              {day.number}\r\n            </div>\r\n          ) : (\r\n            <div className={day.dayClass} key={index} />\r\n          );\r\n        })}\r\n      </div>\r\n      {/* {showAddTodo ? (\r\n        <NewTodo\r\n          type=\"new\"\r\n          submitTodo={submitTodo}\r\n          selectedDay={selectedDay}\r\n          onToggleShowAddTodo={onToggleShowAddTodo}\r\n        />\r\n      ) : (\r\n        <div className=\"show-add-todo\">\r\n          <button onClick={onToggleShowAddTodo} data-tooltip=\"Add todo\">\r\n            +\r\n          </button>\r\n        </div>\r\n      )} */}\r\n\r\n      {showAddBtn && (\r\n        <div className=\"show-add-todo\">\r\n          <button\r\n            onClick={() => {\r\n              setshowAddTodo(true);\r\n            }}\r\n            data-tooltip=\"Add todo\"\r\n          >\r\n            +\r\n          </button>\r\n        </div>\r\n      )}\r\n      <CSSTransition\r\n        in={showAddTodo}\r\n        timeout={300}\r\n        classNames=\"new-todo\"\r\n        unmountOnExit\r\n        onEnter={() => setShowAddBtn(false)}\r\n        onExited={() => {\r\n          setShowAddBtn(true);\r\n        }}\r\n      >\r\n        <NewTodo\r\n          type=\"new\"\r\n          submitTodo={submitTodo}\r\n          selectedDay={selectedDay}\r\n          onToggleShowAddTodo={onToggleShowAddTodo}\r\n        />\r\n      </CSSTransition>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ChangeMonth;\r\n"]},"metadata":{},"sourceType":"module"}