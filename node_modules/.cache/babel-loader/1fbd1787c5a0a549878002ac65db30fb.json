{"ast":null,"code":"var _jsxFileName = \"C:\\\\DRIVER D\\\\BIT JS\\\\typescript projects\\\\react-typescript-demo\\\\src\\\\components\\\\TodoList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { ProjectStatus } from \"../model/todo.model\";\nimport { filterTodos } from \"../util/util-functions\";\nimport \"./TodoList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoList = _ref => {\n  _s();\n\n  let {\n    list,\n    items,\n    onToggleTodoStatus,\n    onDeleteTodo\n  } = _ref;\n\n  const dragStartHandler = (event, todoId) => {\n    event.dataTransfer.setData(\"todo_id\", todoId);\n    event.dataTransfer.effectAllowed = \"move\";\n  };\n\n  let newItems = [];\n\n  if (list === \"active\") {\n    newItems = filterTodos(items, ProjectStatus.Active);\n  } else {\n    newItems = filterTodos(items, ProjectStatus.Finished);\n  }\n\n  const [isEditable, setIsEditable] = useState(false);\n\n  const onEditTodo = () => {\n    setIsEditable(true);\n  };\n\n  console.log(isEditable);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: newItems.map((todo, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      draggable: \"true\",\n      \"data-index\": index,\n      className: `todo ${todo.status === 0 ? \"active-todo\" : \"finished-todo\"}`,\n      onDragStart: event => dragStartHandler(event, todo.id),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-primary-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            checked: todo.status === 0 ? false : true,\n            type: \"checkbox\",\n            className: todo.priority,\n            onChange: event => {\n              onToggleTodoStatus(todo.id, todo.status, event);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"draggable\",\n            children: \"\\u205D\\u205D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: todo.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit__btn\",\n            onClick: onEditTodo.bind(null, todo.id),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u270E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete__btn\",\n            onClick: onDeleteTodo.bind(null, todo.id),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u2716\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-secondary-info\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: todo.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, todo.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoList, \"XR8qrCeMXdvZ6hXvpL0FK6Kbqdw=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["C:/DRIVER D/BIT JS/typescript projects/react-typescript-demo/src/components/TodoList.tsx"],"names":["React","useState","ProjectStatus","filterTodos","TodoList","list","items","onToggleTodoStatus","onDeleteTodo","dragStartHandler","event","todoId","dataTransfer","setData","effectAllowed","newItems","Active","Finished","isEditable","setIsEditable","onEditTodo","console","log","map","todo","index","status","id","priority","text","bind","date"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, DragEvent, useState } from \"react\";\r\nimport { ProjectStatus, Todo } from \"../model/todo.model\";\r\nimport { filterTodos } from \"../util/util-functions\";\r\n\r\nimport \"./TodoList.css\";\r\n\r\ninterface TodoListProps {\r\n  list: string;\r\n  items: Todo[];\r\n  onToggleTodoStatus: (\r\n    id: string,\r\n    newStatus: ProjectStatus,\r\n    event: ChangeEvent\r\n  ) => void;\r\n  onDeleteTodo: (id: string) => void;\r\n}\r\n\r\nconst TodoList: React.FC<TodoListProps> = ({\r\n  list,\r\n  items,\r\n  onToggleTodoStatus,\r\n  onDeleteTodo,\r\n}) => {\r\n  const dragStartHandler = (\r\n    event: DragEvent<HTMLLIElement>,\r\n    todoId: string\r\n  ) => {\r\n    event.dataTransfer.setData(\"todo_id\", todoId);\r\n    event.dataTransfer.effectAllowed = \"move\";\r\n  };\r\n\r\n  let newItems: Todo[] = [];\r\n\r\n  if (list === \"active\") {\r\n    newItems = filterTodos(items, ProjectStatus.Active);\r\n  } else {\r\n    newItems = filterTodos(items, ProjectStatus.Finished);\r\n  }\r\n\r\n  const [isEditable, setIsEditable] = useState(false);\r\n\r\n  const onEditTodo = () => {\r\n    setIsEditable(true);\r\n  };\r\n\r\n  console.log(isEditable);\r\n\r\n  return (\r\n    <ul>\r\n      {newItems.map((todo, index) => (\r\n        <li\r\n          draggable=\"true\"\r\n          key={todo.id}\r\n          data-index={index}\r\n          className={`todo ${\r\n            todo.status === 0 ? \"active-todo\" : \"finished-todo\"\r\n          }`}\r\n          onDragStart={(event) => dragStartHandler(event, todo.id)}\r\n        >\r\n          <div className=\"todo-primary-info\">\r\n            <div>\r\n              <input\r\n                checked={todo.status === 0 ? false : true}\r\n                type=\"checkbox\"\r\n                className={todo.priority}\r\n                onChange={(event) => {\r\n                  onToggleTodoStatus(todo.id, todo.status, event);\r\n                }}\r\n              />\r\n              <span className=\"draggable\">&#8285;&#8285;</span>\r\n              <div>{todo.text}</div>\r\n            </div>\r\n            <div>\r\n              <button\r\n                className=\"edit__btn\"\r\n                onClick={onEditTodo.bind(null, todo.id)}\r\n              >\r\n                <span>&#9998;</span>\r\n              </button>\r\n              <button\r\n                className=\"delete__btn\"\r\n                onClick={onDeleteTodo.bind(null, todo.id)}\r\n              >\r\n                <span>&#10006;</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"todo-secondary-info\">\r\n            <span>{todo.date}</span>\r\n          </div>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n"]},"metadata":{},"sourceType":"module"}