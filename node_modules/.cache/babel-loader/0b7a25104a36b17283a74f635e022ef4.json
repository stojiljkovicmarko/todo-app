{"ast":null,"code":"var _jsxFileName = \"C:\\\\DRIVER D\\\\BIT JS\\\\typescript projects\\\\react-typescript-demo\\\\src\\\\components\\\\NewTodo.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport \"./NewTodo.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTodo = props => {\n  _s();\n\n  const todoTextRef = useRef(null);\n  const todoDateRef = useRef(null);\n  const todoPriorityRef = useRef(null);\n\n  const todoSubmitHandler = event => {\n    event.preventDefault();\n    const enteredText = todoTextRef.current.value;\n    const enteredDate = new Date(todoDateRef.current.value);\n    const enteredPriority = todoPriorityRef.current.value;\n\n    if (props.type === \"new\") {\n      props.submitTodo(enteredText, enteredDate, enteredPriority);\n    } else {\n      props.submitTodo(enteredText, enteredDate, enteredPriority, props.todo.id);\n    }\n\n    todoTextRef.current.value = \"\";\n  };\n\n  const testClick = () => {\n    console.log(\"test click from new todo\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: todoSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"todo-text\",\n        ref: todoTextRef,\n        placeholder: \"Title\",\n        defaultValue: props.type === \"edit\" ? props.todo.text : \"\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"todo-date\",\n        ref: todoDateRef,\n        min: new Date().toISOString().split(\"T\")[0],\n        defaultValue: props.type === \"edit\" ? new Date(props.todo.fullDate).toISOString().substring(0, 10) : new Date().toISOString().substring(0, 10),\n        required: true\n      }, Math.random() * 10000, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"todo-priority\",\n        ref: todoPriorityRef,\n        defaultValue: props.type === \"edit\" ? props.todo.priority : \"p1\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"p1\",\n          children: \"Priority 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"p2\",\n          children: \"Priority 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"p3\",\n          children: \"Priority 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"p4\",\n          children: \"Priority 4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add__btn\",\n        type: \"submit\",\n        children: props.type === \"edit\" ? \"Edit todo\" : \"Add todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cancel__btn\",\n        type: \"button\",\n        onClick: () => props.type === \"edit\" ? props.onEditableTodo(props.todo.id) : testClick(),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewTodo, \"/YG80ogZAVHBMG6ZdD7ADfxAR40=\");\n\n_c = NewTodo;\nexport default NewTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTodo\");","map":{"version":3,"sources":["C:/DRIVER D/BIT JS/typescript projects/react-typescript-demo/src/components/NewTodo.tsx"],"names":["React","useRef","NewTodo","props","todoTextRef","todoDateRef","todoPriorityRef","todoSubmitHandler","event","preventDefault","enteredText","current","value","enteredDate","Date","enteredPriority","type","submitTodo","todo","id","testClick","console","log","text","toISOString","split","fullDate","substring","Math","random","priority","onEditableTodo"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\r\n\r\nimport { Todo } from \"../model/todo.model\";\r\n\r\nimport \"./NewTodo.css\";\r\n\r\ninterface TodoAddProps {\r\n  type: \"new\" | \"edit\";\r\n  submitTodo: (\r\n    text: string,\r\n    date: Date,\r\n    priority: string,\r\n    todoId?: string\r\n  ) => void;\r\n  todo?: Todo;\r\n  onEditableTodo?: (id: string) => void;\r\n}\r\n\r\nconst NewTodo: React.FC<TodoAddProps> = (props) => {\r\n  const todoTextRef = useRef<HTMLInputElement>(null);\r\n  const todoDateRef = useRef<HTMLInputElement>(null);\r\n  const todoPriorityRef = useRef<HTMLSelectElement>(null);\r\n\r\n  const todoSubmitHandler = (event: React.FormEvent) => {\r\n    event.preventDefault();\r\n    const enteredText = todoTextRef.current!.value;\r\n    const enteredDate = new Date(todoDateRef.current!.value);\r\n    const enteredPriority = todoPriorityRef.current!.value;\r\n    if (props.type === \"new\") {\r\n      props.submitTodo(enteredText, enteredDate, enteredPriority);\r\n    } else {\r\n      props.submitTodo(\r\n        enteredText,\r\n        enteredDate,\r\n        enteredPriority,\r\n        props.todo!.id\r\n      );\r\n    }\r\n    todoTextRef.current!.value = \"\";\r\n  };\r\n\r\n  const testClick = () => {\r\n    console.log(\"test click from new todo\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={todoSubmitHandler}>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          id=\"todo-text\"\r\n          ref={todoTextRef}\r\n          placeholder=\"Title\"\r\n          defaultValue={props.type === \"edit\" ? props.todo!.text : \"\"}\r\n          required\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          id=\"todo-date\"\r\n          ref={todoDateRef}\r\n          key={Math.random() * 10000}\r\n          min={new Date().toISOString().split(\"T\")[0]}\r\n          defaultValue={\r\n            props.type === \"edit\"\r\n              ? new Date(props.todo!.fullDate).toISOString().substring(0, 10)\r\n              : new Date().toISOString().substring(0, 10)\r\n          }\r\n          required\r\n        />\r\n        <select\r\n          id=\"todo-priority\"\r\n          ref={todoPriorityRef}\r\n          defaultValue={props.type === \"edit\" ? props.todo!.priority : \"p1\"}\r\n        >\r\n          <option value=\"p1\">Priority 1</option>\r\n          <option value=\"p2\">Priority 2</option>\r\n          <option value=\"p3\">Priority 3</option>\r\n          <option value=\"p4\">Priority 4</option>\r\n        </select>\r\n      </div>\r\n      <div className=\"actions\">\r\n        <button className=\"add__btn\" type=\"submit\">\r\n          {props.type === \"edit\" ? \"Edit todo\" : \"Add todo\"}\r\n        </button>\r\n        <button\r\n          className=\"cancel__btn\"\r\n          type=\"button\"\r\n          onClick={() =>\r\n            props.type === \"edit\"\r\n              ? props.onEditableTodo!(props.todo!.id)\r\n              : testClick()\r\n          }\r\n        >\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewTodo;\r\n"]},"metadata":{},"sourceType":"module"}