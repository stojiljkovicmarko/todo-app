{"ast":null,"code":"var _jsxFileName = \"C:\\\\DRIVER D\\\\BIT JS\\\\typescript projects\\\\todo-app\\\\src\\\\components\\\\TodoList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport { useClickOutside } from \"../hooks/useClickOutside\";\nimport { ProjectStatus } from \"../model/todo.model\";\nimport { filterTodos } from \"../util/util-functions\";\nimport NewTodo from \"./NewTodo\";\nimport \"./TodoList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoList = _ref => {\n  _s();\n\n  let {\n    list,\n    items,\n    onToggleTodoStatus,\n    onDeleteTodo,\n    onEditableTodo,\n    onUpdateTodo,\n    onClickOutside\n  } = _ref;\n\n  const dragStartHandler = (event, todoId) => {\n    event.dataTransfer.setData(\"todo_id\", todoId);\n    event.dataTransfer.effectAllowed = \"move\";\n  };\n\n  let filteredTodos = [];\n\n  let noTodos = /*#__PURE__*/_jsxDEV(\"li\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 17\n  }, this);\n\n  if (list === \"active\") {\n    filteredTodos = filterTodos(items, ProjectStatus.Active);\n    noTodos = /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\"Start being productive today.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), \" Add some tasks to your list.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  } else {\n    filteredTodos = filterTodos(items, ProjectStatus.Finished);\n    noTodos = /*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"All finished. Well done!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }, this);\n  }\n\n  const ulRef = useRef(null);\n  useClickOutside(ulRef, onClickOutside);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    ref: list === \"active\" ? ulRef : null,\n    children: filteredTodos.length !== 0 ? /*#__PURE__*/_jsxDEV(TransitionGroup, {\n      children: filteredTodos.map(todo => {\n        return !todo.isEditable ? /*#__PURE__*/_jsxDEV(CSSTransition, {\n          timeout: 500,\n          classNames: \"demo-todo\",\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            draggable: \"true\",\n            className: `todo ${todo.status === 0 ? \"active-todo\" : \"finished-todo\"}`,\n            onDragStart: event => dragStartHandler(event, todo.id),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"todo-primary-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  checked: todo.status === 0 ? false : true,\n                  type: \"checkbox\",\n                  className: todo.priority,\n                  onChange: event => {\n                    onToggleTodoStatus(todo.id, todo.status, event);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"draggable\",\n                  children: \"\\u205D\\u205D\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: todo.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  \"data-tooltip\": \"Edit\",\n                  className: \"edit__btn\",\n                  onClick: onEditableTodo.bind(null, todo.id),\n                  children: \"\\u270E\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  \"data-tooltip\": \"Delete\",\n                  className: \"delete__btn\",\n                  onClick: onDeleteTodo.bind(null, todo.id),\n                  children: \"\\u2716\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"todo-secondary-info\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: todo.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this)\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(NewTodo, {\n            type: \"edit\",\n            submitTodo: onUpdateTodo,\n            todo: todo,\n            onEditableTodo: () => onEditableTodo(todo.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this)\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this) : noTodos\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoList, \"le5eVe2HeawaO9kAjuHqfbhwgUg=\", false, function () {\n  return [useClickOutside];\n});\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["C:/DRIVER D/BIT JS/typescript projects/todo-app/src/components/TodoList.tsx"],"names":["React","useRef","TransitionGroup","CSSTransition","useClickOutside","ProjectStatus","filterTodos","NewTodo","TodoList","list","items","onToggleTodoStatus","onDeleteTodo","onEditableTodo","onUpdateTodo","onClickOutside","dragStartHandler","event","todoId","dataTransfer","setData","effectAllowed","filteredTodos","noTodos","Active","Finished","ulRef","length","map","todo","isEditable","status","id","priority","text","bind","date"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, DragEvent, useRef } from \"react\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport { useClickOutside } from \"../hooks/useClickOutside\";\r\nimport { ProjectStatus, Todo } from \"../model/todo.model\";\r\nimport { filterTodos } from \"../util/util-functions\";\r\nimport NewTodo from \"./NewTodo\";\r\n\r\nimport \"./TodoList.css\";\r\n\r\ninterface TodoListProps {\r\n  list: string;\r\n  items: Todo[];\r\n  onToggleTodoStatus: (\r\n    id: string,\r\n    newStatus: ProjectStatus,\r\n    event: ChangeEvent\r\n  ) => void;\r\n  onDeleteTodo: (id: string) => void;\r\n  onEditableTodo: (id: string) => void;\r\n  onUpdateTodo: (\r\n    text: string,\r\n    date: Date,\r\n    priority: string,\r\n    id?: string\r\n  ) => void;\r\n  onClickOutside: (event: MouseEvent) => void;\r\n}\r\n\r\nconst TodoList: React.FC<TodoListProps> = ({\r\n  list,\r\n  items,\r\n  onToggleTodoStatus,\r\n  onDeleteTodo,\r\n  onEditableTodo,\r\n  onUpdateTodo,\r\n  onClickOutside,\r\n}) => {\r\n  const dragStartHandler = (\r\n    event: DragEvent<HTMLLIElement>,\r\n    todoId: string\r\n  ) => {\r\n    event.dataTransfer.setData(\"todo_id\", todoId);\r\n    event.dataTransfer.effectAllowed = \"move\";\r\n  };\r\n\r\n  let filteredTodos: Todo[] = [];\r\n  let noTodos = <li></li>;\r\n\r\n  if (list === \"active\") {\r\n    filteredTodos = filterTodos(items, ProjectStatus.Active);\r\n    noTodos = (\r\n      <li>\r\n        Start being productive today.\r\n        <br /> Add some tasks to your list.\r\n      </li>\r\n    );\r\n  } else {\r\n    filteredTodos = filterTodos(items, ProjectStatus.Finished);\r\n    noTodos = <li>All finished. Well done!</li>;\r\n  }\r\n\r\n  const ulRef = useRef<HTMLUListElement>(null);\r\n\r\n  useClickOutside(ulRef, onClickOutside);\r\n\r\n  return (\r\n    <ul ref={list === \"active\" ? ulRef : null}>\r\n      {filteredTodos.length !== 0 ? (\r\n        <TransitionGroup>\r\n          {filteredTodos.map((todo) => {\r\n            return !todo.isEditable ? (\r\n              <CSSTransition key={todo.id} timeout={500} classNames=\"demo-todo\">\r\n                <li\r\n                  draggable=\"true\"\r\n                  className={`todo ${\r\n                    todo.status === 0 ? \"active-todo\" : \"finished-todo\"\r\n                  }`}\r\n                  onDragStart={(event) => dragStartHandler(event, todo.id)}\r\n                >\r\n                  <div className=\"todo-primary-info\">\r\n                    <div>\r\n                      <input\r\n                        checked={todo.status === 0 ? false : true}\r\n                        type=\"checkbox\"\r\n                        className={todo.priority}\r\n                        onChange={(event) => {\r\n                          onToggleTodoStatus(todo.id, todo.status, event);\r\n                        }}\r\n                      />\r\n                      <span className=\"draggable\">&#8285;&#8285;</span>\r\n                      <div>{todo.text}</div>\r\n                    </div>\r\n                    <div className=\"actions\">\r\n                      <button\r\n                        data-tooltip=\"Edit\"\r\n                        className=\"edit__btn\"\r\n                        onClick={onEditableTodo.bind(null, todo.id)}\r\n                      >\r\n                        &#9998;\r\n                      </button>\r\n                      <button\r\n                        data-tooltip=\"Delete\"\r\n                        className=\"delete__btn\"\r\n                        onClick={onDeleteTodo.bind(null, todo.id)}\r\n                      >\r\n                        &#10006;\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"todo-secondary-info\">\r\n                    <span>{todo.date}</span>\r\n                  </div>\r\n                </li>\r\n              </CSSTransition>\r\n            ) : (\r\n              <li key={todo.id}>\r\n                <NewTodo\r\n                  type=\"edit\"\r\n                  submitTodo={onUpdateTodo}\r\n                  todo={todo}\r\n                  onEditableTodo={() => onEditableTodo(todo.id)}\r\n                />\r\n              </li>\r\n            );\r\n          })}\r\n        </TransitionGroup>\r\n      ) : (\r\n        noTodos\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n"]},"metadata":{},"sourceType":"module"}