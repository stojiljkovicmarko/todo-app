{"ast":null,"code":"var _jsxFileName = \"C:\\\\DRIVER D\\\\BIT JS\\\\typescript projects\\\\react-typescript-demo\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport TodoList from \"./components/TodoList\";\nimport NewTodo from \"./components/NewTodo\";\nimport { ProjectStatus } from \"./model/todo.model\";\nimport TodoListLayout from \"./ui/TodoListLayout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const activeTodos = todos.filter(item => item.status === ProjectStatus.Active);\n  const finishedTodos = todos.filter(item => item.status === ProjectStatus.Finished);\n\n  const todoAddHandler = text => {\n    setTodos(prevTodos => {\n      return [...prevTodos, {\n        id: Math.random().toString(),\n        text: text,\n        status: ProjectStatus.Active\n      }];\n    });\n    console.log(text);\n  };\n\n  const todoDeleteHandler = todoId => {\n    setTodos(prevTodos => prevTodos.filter(todo => todo.id !== todoId));\n  };\n\n  const toggleTodoStatus = (todoId, newStatus) => {\n    setTodos(prevTodos => {\n      const todoIndex = prevTodos.findIndex(todo => todo.id === todoId);\n      return [...prevTodos.slice(0, todoIndex), { ...prevTodos[todoIndex],\n        status: ProjectStatus.Active ? ProjectStatus.Finished : ProjectStatus.Active\n      }, ...prevTodos.slice(todoIndex)];\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(NewTodo, {\n        onAddTodo: todoAddHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoListLayout, {\n        type: \"active\",\n        children: /*#__PURE__*/_jsxDEV(TodoList, {\n          items: activeTodos,\n          onChangeTodoStatus: toggleTodoStatus,\n          onDeleteTodo: todoDeleteHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoListLayout, {\n        type: \"finished\",\n        children: /*#__PURE__*/_jsxDEV(TodoList, {\n          items: finishedTodos,\n          onDeleteTodo: todoDeleteHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"ZATHeV9x55jFrDOww2hwcxQ3V1U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/DRIVER D/BIT JS/typescript projects/react-typescript-demo/src/App.tsx"],"names":["React","useState","TodoList","NewTodo","ProjectStatus","TodoListLayout","App","todos","setTodos","activeTodos","filter","item","status","Active","finishedTodos","Finished","todoAddHandler","text","prevTodos","id","Math","random","toString","console","log","todoDeleteHandler","todoId","todo","toggleTodoStatus","newStatus","todoIndex","findIndex","slice"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,SAASC,aAAT,QAAoC,oBAApC;AACA,OAAOC,cAAP,MAA2B,qBAA3B;;;;AAEA,MAAMC,GAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAS,EAAT,CAAlC;AACA,QAAMQ,WAAW,GAAGF,KAAK,CAACG,MAAN,CACjBC,IAAD,IAAUA,IAAI,CAACC,MAAL,KAAgBR,aAAa,CAACS,MADtB,CAApB;AAGA,QAAMC,aAAa,GAAGP,KAAK,CAACG,MAAN,CACnBC,IAAD,IAAUA,IAAI,CAACC,MAAL,KAAgBR,aAAa,CAACW,QADpB,CAAtB;;AAIA,QAAMC,cAAc,GAAIC,IAAD,IAAkB;AACvCT,IAAAA,QAAQ,CAAEU,SAAD,IAAe;AACtB,aAAO,CACL,GAAGA,SADE,EAEL;AACEC,QAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd,EADN;AAEEL,QAAAA,IAAI,EAAEA,IAFR;AAGEL,QAAAA,MAAM,EAAER,aAAa,CAACS;AAHxB,OAFK,CAAP;AAQD,KATO,CAAR;AAUAU,IAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACD,GAZD;;AAcA,QAAMQ,iBAAiB,GAAIC,MAAD,IAAoB;AAC5ClB,IAAAA,QAAQ,CAAEU,SAAD,IAAeA,SAAS,CAACR,MAAV,CAAkBiB,IAAD,IAAUA,IAAI,CAACR,EAAL,KAAYO,MAAvC,CAAhB,CAAR;AACD,GAFD;;AAIA,QAAME,gBAAgB,GAAG,CAACF,MAAD,EAAiBG,SAAjB,KAA8C;AACrErB,IAAAA,QAAQ,CAAEU,SAAD,IAAe;AACtB,YAAMY,SAAS,GAAGZ,SAAS,CAACa,SAAV,CAAqBJ,IAAD,IAAUA,IAAI,CAACR,EAAL,KAAYO,MAA1C,CAAlB;AACA,aAAO,CACL,GAAGR,SAAS,CAACc,KAAV,CAAgB,CAAhB,EAAmBF,SAAnB,CADE,EAEL,EACE,GAAGZ,SAAS,CAACY,SAAD,CADd;AAEElB,QAAAA,MAAM,EAAER,aAAa,CAACS,MAAd,GACJT,aAAa,CAACW,QADV,GAEJX,aAAa,CAACS;AAJpB,OAFK,EAQL,GAAGK,SAAS,CAACc,KAAV,CAAgBF,SAAhB,CARE,CAAP;AAUD,KAZO,CAAR;AAaD,GAdD;;AAgBA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,SAAS,EAAEd;AAApB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,cAAD;AAAgB,QAAA,IAAI,EAAE,QAAtB;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,KAAK,EAAEP,WAAjB;AAA8B,UAAA,kBAAkB,EAAEmB,gBAAlD;AAAoE,UAAA,YAAY,EAAEH;AAAlF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,QAAC,cAAD;AAAgB,QAAA,IAAI,EAAE,UAAtB;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,KAAK,EAAEX,aAAjB;AAAgC,UAAA,YAAY,EAAEW;AAA9C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAaD,CAxDD;;GAAMnB,G;;KAAAA,G;AA0DN,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport TodoList from \"./components/TodoList\";\nimport NewTodo from \"./components/NewTodo\";\n\nimport { ProjectStatus, Todo } from \"./model/todo.model\";\nimport TodoListLayout from \"./ui/TodoListLayout\";\n\nconst App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const activeTodos = todos.filter(\n    (item) => item.status === ProjectStatus.Active\n  );\n  const finishedTodos = todos.filter(\n    (item) => item.status === ProjectStatus.Finished\n  );\n\n  const todoAddHandler = (text: string) => {\n    setTodos((prevTodos) => {\n      return [\n        ...prevTodos,\n        {\n          id: Math.random().toString(),\n          text: text,\n          status: ProjectStatus.Active,\n        },\n      ];\n    });\n    console.log(text);\n  };\n\n  const todoDeleteHandler = (todoId: string) => {\n    setTodos((prevTodos) => prevTodos.filter((todo) => todo.id !== todoId));\n  };\n\n  const toggleTodoStatus = (todoId: string, newStatus: ProjectStatus) => {\n    setTodos((prevTodos) => {\n      const todoIndex = prevTodos.findIndex((todo) => todo.id === todoId);\n      return [\n        ...prevTodos.slice(0, todoIndex),\n        {\n          ...prevTodos[todoIndex],\n          status: ProjectStatus.Active\n            ? ProjectStatus.Finished\n            : ProjectStatus.Active,\n        },\n        ...prevTodos.slice(todoIndex),\n      ];\n    });\n  };\n\n  return (\n    <>\n      <div className=\"App\">\n        <NewTodo onAddTodo={todoAddHandler} />\n        <TodoListLayout type={\"active\"}>\n          <TodoList items={activeTodos} onChangeTodoStatus={toggleTodoStatus} onDeleteTodo={todoDeleteHandler} />\n        </TodoListLayout>\n        <TodoListLayout type={\"finished\"}>\n          <TodoList items={finishedTodos} onDeleteTodo={todoDeleteHandler} />\n        </TodoListLayout>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}