{"ast":null,"code":"var _jsxFileName = \"C:\\\\DRIVER D\\\\BIT JS\\\\typescript projects\\\\react-typescript-demo\\\\src\\\\components\\\\ChangeMonth\\\\ChangeMonth.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport months from \"../../data/months\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ChangeMonth = () => {\n  _s();\n\n  const [actualDate, setActualDate] = useState(new Date());\n  const calendar = [];\n\n  const onDecrease = () => {\n    if (actualDate.getMonth() === 0) {\n      setActualDate(prevDate => {\n        const newDate = { ...prevDate\n        };\n        newDate.setMonth(11);\n        newDate.setFullYear(newDate.getFullYear() - 1);\n        return newDate;\n      });\n    } else {\n      setActualDate(prevDate => {\n        const newDate = { ...prevDate\n        };\n        newDate.setMonth(newDate.getMonth() - 1);\n        return newDate;\n      });\n    }\n  };\n\n  const onIncrease = () => {\n    if (currentMonth === 11) {\n      setCurrentMonth(prevMonth => prevMonth = 0);\n      setCurrentYear(prevYear => prevYear + 1);\n    } else {\n      setCurrentMonth(prevMonth => prevMonth + 1);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onDecrease,\n        children: \" decrement - \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: `${months[currentMonth]} ${currentYear}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onIncrease,\n        children: \" increment + \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ChangeMonth, \"4uRkuph70bMJshE3m7k6cd1Cfz8=\");\n\n_c = ChangeMonth;\nexport default ChangeMonth;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangeMonth\");","map":{"version":3,"sources":["C:/DRIVER D/BIT JS/typescript projects/react-typescript-demo/src/components/ChangeMonth/ChangeMonth.tsx"],"names":["React","useState","months","ChangeMonth","actualDate","setActualDate","Date","calendar","onDecrease","getMonth","prevDate","newDate","setMonth","setFullYear","getFullYear","onIncrease","currentMonth","setCurrentMonth","prevMonth","setCurrentYear","prevYear","currentYear"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;;;;AAIA,MAAMC,WAAuC,GAAG,MAAM;AAAA;;AACpD,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,IAAIK,IAAJ,EAAD,CAA5C;AAEA,QAAMC,QAAQ,GAAG,EAAjB;;AAEA,QAAMC,UAAU,GAAG,MAAM;AACvB,QAAIJ,UAAU,CAACK,QAAX,OAA0B,CAA9B,EAAiC;AAC/BJ,MAAAA,aAAa,CAAEK,QAAD,IAAc;AAC1B,cAAMC,OAAO,GAAG,EAAE,GAAGD;AAAL,SAAhB;AACAC,QAAAA,OAAO,CAACC,QAAR,CAAiB,EAAjB;AACAD,QAAAA,OAAO,CAACE,WAAR,CAAoBF,OAAO,CAACG,WAAR,KAAwB,CAA5C;AACA,eAAOH,OAAP;AACD,OALY,CAAb;AAMD,KAPD,MAOO;AACLN,MAAAA,aAAa,CAAEK,QAAD,IAAc;AAC1B,cAAMC,OAAO,GAAG,EAAE,GAAGD;AAAL,SAAhB;AACAC,QAAAA,OAAO,CAACC,QAAR,CAAiBD,OAAO,CAACF,QAAR,KAAqB,CAAtC;AACA,eAAOE,OAAP;AACD,OAJY,CAAb;AAKD;AACF,GAfD;;AAiBA,QAAMI,UAAU,GAAG,MAAM;AACvB,QAAIC,YAAY,KAAK,EAArB,EAAyB;AACvBC,MAAAA,eAAe,CAAEC,SAAD,IAAgBA,SAAS,GAAG,CAA7B,CAAf;AACAC,MAAAA,cAAc,CAAEC,QAAD,IAAcA,QAAQ,GAAG,CAA1B,CAAd;AACD,KAHD,MAGO;AACLH,MAAAA,eAAe,CAAEC,SAAD,IAAeA,SAAS,GAAG,CAA5B,CAAf;AACD;AACF,GAPD;;AASA,sBACE;AAAA,4BACE;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAEV,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAK,GAAEN,MAAM,CAACc,YAAD,CAAe,IAAGK,WAAY;AAA3C;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAEN,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBADF;AAUD,CAzCD;;GAAMZ,W;;KAAAA,W;AA2CN,eAAeA,WAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport months from \"../../data/months\";\r\n\r\ntype ChangeMonthProps = {};\r\n\r\nconst ChangeMonth: React.FC<ChangeMonthProps> = () => {\r\n  const [actualDate, setActualDate] = useState(new Date());\r\n\r\n  const calendar = [];\r\n\r\n  const onDecrease = () => {\r\n    if (actualDate.getMonth() === 0) {\r\n      setActualDate((prevDate) => {\r\n        const newDate = { ...prevDate };\r\n        newDate.setMonth(11);\r\n        newDate.setFullYear(newDate.getFullYear() - 1);\r\n        return newDate;\r\n      });\r\n    } else {\r\n      setActualDate((prevDate) => {\r\n        const newDate = { ...prevDate };\r\n        newDate.setMonth(newDate.getMonth() - 1);\r\n        return newDate;\r\n      });\r\n    }\r\n  };\r\n\r\n  const onIncrease = () => {\r\n    if (currentMonth === 11) {\r\n      setCurrentMonth((prevMonth) => (prevMonth = 0));\r\n      setCurrentYear((prevYear) => prevYear + 1);\r\n    } else {\r\n      setCurrentMonth((prevMonth) => prevMonth + 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <button onClick={onDecrease}> decrement - </button>\r\n        <p>{`${months[currentMonth]} ${currentYear}`}</p>\r\n        <button onClick={onIncrease}> increment + </button>\r\n      </div>\r\n      <div></div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChangeMonth;\r\n"]},"metadata":{},"sourceType":"module"}