{"ast":null,"code":"var _jsxFileName = \"C:\\\\DRIVER D\\\\BIT JS\\\\typescript projects\\\\react-typescript-demo\\\\src\\\\ui\\\\TodoListLayout.tsx\";\nimport React from \"react\";\nimport \"./TodoListLayout.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoListLayout = _ref => {\n  let {\n    type,\n    children,\n    changeTodoState,\n    toggleTodoStatus\n  } = _ref;\n  const isActive = type === \"active\";\n  const contentToRender = children.props.items.length === 0 ? isActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Start being productive! Add some todos.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Well done! You completed all your tasks.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this) : children;\n\n  const dragOverHandler = event => {\n    console.log(event.dataTransfer.types);\n\n    if (event.dataTransfer && event.dataTransfer.types[0] === \"todo_id\") {\n      event.preventDefault();\n      event.stopPropagation();\n      event.currentTarget.classList.add(\"drag-target-active\");\n    }\n\n    return false;\n  };\n\n  const dropHandler = event => {\n    event.preventDefault();\n    const todoId = event.dataTransfer.getData(\"todo_id\");\n    console.log(\"class list\", event.currentTarget.classList);\n    toggleTodoStatus(todoId);\n    event.currentTarget.classList.remove(\"drag-target-active\");\n  };\n\n  const dragLeaveHandler = event => {\n    event.currentTarget.classList.remove(\"drag-target-active\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `todos-layout-${isActive ? \"active\" : \"finished\"}`,\n    onDragOver: event => dragOverHandler(event),\n    onDrop: event => dropHandler(event),\n    onDragLeave: event => dragLeaveHandler(event),\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: isActive ? \"active-layout-heading\" : \"finished-layout-heading\",\n      children: isActive ? \"ACTIVE TODOS\" : \"FINISHED TODOS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), contentToRender]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TodoListLayout;\nexport default TodoListLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoListLayout\");","map":{"version":3,"sources":["C:/DRIVER D/BIT JS/typescript projects/react-typescript-demo/src/ui/TodoListLayout.tsx"],"names":["React","TodoListLayout","type","children","changeTodoState","toggleTodoStatus","isActive","contentToRender","props","items","length","dragOverHandler","event","console","log","dataTransfer","types","preventDefault","stopPropagation","currentTarget","classList","add","dropHandler","todoId","getData","remove","dragLeaveHandler"],"mappings":";AAAA,OAAOA,KAAP,MAAiC,OAAjC;AAEA,OAAO,sBAAP;;;AAWA,MAAMC,cAAyC,GAAG,QAA2D;AAAA,MAA1D;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA,eAAlB;AAAmCC,IAAAA;AAAnC,GAA0D;AAC3G,QAAMC,QAAQ,GAAGJ,IAAI,KAAK,QAA1B;AAEA,QAAMK,eAAe,GACnBJ,QAAQ,CAACK,KAAT,CAAeC,KAAf,CAAqBC,MAArB,KAAgC,CAAhC,GACEJ,QAAQ,gBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADM,gBAGN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJJ,GAOEH,QARJ;;AAWA,QAAMQ,eAAe,GAAIC,KAAD,IAAsB;AAC1CC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,YAAN,CAAmBC,KAA/B;;AACF,QAAIJ,KAAK,CAACG,YAAN,IAAsBH,KAAK,CAACG,YAAN,CAAmBC,KAAnB,CAAyB,CAAzB,MAAgC,SAA1D,EAAqE;AACnEJ,MAAAA,KAAK,CAACK,cAAN;AACAL,MAAAA,KAAK,CAACM,eAAN;AACCN,MAAAA,KAAK,CAACO,aAAP,CAAwCC,SAAxC,CAAkDC,GAAlD,CACE,oBADF;AAGD;;AACD,WAAO,KAAP;AACD,GAVD;;AAYA,QAAMC,WAAW,GAAIV,KAAD,IAAsB;AACxCA,IAAAA,KAAK,CAACK,cAAN;AACA,UAAMM,MAAM,GAAGX,KAAK,CAACG,YAAN,CAAmBS,OAAnB,CAA2B,SAA3B,CAAf;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,KAAK,CAACO,aAAP,CAAwCC,SAAjE;AACAf,IAAAA,gBAAgB,CAACkB,MAAD,CAAhB;AACCX,IAAAA,KAAK,CAACO,aAAP,CAAwCC,SAAxC,CAAkDK,MAAlD,CACE,oBADF;AAGD,GARD;;AAUA,QAAMC,gBAAgB,GAAId,KAAD,IAAsB;AAC5CA,IAAAA,KAAK,CAACO,aAAP,CAAwCC,SAAxC,CAAkDK,MAAlD,CACE,oBADF;AAGD,GAJD;;AAMA,sBACE;AACE,IAAA,SAAS,EAAG,gBAAenB,QAAQ,GAAG,QAAH,GAAc,UAAW,EAD9D;AAEE,IAAA,UAAU,EAAGM,KAAD,IAAWD,eAAe,CAACC,KAAD,CAFxC;AAGE,IAAA,MAAM,EAAGA,KAAD,IAAWU,WAAW,CAACV,KAAD,CAHhC;AAIE,IAAA,WAAW,EAAGA,KAAD,IAAWc,gBAAgB,CAACd,KAAD,CAJ1C;AAAA,4BAME;AACE,MAAA,SAAS,EACPN,QAAQ,GAAG,uBAAH,GAA6B,yBAFzC;AAAA,gBAKGA,QAAQ,GAAG,cAAH,GAAoB;AAL/B;AAAA;AAAA;AAAA;AAAA,YANF,EAaGC,eAbH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA3DD;;KAAMN,c;AA6DN,eAAeA,cAAf","sourcesContent":["import React, { DragEvent } from \"react\";\r\n\r\nimport \"./TodoListLayout.css\";\r\n\r\ninterface ListLayoutProps {\r\n  children: {\r\n    props: object;\r\n  };\r\n  type: \"active\" | \"finished\";\r\n  changeTodoState: () => void;\r\n  toggleTodoStatus: (todoId: string) => void;\r\n}\r\n\r\nconst TodoListLayout: React.FC<ListLayoutProps> = ({ type, children, changeTodoState, toggleTodoStatus }) => {\r\n  const isActive = type === \"active\";\r\n\r\n  const contentToRender =\r\n    children.props.items.length === 0 ? (\r\n      isActive ? (\r\n        <p>Start being productive! Add some todos.</p>\r\n      ) : (\r\n        <p>Well done! You completed all your tasks.</p>\r\n      )\r\n    ) : (\r\n      children\r\n    );\r\n\r\n  const dragOverHandler = (event: DragEvent) => {\r\n      console.log(event.dataTransfer.types);\r\n    if (event.dataTransfer && event.dataTransfer.types[0] === \"todo_id\") {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      (event.currentTarget as HTMLDivElement).classList.add(\r\n        \"drag-target-active\"\r\n      );\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const dropHandler = (event: DragEvent) => {\r\n    event.preventDefault();\r\n    const todoId = event.dataTransfer.getData(\"todo_id\");\r\n    console.log(\"class list\",(event.currentTarget as HTMLDivElement).classList);\r\n    toggleTodoStatus(todoId);\r\n    (event.currentTarget as HTMLDivElement).classList.remove(\r\n      \"drag-target-active\"\r\n    );\r\n  };\r\n\r\n  const dragLeaveHandler = (event: DragEvent) => {\r\n    (event.currentTarget as HTMLDivElement).classList.remove(\r\n      \"drag-target-active\"\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`todos-layout-${isActive ? \"active\" : \"finished\"}`}\r\n      onDragOver={(event) => dragOverHandler(event)}\r\n      onDrop={(event) => dropHandler(event)}\r\n      onDragLeave={(event) => dragLeaveHandler(event)}\r\n    >\r\n      <h2\r\n        className={\r\n          isActive ? \"active-layout-heading\" : \"finished-layout-heading\"\r\n        }\r\n      >\r\n        {isActive ? \"ACTIVE TODOS\" : \"FINISHED TODOS\"}\r\n      </h2>\r\n      {contentToRender}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoListLayout;\r\n"]},"metadata":{},"sourceType":"module"}