{"ast":null,"code":"var _jsxFileName = \"C:\\\\DRIVER D\\\\BIT JS\\\\typescript projects\\\\react-typescript-demo\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport TodoList from \"./components/TodoList\";\nimport NewTodo from \"./components/NewTodo\";\nimport SearchBar from \"./components/SearchBar/SearchBar\";\nimport { ProjectStatus } from \"./model/todo.model\";\nimport TodoListLayout from \"./ui/TodoListLayout\";\nimport { stringifyDate, groupTodosByDate } from \"./util/util-functions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [todos, setTodos] = useState(() => {\n    const savedTodos = localStorage.getItem(\"todos\");\n    let initialTodos = [];\n\n    if (savedTodos) {\n      initialTodos = JSON.parse(savedTodos);\n    }\n\n    return initialTodos;\n  });\n  useEffect(() => {\n    let hasChange = false; //set today at midnight\n\n    const today = new Date().setHours(0, 0, 0, 0);\n    const newTodos = todos.map(todo => {\n      const todoDate = new Date(todo.fullDate).getTime();\n\n      if (todoDate < today) {\n        hasChange = true;\n        return { ...todo,\n          status: ProjectStatus.Overdue\n        };\n      }\n\n      return todo;\n    });\n\n    if (hasChange) {\n      setTodos(newTodos);\n    }\n  }, []);\n\n  const todoAddHandler = (text, date, priority) => {\n    setTodos(prevTodos => {\n      return [...prevTodos, {\n        id: Math.floor(Math.random() * (100000 - 10000) + 10000).toString(),\n        text: text,\n        status: ProjectStatus.Active,\n        priority: priority,\n        date: stringifyDate(date),\n        createdOn: new Date(),\n        fullDate: new Date(date)\n      }];\n    });\n  };\n\n  const todoDeleteHandler = todoId => {\n    setTodos(prevTodos => prevTodos.filter(todo => todo.id !== todoId));\n  }; // FOR CHECKBOX\n\n\n  const toggleTodoStatus = (todoId, status) => {\n    // const todoIndex = todos.findIndex((todo) => todo.id === todoId);\n    // const newTodos = [...todos];\n    // const newTodo: Todo = todos[todoIndex];\n    // status === ProjectStatus.Active\n    //   ? (newTodo.status = ProjectStatus.Finished)\n    //   : (newTodo.status = ProjectStatus.Active);\n    // newTodos[todoIndex] = newTodo;\n    // setTodos(newTodos);\n    console.log(\"clicked\");\n    const newStatus = status === ProjectStatus.Active ? ProjectStatus.Finished : ProjectStatus.Active;\n    setTodos(prevTodos => {\n      return prevTodos.map(todo => {\n        return todo.id === todoId ? { ...todo,\n          status: newStatus\n        } : todo;\n      });\n    });\n  }; // THIS IS FOR DRAG\n\n\n  const changeTodoStateHandler = (todoId, status) => {\n    const todoIndex = todos.findIndex(todo => todo.id === todoId);\n    const newTodos = [...todos];\n    const newTodo = todos[todoIndex];\n    status !== ProjectStatus.Active ? newTodo.status = ProjectStatus.Finished : newTodo.status = ProjectStatus.Active;\n    newTodos[todoIndex] = newTodo;\n    setTodos(newTodos);\n  };\n\n  const filterByQuery = query => {\n    const grouped = groupTodosByDate(todos);\n    let searchedTodos = [];\n    const date = query;\n\n    if (grouped[date]) {\n      searchedTodos = grouped[date];\n    }\n  };\n\n  const searchHandler = event => {\n    setQuery(event.target.value);\n\n    if (event.target.value.trim() !== \"\") {\n      filterByQuery(event.target.value.trim());\n    }\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(NewTodo, {\n        onAddTodo: todoAddHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n        query: query,\n        onSearch: searchHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoListLayout, {\n        type: \"active\",\n        changeTodoStateDrag: changeTodoStateHandler,\n        children: /*#__PURE__*/_jsxDEV(TodoList, {\n          list: \"active\",\n          items: todos,\n          onToggleTodoStatus: toggleTodoStatus,\n          onDeleteTodo: todoDeleteHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoListLayout, {\n        type: \"finished\",\n        changeTodoStateDrag: changeTodoStateHandler,\n        children: /*#__PURE__*/_jsxDEV(TodoList, {\n          list: \"finished\",\n          items: todos,\n          onToggleTodoStatus: toggleTodoStatus,\n          onDeleteTodo: todoDeleteHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"r4+XvfR77kZMoqdd4oo+DuIRaco=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/DRIVER D/BIT JS/typescript projects/react-typescript-demo/src/App.tsx"],"names":["React","useEffect","useState","TodoList","NewTodo","SearchBar","ProjectStatus","TodoListLayout","stringifyDate","groupTodosByDate","App","query","setQuery","todos","setTodos","savedTodos","localStorage","getItem","initialTodos","JSON","parse","hasChange","today","Date","setHours","newTodos","map","todo","todoDate","fullDate","getTime","status","Overdue","todoAddHandler","text","date","priority","prevTodos","id","Math","floor","random","toString","Active","createdOn","todoDeleteHandler","todoId","filter","toggleTodoStatus","console","log","newStatus","Finished","changeTodoStateHandler","todoIndex","findIndex","newTodo","filterByQuery","grouped","searchedTodos","searchHandler","event","target","value","trim","setItem","stringify"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, useEffect, useState } from \"react\";\n\nimport TodoList from \"./components/TodoList\";\nimport NewTodo from \"./components/NewTodo\";\nimport SearchBar from \"./components/SearchBar/SearchBar\";\n\nimport { ProjectStatus, Todo } from \"./model/todo.model\";\n\nimport TodoListLayout from \"./ui/TodoListLayout\";\n\nimport {\n  stringifyDate,\n  groupTodosByDate,\n  filterTodos,\n} from \"./util/util-functions\";\n\nconst App: React.FC = () => {\n  const [query, setQuery] = useState<string>(\"\");\n  const [todos, setTodos] = useState<Todo[]>(() => {\n    const savedTodos = localStorage.getItem(\"todos\");\n    let initialTodos: Todo[] = [];\n    if (savedTodos) {\n      initialTodos = JSON.parse(savedTodos);\n    }\n    return initialTodos;\n  });\n\n\n  useEffect(() => {\n    let hasChange = false;\n    //set today at midnight\n    const today = new Date().setHours(0, 0, 0, 0);\n    const newTodos = todos.map((todo) => {\n      const todoDate = new Date(todo.fullDate).getTime();\n      if (todoDate < today) {\n        hasChange = true;\n        return {\n          ...todo,\n          status: ProjectStatus.Overdue,\n        };\n      }\n      return todo;\n    });\n\n    if (hasChange) {\n      setTodos(newTodos);\n    }\n  }, []);\n\n  const todoAddHandler = (text: string, date: Date, priority: string) => {\n    setTodos((prevTodos) => {\n      return [\n        ...prevTodos,\n        {\n          id: Math.floor(Math.random() * (100000 - 10000) + 10000).toString(),\n          text: text,\n          status: ProjectStatus.Active,\n          priority: priority,\n          date: stringifyDate(date),\n          createdOn: new Date(),\n          fullDate: new Date(date),\n        },\n      ];\n    });\n  };\n\n  const todoDeleteHandler = (todoId: string) => {\n    setTodos((prevTodos) => prevTodos.filter((todo) => todo.id !== todoId));\n  };\n\n  // FOR CHECKBOX\n  const toggleTodoStatus = (todoId: string, status: ProjectStatus) => {\n    // const todoIndex = todos.findIndex((todo) => todo.id === todoId);\n    // const newTodos = [...todos];\n    // const newTodo: Todo = todos[todoIndex];\n    // status === ProjectStatus.Active\n    //   ? (newTodo.status = ProjectStatus.Finished)\n    //   : (newTodo.status = ProjectStatus.Active);\n    // newTodos[todoIndex] = newTodo;\n    // setTodos(newTodos);\n    console.log(\"clicked\");\n    const newStatus =\n      status === ProjectStatus.Active\n        ? ProjectStatus.Finished\n        : ProjectStatus.Active;\n    setTodos((prevTodos) => {\n      return prevTodos.map((todo) => {\n        return todo.id === todoId ? { ...todo, status: newStatus } : todo;\n      });\n    });\n  };\n\n  // THIS IS FOR DRAG\n  const changeTodoStateHandler = (todoId: string, status: ProjectStatus) => {\n    const todoIndex = todos.findIndex((todo) => todo.id === todoId);\n    const newTodos = [...todos];\n    const newTodo: Todo = todos[todoIndex];\n    status !== ProjectStatus.Active\n      ? (newTodo.status = ProjectStatus.Finished)\n      : (newTodo.status = ProjectStatus.Active);\n    newTodos[todoIndex] = newTodo;\n    setTodos(newTodos);\n  };\n\n  const filterByQuery = (query: string) => {\n    const grouped: {\n      [prop: string]: Todo[];\n    } = groupTodosByDate(todos);\n    let searchedTodos: Todo[] = [];\n    const date: string = query;\n    if (grouped[date]) {\n      searchedTodos = grouped[date];\n    } \n  };\n\n  const searchHandler = (event: ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    if (event.target.value.trim() !== \"\") {\n      filterByQuery(event.target.value.trim());\n    } \n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n\n  return (\n    <>\n      <div className=\"App\">\n        <NewTodo onAddTodo={todoAddHandler} />\n        <SearchBar query={query} onSearch={searchHandler} />\n        <TodoListLayout\n          type={\"active\"}\n          changeTodoStateDrag={changeTodoStateHandler}\n        >\n          <TodoList\n            list={\"active\"}\n            items={todos}\n            onToggleTodoStatus={toggleTodoStatus}\n            onDeleteTodo={todoDeleteHandler}\n          />\n        </TodoListLayout>\n        <TodoListLayout\n          type={\"finished\"}\n          changeTodoStateDrag={changeTodoStateHandler}\n        >\n          <TodoList\n            list={\"finished\"}\n            items={todos}\n            onToggleTodoStatus={toggleTodoStatus}\n            onDeleteTodo={todoDeleteHandler}\n          />\n        </TodoListLayout>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}