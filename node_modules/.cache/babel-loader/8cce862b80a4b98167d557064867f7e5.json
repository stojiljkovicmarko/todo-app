{"ast":null,"code":"var _jsxFileName = \"C:\\\\DRIVER D\\\\BIT JS\\\\typescript projects\\\\react-typescript-demo\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport TodoList from \"./components/TodoList\";\nimport NewTodo from \"./components/NewTodo\";\nimport { ProjectStatus } from \"./model/todo.model\";\nimport TodoListLayout from \"./ui/TodoListLayout\";\nimport { stringifyDate, groupTodosByDate } from \"./util/util-functions\";\nimport SearchBar from \"./components/SearchBar/SearchBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [searchText, setSearchText] = useState(\"\");\n  const [todos, setTodos] = useState(() => {\n    const savedTodos = localStorage.getItem(\"todos\");\n    let initialTodos = [];\n\n    if (savedTodos) {\n      initialTodos = JSON.parse(savedTodos);\n    }\n\n    return initialTodos;\n  });\n  let activeTodos = todos.filter(todo => todo.status === ProjectStatus.Active);\n  let finishedTodos = todos.filter(todo => todo.status === ProjectStatus.Finished);\n\n  const todoAddHandler = (text, date, priority) => {\n    setTodos(prevTodos => {\n      return [...prevTodos, {\n        id: Math.floor(Math.random() * (100000 - 10000) + 10000).toString(),\n        text: text,\n        status: ProjectStatus.Active,\n        priority: priority,\n        date: stringifyDate(date),\n        createdOn: new Date()\n      }];\n    });\n  };\n\n  const todoDeleteHandler = todoId => {\n    setTodos(prevTodos => prevTodos.filter(todo => todo.id !== todoId));\n  };\n\n  const toggleTodoStatus = (todoId, status) => {\n    const todoIndex = todos.findIndex(todo => todo.id === todoId);\n    const newTodos = [...todos];\n    const newTodo = todos[todoIndex];\n    status === ProjectStatus.Active ? newTodo.status = ProjectStatus.Finished : newTodo.status = ProjectStatus.Active;\n    newTodos[todoIndex] = newTodo;\n    setTodos(newTodos);\n  };\n\n  const changeTodoState = (todoId, status) => {\n    const todoIndex = todos.findIndex(todo => todo.id === todoId);\n    const newTodos = [...todos];\n    const newTodo = todos[todoIndex];\n    status !== ProjectStatus.Active ? newTodo.status = ProjectStatus.Finished : newTodo.status = ProjectStatus.Active;\n    newTodos[todoIndex] = newTodo;\n    setTodos(newTodos);\n  };\n\n  const searchHandler = event => {\n    setSearchText(event.target.value);\n  };\n\n  const showTodaysTodosHandler = () => {\n    const grouped = groupTodosByDate(todos);\n    console.log(grouped);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(NewTodo, {\n        onAddTodo: todoAddHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: searchHandler,\n        onShowTodaysTodos: showTodaysTodosHandler,\n        searchText: searchText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoListLayout, {\n        type: \"active\",\n        changeTodoStateDrag: changeTodoState,\n        children: /*#__PURE__*/_jsxDEV(TodoList, {\n          items: activeTodos,\n          onChangeTodoStatus: toggleTodoStatus,\n          onDeleteTodo: todoDeleteHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoListLayout, {\n        type: \"finished\",\n        changeTodoStateDrag: changeTodoState,\n        children: /*#__PURE__*/_jsxDEV(TodoList, {\n          items: finishedTodos,\n          onChangeTodoStatus: toggleTodoStatus,\n          onDeleteTodo: todoDeleteHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"/BtAP5U3654nxZFusLZigm8cI4Q=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/DRIVER D/BIT JS/typescript projects/react-typescript-demo/src/App.tsx"],"names":["React","useEffect","useState","TodoList","NewTodo","ProjectStatus","TodoListLayout","stringifyDate","groupTodosByDate","SearchBar","App","searchText","setSearchText","todos","setTodos","savedTodos","localStorage","getItem","initialTodos","JSON","parse","activeTodos","filter","todo","status","Active","finishedTodos","Finished","todoAddHandler","text","date","priority","prevTodos","id","Math","floor","random","toString","createdOn","Date","todoDeleteHandler","todoId","toggleTodoStatus","todoIndex","findIndex","newTodos","newTodo","changeTodoState","searchHandler","event","target","value","showTodaysTodosHandler","grouped","console","log","setItem","stringify"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, useEffect, useState } from \"react\";\n\nimport TodoList from \"./components/TodoList\";\nimport NewTodo from \"./components/NewTodo\";\n\nimport { ProjectStatus, Todo } from \"./model/todo.model\";\nimport TodoListLayout from \"./ui/TodoListLayout\";\nimport { stringifyDate, groupTodosByDate } from \"./util/util-functions\";\nimport SearchBar from \"./components/SearchBar/SearchBar\";\n\nconst App: React.FC = () => {\n  const [searchText, setSearchText] = useState<string>(\"\");\n  const [todos, setTodos] = useState<Todo[]>(() => {\n    const savedTodos = localStorage.getItem(\"todos\");\n    let initialTodos: Todo[] = [];\n    if (savedTodos) {\n      initialTodos = JSON.parse(savedTodos);\n    }\n    return initialTodos;\n  });\n\n  let activeTodos = todos.filter(\n    (todo) => todo.status === ProjectStatus.Active\n  );\n\n  let finishedTodos = todos.filter(\n    (todo) => todo.status === ProjectStatus.Finished\n  );\n\n  const todoAddHandler = (text: string, date: Date, priority: string) => {\n    setTodos((prevTodos) => {\n      return [\n        ...prevTodos,\n        {\n          id: Math.floor(Math.random() * (100000 - 10000) + 10000).toString(),\n          text: text,\n          status: ProjectStatus.Active,\n          priority: priority,\n          date: stringifyDate(date),\n          createdOn: new Date(),\n        },\n      ];\n    });\n  };\n\n  const todoDeleteHandler = (todoId: string) => {\n    setTodos((prevTodos) => prevTodos.filter((todo) => todo.id !== todoId));\n  };\n\n  const toggleTodoStatus = (todoId: string, status: ProjectStatus) => {\n    const todoIndex = todos.findIndex((todo) => todo.id === todoId);\n    const newTodos = [...todos];\n    const newTodo: Todo = todos[todoIndex];\n    status === ProjectStatus.Active\n      ? (newTodo.status = ProjectStatus.Finished)\n      : (newTodo.status = ProjectStatus.Active);\n    newTodos[todoIndex] = newTodo;\n    setTodos(newTodos);\n  };\n\n  const changeTodoState = (todoId: string, status: ProjectStatus) => {\n    const todoIndex = todos.findIndex((todo) => todo.id === todoId);\n    const newTodos = [...todos];\n    const newTodo: Todo = todos[todoIndex];\n    status !== ProjectStatus.Active\n      ? (newTodo.status = ProjectStatus.Finished)\n      : (newTodo.status = ProjectStatus.Active);\n    newTodos[todoIndex] = newTodo;\n    setTodos(newTodos);\n  };\n\n  const searchHandler = (event: ChangeEvent<HTMLInputElement>) => {\n    setSearchText(event.target.value);\n  };\n\n  const showTodaysTodosHandler = () => {\n    const grouped = groupTodosByDate(todos);\n    console.log(grouped);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n\n  return (\n    <>\n      <div className=\"App\">\n        <NewTodo onAddTodo={todoAddHandler} />\n        <SearchBar\n          onSearch={searchHandler}\n          onShowTodaysTodos={showTodaysTodosHandler}\n          searchText={searchText}\n        />\n        <TodoListLayout type={\"active\"} changeTodoStateDrag={changeTodoState}>\n          <TodoList\n            items={activeTodos}\n            onChangeTodoStatus={toggleTodoStatus}\n            onDeleteTodo={todoDeleteHandler}\n          />\n        </TodoListLayout>\n        <TodoListLayout type={\"finished\"} changeTodoStateDrag={changeTodoState}>\n          <TodoList\n            items={finishedTodos}\n            onChangeTodoStatus={toggleTodoStatus}\n            onDeleteTodo={todoDeleteHandler}\n          />\n        </TodoListLayout>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}