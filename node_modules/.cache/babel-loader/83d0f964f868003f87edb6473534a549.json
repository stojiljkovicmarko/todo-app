{"ast":null,"code":"var _jsxFileName = \"C:\\\\DRIVER D\\\\BIT JS\\\\typescript projects\\\\react-typescript-demo\\\\src\\\\components\\\\TodoList.tsx\";\nimport React from \"react\";\nimport \"./TodoList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoList = props => {\n  const dragStartHandler = (event, todoId) => {\n    event.dataTransfer.setData(\"todo_id\", todoId);\n    event.dataTransfer.effectAllowed = \"move\";\n  };\n\n  const dragEnterHandler = (event, index) => {\n    event.currentTarget.style.borderColor = \"blue\";\n    console.log(index);\n    props.insertTodoOnNewPosition(index);\n  };\n\n  const dragLeaveHandler = event => {\n    event.currentTarget.style.borderColor = \"\";\n  };\n\n  const dropHandler = event => {\n    event.currentTarget.style.borderColor = \"\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: props.items.map((todo, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      draggable: \"true\",\n      className: `todo ${todo.status === 0 ? \"active-todo\" : \"finished-todo\"}`,\n      onDragStart: event => dragStartHandler(event, todo.id),\n      onDragEnter: event => dragEnterHandler(event, index),\n      onDragLeave: event => dragLeaveHandler(event),\n      onDrop: event => dropHandler(event),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"draggable\",\n          children: \"\\u205D\\u205D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), todo.text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: props.onChangeTodoStatus.bind(null, todo.id, todo.status),\n          children: \"\\u270E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: props.onDeleteTodo.bind(null, todo.id),\n          children: \"\\u2716\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, todo.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["C:/DRIVER D/BIT JS/typescript projects/react-typescript-demo/src/components/TodoList.tsx"],"names":["React","TodoList","props","dragStartHandler","event","todoId","dataTransfer","setData","effectAllowed","dragEnterHandler","index","currentTarget","style","borderColor","console","log","insertTodoOnNewPosition","dragLeaveHandler","dropHandler","items","map","todo","status","id","text","onChangeTodoStatus","bind","onDeleteTodo"],"mappings":";AAAA,OAAOA,KAAP,MAAiC,OAAjC;AAGA,OAAO,gBAAP;;;AASA,MAAMC,QAAiC,GAAIC,KAAD,IAAW;AACnD,QAAMC,gBAAgB,GAAG,CACvBC,KADuB,EAEvBC,MAFuB,KAGpB;AACHD,IAAAA,KAAK,CAACE,YAAN,CAAmBC,OAAnB,CAA2B,SAA3B,EAAsCF,MAAtC;AACAD,IAAAA,KAAK,CAACE,YAAN,CAAmBE,aAAnB,GAAmC,MAAnC;AACD,GAND;;AAQA,QAAMC,gBAAgB,GAAG,CAACL,KAAD,EAAmBM,KAAnB,KAAqC;AAC3DN,IAAAA,KAAK,CAACO,aAAP,CAAuCC,KAAvC,CAA6CC,WAA7C,GAA2D,MAA3D;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACAR,IAAAA,KAAK,CAACc,uBAAN,CAA8BN,KAA9B;AACD,GAJD;;AAMA,QAAMO,gBAAgB,GAAIb,KAAD,IAAsB;AAC5CA,IAAAA,KAAK,CAACO,aAAP,CAAuCC,KAAvC,CAA6CC,WAA7C,GAA2D,EAA3D;AACD,GAFD;;AAIA,QAAMK,WAAW,GAAId,KAAD,IAAsB;AACvCA,IAAAA,KAAK,CAACO,aAAP,CAAuCC,KAAvC,CAA6CC,WAA7C,GAA2D,EAA3D;AACD,GAFD;;AAIA,sBACE;AAAA,cACGX,KAAK,CAACiB,KAAN,CAAYC,GAAZ,CAAgB,CAACC,IAAD,EAAOX,KAAP,kBACf;AACE,MAAA,SAAS,EAAC,MADZ;AAGE,MAAA,SAAS,EAAG,QACVW,IAAI,CAACC,MAAL,KAAgB,CAAhB,GAAoB,aAApB,GAAoC,eACrC,EALH;AAME,MAAA,WAAW,EAAGlB,KAAD,IAAWD,gBAAgB,CAACC,KAAD,EAAQiB,IAAI,CAACE,EAAb,CAN1C;AAOE,MAAA,WAAW,EAAGnB,KAAD,IAAWK,gBAAgB,CAACL,KAAD,EAAQM,KAAR,CAP1C;AAQE,MAAA,WAAW,EAAGN,KAAD,IAAWa,gBAAgB,CAACb,KAAD,CAR1C;AASE,MAAA,MAAM,EAAGA,KAAD,IAAWc,WAAW,CAACd,KAAD,CAThC;AAAA,8BAWE;AAAA,gCACE;AAAM,UAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGiB,IAAI,CAACG,IAFR;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAeE;AAAA,gCACE;AACE,UAAA,OAAO,EAAEtB,KAAK,CAACuB,kBAAN,CAAyBC,IAAzB,CACP,IADO,EAEPL,IAAI,CAACE,EAFE,EAGPF,IAAI,CAACC,MAHE,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE;AAAQ,UAAA,OAAO,EAAEpB,KAAK,CAACyB,YAAN,CAAmBD,IAAnB,CAAwB,IAAxB,EAA8BL,IAAI,CAACE,EAAnC,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA,OAEOF,IAAI,CAACE,EAFZ;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD,CA3DD;;KAAMtB,Q;AA6DN,eAAeA,QAAf","sourcesContent":["import React, { DragEvent } from \"react\";\r\nimport { ProjectStatus } from \"../model/todo.model\";\r\n\r\nimport \"./TodoList.css\";\r\n\r\ninterface TodoListProps {\r\n  items: { id: string; text: string; status: ProjectStatus }[];\r\n  onChangeTodoStatus: (id: string, newStatus: ProjectStatus) => void;\r\n  onDeleteTodo: (id: string) => void;\r\n  insertTodoOnNewPosition: (index: number) => void;\r\n}\r\n\r\nconst TodoList: React.FC<TodoListProps> = (props) => {\r\n  const dragStartHandler = (\r\n    event: DragEvent<HTMLLIElement>,\r\n    todoId: string\r\n  ) => {\r\n    event.dataTransfer.setData(\"todo_id\", todoId);\r\n    event.dataTransfer.effectAllowed = \"move\";\r\n  };\r\n\r\n  const dragEnterHandler = (event: DragEvent, index: number) => {\r\n    (event.currentTarget as HTMLLIElement).style.borderColor = \"blue\";\r\n    console.log(index);\r\n    props.insertTodoOnNewPosition(index);\r\n  };\r\n\r\n  const dragLeaveHandler = (event: DragEvent) => {\r\n    (event.currentTarget as HTMLLIElement).style.borderColor = \"\";\r\n  };\r\n\r\n  const dropHandler = (event: DragEvent) => {\r\n    (event.currentTarget as HTMLLIElement).style.borderColor = \"\";\r\n  };\r\n\r\n  return (\r\n    <ul>\r\n      {props.items.map((todo, index) => (\r\n        <li\r\n          draggable=\"true\"\r\n          key={todo.id}\r\n          className={`todo ${\r\n            todo.status === 0 ? \"active-todo\" : \"finished-todo\"\r\n          }`}\r\n          onDragStart={(event) => dragStartHandler(event, todo.id)}\r\n          onDragEnter={(event) => dragEnterHandler(event, index)}\r\n          onDragLeave={(event) => dragLeaveHandler(event)}\r\n          onDrop={(event) => dropHandler(event)}\r\n        >\r\n          <span>\r\n            <span className=\"draggable\">&#8285;&#8285;</span>\r\n            {todo.text}\r\n          </span>\r\n          <div>\r\n            <button\r\n              onClick={props.onChangeTodoStatus.bind(\r\n                null,\r\n                todo.id,\r\n                todo.status\r\n              )}\r\n            >\r\n              &#9998;\r\n            </button>\r\n            <button onClick={props.onDeleteTodo.bind(null, todo.id)}>\r\n              &#10006;\r\n            </button>\r\n          </div>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n"]},"metadata":{},"sourceType":"module"}