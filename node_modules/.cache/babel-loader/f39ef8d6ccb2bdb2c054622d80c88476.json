{"ast":null,"code":"var _jsxFileName = \"C:\\\\DRIVER D\\\\BIT JS\\\\typescript projects\\\\react-typescript-demo\\\\src\\\\components\\\\TodoList.tsx\";\nimport React from \"react\";\nimport { ProjectStatus } from \"../model/todo.model\";\nimport { filterTodos } from \"../util/util-functions\";\nimport \"./TodoList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoList = _ref => {\n  let {\n    list,\n    items,\n    onToggleTodoStatus,\n    onDeleteTodo,\n    onEditableTodo\n  } = _ref;\n\n  const dragStartHandler = (event, todoId) => {\n    event.dataTransfer.setData(\"todo_id\", todoId);\n    event.dataTransfer.effectAllowed = \"move\";\n  };\n\n  let newItems = [];\n\n  if (list === \"active\") {\n    newItems = filterTodos(items, ProjectStatus.Active);\n  } else {\n    newItems = filterTodos(items, ProjectStatus.Finished);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: newItems.map((todo, index) => {\n      return todo.isEditable ? /*#__PURE__*/_jsxDEV(\"li\", {\n        draggable: \"true\",\n        className: `todo ${todo.status === 0 ? \"active-todo\" : \"finished-todo\"}`,\n        onDragStart: event => dragStartHandler(event, todo.id),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-primary-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              checked: todo.status === 0 ? false : true,\n              type: \"checkbox\",\n              className: todo.priority,\n              onChange: event => {\n                onToggleTodoStatus(todo.id, todo.status, event);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"draggable\",\n              children: \"\\u205D\\u205D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: todo.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"edit__btn\",\n              onClick: onEditableTodo.bind(null, todo.id),\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\u270E\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete__btn\",\n              onClick: onDeleteTodo.bind(null, todo.id),\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\u2716\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-secondary-info\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: todo.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"this is editable\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["C:/DRIVER D/BIT JS/typescript projects/react-typescript-demo/src/components/TodoList.tsx"],"names":["React","ProjectStatus","filterTodos","TodoList","list","items","onToggleTodoStatus","onDeleteTodo","onEditableTodo","dragStartHandler","event","todoId","dataTransfer","setData","effectAllowed","newItems","Active","Finished","map","todo","index","isEditable","status","id","priority","text","bind","date"],"mappings":";AAAA,OAAOA,KAAP,MAAwD,OAAxD;AACA,SAASC,aAAT,QAAoC,qBAApC;AACA,SAASC,WAAT,QAA4B,wBAA5B;AAEA,OAAO,gBAAP;;;AAcA,MAAMC,QAAiC,GAAG,QAMpC;AAAA,MANqC;AACzCC,IAAAA,IADyC;AAEzCC,IAAAA,KAFyC;AAGzCC,IAAAA,kBAHyC;AAIzCC,IAAAA,YAJyC;AAKzCC,IAAAA;AALyC,GAMrC;;AACJ,QAAMC,gBAAgB,GAAG,CACvBC,KADuB,EAEvBC,MAFuB,KAGpB;AACHD,IAAAA,KAAK,CAACE,YAAN,CAAmBC,OAAnB,CAA2B,SAA3B,EAAsCF,MAAtC;AACAD,IAAAA,KAAK,CAACE,YAAN,CAAmBE,aAAnB,GAAmC,MAAnC;AACD,GAND;;AAQA,MAAIC,QAAgB,GAAG,EAAvB;;AAEA,MAAIX,IAAI,KAAK,QAAb,EAAuB;AACrBW,IAAAA,QAAQ,GAAGb,WAAW,CAACG,KAAD,EAAQJ,aAAa,CAACe,MAAtB,CAAtB;AACD,GAFD,MAEO;AACLD,IAAAA,QAAQ,GAAGb,WAAW,CAACG,KAAD,EAAQJ,aAAa,CAACgB,QAAtB,CAAtB;AACD;;AAED,sBACE;AAAA,cACGF,QAAQ,CAACG,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC7B,aAAOD,IAAI,CAACE,UAAL,gBACL;AACE,QAAA,SAAS,EAAC,MADZ;AAGE,QAAA,SAAS,EAAG,QACVF,IAAI,CAACG,MAAL,KAAgB,CAAhB,GAAoB,aAApB,GAAoC,eACrC,EALH;AAME,QAAA,WAAW,EAAGZ,KAAD,IAAWD,gBAAgB,CAACC,KAAD,EAAQS,IAAI,CAACI,EAAb,CAN1C;AAAA,gCAQE;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA,kCACE;AAAA,oCACE;AACE,cAAA,OAAO,EAAEJ,IAAI,CAACG,MAAL,KAAgB,CAAhB,GAAoB,KAApB,GAA4B,IADvC;AAEE,cAAA,IAAI,EAAC,UAFP;AAGE,cAAA,SAAS,EAAEH,IAAI,CAACK,QAHlB;AAIE,cAAA,QAAQ,EAAGd,KAAD,IAAW;AACnBJ,gBAAAA,kBAAkB,CAACa,IAAI,CAACI,EAAN,EAAUJ,IAAI,CAACG,MAAf,EAAuBZ,KAAvB,CAAlB;AACD;AANH;AAAA;AAAA;AAAA;AAAA,oBADF,eASE;AAAM,cAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF,eAUE;AAAA,wBAAMS,IAAI,CAACM;AAAX;AAAA;AAAA;AAAA;AAAA,oBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAaE;AAAA,oCACE;AACE,cAAA,SAAS,EAAC,WADZ;AAEE,cAAA,OAAO,EAAEjB,cAAc,CAACkB,IAAf,CAAoB,IAApB,EAA0BP,IAAI,CAACI,EAA/B,CAFX;AAAA,qCAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,oBADF,eAOE;AACE,cAAA,SAAS,EAAC,aADZ;AAEE,cAAA,OAAO,EAAEhB,YAAY,CAACmB,IAAb,CAAkB,IAAlB,EAAwBP,IAAI,CAACI,EAA7B,CAFX;AAAA,qCAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,eAoCE;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA,iCACE;AAAA,sBAAOJ,IAAI,CAACQ;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBApCF;AAAA,SAEOR,IAAI,CAACI,EAFZ;AAAA;AAAA;AAAA;AAAA,cADK,gBA0CL;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,SAASJ,IAAI,CAACI,EAAd;AAAA;AAAA;AAAA;AAAA,cA1CF;AA8CD,KA/CA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAoDD,CA3ED;;KAAMpB,Q;AA6EN,eAAeA,QAAf","sourcesContent":["import React, { ChangeEvent, DragEvent, useState } from \"react\";\r\nimport { ProjectStatus, Todo } from \"../model/todo.model\";\r\nimport { filterTodos } from \"../util/util-functions\";\r\n\r\nimport \"./TodoList.css\";\r\n\r\ninterface TodoListProps {\r\n  list: string;\r\n  items: Todo[];\r\n  onToggleTodoStatus: (\r\n    id: string,\r\n    newStatus: ProjectStatus,\r\n    event: ChangeEvent\r\n  ) => void;\r\n  onDeleteTodo: (id: string) => void;\r\n  onEditableTodo: (id: string) => void;\r\n}\r\n\r\nconst TodoList: React.FC<TodoListProps> = ({\r\n  list,\r\n  items,\r\n  onToggleTodoStatus,\r\n  onDeleteTodo,\r\n  onEditableTodo,\r\n}) => {\r\n  const dragStartHandler = (\r\n    event: DragEvent<HTMLLIElement>,\r\n    todoId: string\r\n  ) => {\r\n    event.dataTransfer.setData(\"todo_id\", todoId);\r\n    event.dataTransfer.effectAllowed = \"move\";\r\n  };\r\n\r\n  let newItems: Todo[] = [];\r\n\r\n  if (list === \"active\") {\r\n    newItems = filterTodos(items, ProjectStatus.Active);\r\n  } else {\r\n    newItems = filterTodos(items, ProjectStatus.Finished);\r\n  }\r\n\r\n  return (\r\n    <ul>\r\n      {newItems.map((todo, index) => {\r\n        return todo.isEditable ? (\r\n          <li\r\n            draggable=\"true\"\r\n            key={todo.id}\r\n            className={`todo ${\r\n              todo.status === 0 ? \"active-todo\" : \"finished-todo\"\r\n            }`}\r\n            onDragStart={(event) => dragStartHandler(event, todo.id)}\r\n          >\r\n            <div className=\"todo-primary-info\">\r\n              <div>\r\n                <input\r\n                  checked={todo.status === 0 ? false : true}\r\n                  type=\"checkbox\"\r\n                  className={todo.priority}\r\n                  onChange={(event) => {\r\n                    onToggleTodoStatus(todo.id, todo.status, event);\r\n                  }}\r\n                />\r\n                <span className=\"draggable\">&#8285;&#8285;</span>\r\n                <div>{todo.text}</div>\r\n              </div>\r\n              <div>\r\n                <button\r\n                  className=\"edit__btn\"\r\n                  onClick={onEditableTodo.bind(null, todo.id)}\r\n                >\r\n                  <span>&#9998;</span>\r\n                </button>\r\n                <button\r\n                  className=\"delete__btn\"\r\n                  onClick={onDeleteTodo.bind(null, todo.id)}\r\n                >\r\n                  <span>&#10006;</span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className=\"todo-secondary-info\">\r\n              <span>{todo.date}</span>\r\n            </div>\r\n          </li>\r\n        ) : (\r\n          <li key={todo.id}>\r\n            <p>this is editable</p>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n"]},"metadata":{},"sourceType":"module"}