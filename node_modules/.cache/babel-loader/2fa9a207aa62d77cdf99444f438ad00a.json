{"ast":null,"code":"import React from\"react\";import\"./TodoListLayout.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TodoListLayout=function TodoListLayout(_ref){var type=_ref.type,children=_ref.children,changeTodoStateDrag=_ref.changeTodoStateDrag;var isActive=type===\"active\";var contentToRender=children.props.items.length===0?isActive?/*#__PURE__*/_jsx(\"p\",{children:\"Start being productive! Add some todos.\"}):/*#__PURE__*/_jsx(\"p\",{children:\"Well done! You completed all your tasks.\"}):children;// const dragOverHandler = (event: DragEvent) => {\n//   if (event.dataTransfer && event.dataTransfer.types[0] === \"todo_id\") {\n//     event.preventDefault();\n//     event.stopPropagation();\n//     (event.currentTarget as HTMLDivElement).classList.add(\n//       \"drag-target-active\"\n//     );\n//   }\n//   return false;\n// };\n// const dropHandler = (event: DragEvent) => {\n//   event.preventDefault();\n//   const todoId = event.dataTransfer.getData(\"todo_id\");\n//   const layoutClass = (event.currentTarget as HTMLDivElement).classList[1];\n//   let status = ProjectStatus.Active;\n//   if (layoutClass === \"finished\") {\n//     status = ProjectStatus.Finished;\n//   }\n//   changeTodoStateDrag(todoId, status);\n//   (event.currentTarget as HTMLDivElement).classList.remove(\n//     \"drag-target-active\"\n//   );\n// };\n// const dragLeaveHandler = (event: DragEvent) => {\n//   (event.currentTarget as HTMLDivElement).classList.remove(\n//     \"drag-target-active\"\n//   );\n// };\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"todos-layout \".concat(isActive?\"layout-active\":\"layout-finished\")// onDragOver={(event) => dragOverHandler(event)}\n// onDrop={(event) => dropHandler(event)}\n// onDragLeave={(event) => dragLeaveHandler(event)}\n,children:[/*#__PURE__*/_jsx(\"h2\",{className:isActive?\"active-layout-heading\":\"finished-layout-heading\",children:isActive?\"ACTIVE TODOS\":\"FINISHED TODOS\"}),contentToRender]});};export default TodoListLayout;","map":{"version":3,"sources":["C:/DRIVER D/BIT JS/typescript projects/todo-app/src/ui/TodoListLayout.tsx"],"names":["React","TodoListLayout","type","children","changeTodoStateDrag","isActive","contentToRender","props","items","length"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAGA,MAAO,sBAAP,C,wFAUA,GAAMC,CAAAA,cAAyC,CAAG,QAA5CA,CAAAA,cAA4C,MAI5C,IAHJC,CAAAA,IAGI,MAHJA,IAGI,CAFJC,QAEI,MAFJA,QAEI,CADJC,mBACI,MADJA,mBACI,CACJ,GAAMC,CAAAA,QAAQ,CAAGH,IAAI,GAAK,QAA1B,CAEA,GAAMI,CAAAA,eAAe,CACnBH,QAAQ,CAACI,KAAT,CAAeC,KAAf,CAAqBC,MAArB,GAAgC,CAAhC,CACEJ,QAAQ,cACN,8DADM,cAGN,+DAJJ,CAOEF,QARJ,CAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA,mBACE,aACE,SAAS,wBACPE,QAAQ,CAAG,eAAH,CAAqB,iBADtB,CAGT;AACA;AACA;AANF,wBAQE,WACE,SAAS,CACPA,QAAQ,CAAG,uBAAH,CAA6B,yBAFzC,UAKGA,QAAQ,CAAG,cAAH,CAAoB,gBAL/B,EARF,CAeGC,eAfH,GADF,CAmBD,CApED,CAsEA,cAAeL,CAAAA,cAAf","sourcesContent":["import React from \"react\";\r\nimport { ProjectStatus } from \"../model/todo.model\";\r\n\r\nimport \"./TodoListLayout.css\";\r\n\r\ninterface ListLayoutProps {\r\n  children: {\r\n    props: object;\r\n  };\r\n  type: \"active\" | \"finished\";\r\n  changeTodoStateDrag: (todoId: string, status: ProjectStatus) => void;\r\n}\r\n\r\nconst TodoListLayout: React.FC<ListLayoutProps> = ({\r\n  type,\r\n  children,\r\n  changeTodoStateDrag,\r\n}) => {\r\n  const isActive = type === \"active\";\r\n\r\n  const contentToRender =\r\n    children.props.items.length === 0 ? (\r\n      isActive ? (\r\n        <p>Start being productive! Add some todos.</p>\r\n      ) : (\r\n        <p>Well done! You completed all your tasks.</p>\r\n      )\r\n    ) : (\r\n      children\r\n    );\r\n\r\n  // const dragOverHandler = (event: DragEvent) => {\r\n  //   if (event.dataTransfer && event.dataTransfer.types[0] === \"todo_id\") {\r\n  //     event.preventDefault();\r\n  //     event.stopPropagation();\r\n  //     (event.currentTarget as HTMLDivElement).classList.add(\r\n  //       \"drag-target-active\"\r\n  //     );\r\n  //   }\r\n  //   return false;\r\n  // };\r\n\r\n  // const dropHandler = (event: DragEvent) => {\r\n  //   event.preventDefault();\r\n  //   const todoId = event.dataTransfer.getData(\"todo_id\");\r\n  //   const layoutClass = (event.currentTarget as HTMLDivElement).classList[1];\r\n  //   let status = ProjectStatus.Active;\r\n  //   if (layoutClass === \"finished\") {\r\n  //     status = ProjectStatus.Finished;\r\n  //   }\r\n  //   changeTodoStateDrag(todoId, status);\r\n  //   (event.currentTarget as HTMLDivElement).classList.remove(\r\n  //     \"drag-target-active\"\r\n  //   );\r\n  // };\r\n\r\n  // const dragLeaveHandler = (event: DragEvent) => {\r\n  //   (event.currentTarget as HTMLDivElement).classList.remove(\r\n  //     \"drag-target-active\"\r\n  //   );\r\n  // };\r\n\r\n  return (\r\n    <div\r\n      className={`todos-layout ${\r\n        isActive ? \"layout-active\" : \"layout-finished\"\r\n      }`}\r\n      // onDragOver={(event) => dragOverHandler(event)}\r\n      // onDrop={(event) => dropHandler(event)}\r\n      // onDragLeave={(event) => dragLeaveHandler(event)}\r\n    >\r\n      <h2\r\n        className={\r\n          isActive ? \"active-layout-heading\" : \"finished-layout-heading\"\r\n        }\r\n      >\r\n        {isActive ? \"ACTIVE TODOS\" : \"FINISHED TODOS\"}\r\n      </h2>\r\n      {contentToRender}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoListLayout;\r\n"]},"metadata":{},"sourceType":"module"}