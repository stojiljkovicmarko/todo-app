{"ast":null,"code":"var _jsxFileName = \"C:\\\\DRIVER D\\\\BIT JS\\\\typescript projects\\\\react-typescript-demo\\\\src\\\\ui\\\\TodoListLayout.tsx\";\nimport React from \"react\";\nimport \"./TodoListLayout.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoListLayout = _ref => {\n  let {\n    type,\n    children,\n    changeTodoState\n  } = _ref;\n  const isActive = type === \"active\";\n  const contentToRender = children.props.items.length === 0 ? isActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Start being productive! Add some todos.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Well done! You completed all your tasks.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this) : children;\n\n  const dragOverHandler = event => {\n    if (event.dataTransfer && event.dataTransfer.types[0] === \"todo_id\") {\n      event.preventDefault();\n      event.stopPropagation();\n      event.currentTarget.classList.add(\"drag-target-active\");\n    }\n\n    return false;\n  };\n\n  const dropHandler = event => {\n    event.preventDefault();\n    const todoId = event.dataTransfer.getData(\"todo_id\");\n    const layoutClass = event.currentTarget.classList[1];\n    changeTodoState(todoId, layoutClass);\n    event.currentTarget.classList.remove(\"drag-target-active\");\n  };\n\n  const dragLeaveHandler = event => {\n    event.currentTarget.classList.remove(\"drag-target-active\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `todos-layout ${isActive ? \"layout-active\" : \"layout-finished\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: isActive ? \"active-layout-heading\" : \"finished-layout-heading\",\n      children: isActive ? \"ACTIVE TODOS\" : \"FINISHED TODOS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), contentToRender]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TodoListLayout;\nexport default TodoListLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoListLayout\");","map":{"version":3,"sources":["C:/DRIVER D/BIT JS/typescript projects/react-typescript-demo/src/ui/TodoListLayout.tsx"],"names":["React","TodoListLayout","type","children","changeTodoState","isActive","contentToRender","props","items","length","dragOverHandler","event","dataTransfer","types","preventDefault","stopPropagation","currentTarget","classList","add","dropHandler","todoId","getData","layoutClass","remove","dragLeaveHandler"],"mappings":";AAAA,OAAOA,KAAP,MAAiC,OAAjC;AAEA,OAAO,sBAAP;;;AAUA,MAAMC,cAAyC,GAAG,QAI5C;AAAA,MAJ6C;AACjDC,IAAAA,IADiD;AAEjDC,IAAAA,QAFiD;AAGjDC,IAAAA;AAHiD,GAI7C;AACJ,QAAMC,QAAQ,GAAGH,IAAI,KAAK,QAA1B;AAEA,QAAMI,eAAe,GACnBH,QAAQ,CAACI,KAAT,CAAeC,KAAf,CAAqBC,MAArB,KAAgC,CAAhC,GACEJ,QAAQ,gBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADM,gBAGN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJJ,GAOEF,QARJ;;AAWA,QAAMO,eAAe,GAAIC,KAAD,IAAsB;AAC5C,QAAIA,KAAK,CAACC,YAAN,IAAsBD,KAAK,CAACC,YAAN,CAAmBC,KAAnB,CAAyB,CAAzB,MAAgC,SAA1D,EAAqE;AACnEF,MAAAA,KAAK,CAACG,cAAN;AACAH,MAAAA,KAAK,CAACI,eAAN;AACCJ,MAAAA,KAAK,CAACK,aAAP,CAAwCC,SAAxC,CAAkDC,GAAlD,CACE,oBADF;AAGD;;AACD,WAAO,KAAP;AACD,GATD;;AAWA,QAAMC,WAAW,GAAIR,KAAD,IAAsB;AACxCA,IAAAA,KAAK,CAACG,cAAN;AACA,UAAMM,MAAM,GAAGT,KAAK,CAACC,YAAN,CAAmBS,OAAnB,CAA2B,SAA3B,CAAf;AACA,UAAMC,WAAW,GAAIX,KAAK,CAACK,aAAP,CAAwCC,SAAxC,CAAkD,CAAlD,CAApB;AACAb,IAAAA,eAAe,CAACgB,MAAD,EAASE,WAAT,CAAf;AACCX,IAAAA,KAAK,CAACK,aAAP,CAAwCC,SAAxC,CAAkDM,MAAlD,CACE,oBADF;AAGD,GARD;;AAUA,QAAMC,gBAAgB,GAAIb,KAAD,IAAsB;AAC5CA,IAAAA,KAAK,CAACK,aAAP,CAAwCC,SAAxC,CAAkDM,MAAlD,CACE,oBADF;AAGD,GAJD;;AAMA,sBACE;AACE,IAAA,SAAS,EAAG,gBACVlB,QAAQ,GAAG,eAAH,GAAqB,iBAC9B,EAHH;AAAA,4BAKE;AACE,MAAA,SAAS,EACPA,QAAQ,GAAG,uBAAH,GAA6B,yBAFzC;AAAA,gBAKGA,QAAQ,GAAG,cAAH,GAAoB;AAL/B;AAAA;AAAA;AAAA;AAAA,YALF,EAYGC,eAZH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA7DD;;KAAML,c;AA+DN,eAAeA,cAAf","sourcesContent":["import React, { DragEvent } from \"react\";\r\n\r\nimport \"./TodoListLayout.css\";\r\n\r\ninterface ListLayoutProps {\r\n  children: {\r\n    props: object;\r\n  };\r\n  type: \"active\" | \"finished\";\r\n  changeTodoState: (todoId: string, layoutClass: string) => void;\r\n}\r\n\r\nconst TodoListLayout: React.FC<ListLayoutProps> = ({\r\n  type,\r\n  children,\r\n  changeTodoState,\r\n}) => {\r\n  const isActive = type === \"active\";\r\n\r\n  const contentToRender =\r\n    children.props.items.length === 0 ? (\r\n      isActive ? (\r\n        <p>Start being productive! Add some todos.</p>\r\n      ) : (\r\n        <p>Well done! You completed all your tasks.</p>\r\n      )\r\n    ) : (\r\n      children\r\n    );\r\n\r\n  const dragOverHandler = (event: DragEvent) => {\r\n    if (event.dataTransfer && event.dataTransfer.types[0] === \"todo_id\") {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      (event.currentTarget as HTMLDivElement).classList.add(\r\n        \"drag-target-active\"\r\n      );\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const dropHandler = (event: DragEvent) => {\r\n    event.preventDefault();\r\n    const todoId = event.dataTransfer.getData(\"todo_id\");\r\n    const layoutClass = (event.currentTarget as HTMLDivElement).classList[1];\r\n    changeTodoState(todoId, layoutClass);\r\n    (event.currentTarget as HTMLDivElement).classList.remove(\r\n      \"drag-target-active\"\r\n    );\r\n  };\r\n\r\n  const dragLeaveHandler = (event: DragEvent) => {\r\n    (event.currentTarget as HTMLDivElement).classList.remove(\r\n      \"drag-target-active\"\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`todos-layout ${\r\n        isActive ? \"layout-active\" : \"layout-finished\"\r\n      }`}\r\n    >\r\n      <h2\r\n        className={\r\n          isActive ? \"active-layout-heading\" : \"finished-layout-heading\"\r\n        }\r\n      >\r\n        {isActive ? \"ACTIVE TODOS\" : \"FINISHED TODOS\"}\r\n      </h2>\r\n      {contentToRender}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoListLayout;\r\n"]},"metadata":{},"sourceType":"module"}