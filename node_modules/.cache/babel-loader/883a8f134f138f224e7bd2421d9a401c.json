{"ast":null,"code":"var _jsxFileName = \"C:\\\\DRIVER D\\\\BIT JS\\\\typescript projects\\\\react-typescript-demo\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport TodoList from \"./components/TodoList\";\nimport NewTodo from \"./components/NewTodo\";\nimport SearchBar from \"./components/SearchBar/SearchBar\";\nimport { ProjectStatus } from \"./model/todo.model\";\nimport TodoListLayout from \"./ui/TodoListLayout\";\nimport { stringifyDate, groupTodosByDate, filterActiveTodos, filterFinishedTodos } from \"./util/util-functions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [todos, setTodos] = useState(() => {\n    const savedTodos = localStorage.getItem(\"todos\");\n    let initialTodos = [];\n\n    if (savedTodos) {\n      initialTodos = JSON.parse(savedTodos);\n    }\n\n    return initialTodos;\n  });\n  useEffect(() => {\n    let hasChange = false;\n    const today = new Date().setHours(0, 0, 0, 0);\n    const newTodos = todos.map((todo, index) => {\n      const todoDate = new Date(todo.date).getTime();\n      console.log(index, todoDate);\n\n      if (todoDate < today) {\n        hasChange = true;\n        return { ...todo,\n          status: ProjectStatus.Overdue\n        };\n      }\n\n      return todo;\n    });\n    console.log(newTodos);\n\n    if (hasChange) {\n      setTodos(newTodos);\n    }\n  }, []);\n  let activeTodos = filterActiveTodos(todos);\n  let finishedTodos = filterFinishedTodos(todos);\n\n  const todoAddHandler = (text, date, priority) => {\n    setTodos(prevTodos => {\n      return [...prevTodos, {\n        id: Math.floor(Math.random() * (100000 - 10000) + 10000).toString(),\n        text: text,\n        status: ProjectStatus.Active,\n        priority: priority,\n        date: stringifyDate(date),\n        createdOn: new Date(),\n        fullDate: new Date(date)\n      }];\n    });\n  };\n\n  const todoDeleteHandler = todoId => {\n    setTodos(prevTodos => prevTodos.filter(todo => todo.id !== todoId));\n  };\n\n  const toggleTodoStatus = (todoId, status) => {\n    // const todoIndex = todos.findIndex((todo) => todo.id === todoId);\n    // const newTodos = [...todos];\n    // const newTodo: Todo = todos[todoIndex];\n    // status === ProjectStatus.Active\n    //   ? (newTodo.status = ProjectStatus.Finished)\n    //   : (newTodo.status = ProjectStatus.Active);\n    // newTodos[todoIndex] = newTodo;\n    // setTodos(newTodos);\n    const newStatus = status === ProjectStatus.Active ? ProjectStatus.Finished : ProjectStatus.Active;\n    setTodos(prevTodos => {\n      return prevTodos.map(todo => {\n        return todo.id === todoId ? { ...todo,\n          status: newStatus\n        } : todo;\n      });\n    });\n  }; // THIS IS FOR DRAG\n\n\n  const changeTodoState = (todoId, status) => {\n    const todoIndex = todos.findIndex(todo => todo.id === todoId);\n    const newTodos = [...todos];\n    const newTodo = todos[todoIndex];\n    status !== ProjectStatus.Active ? newTodo.status = ProjectStatus.Finished : newTodo.status = ProjectStatus.Active;\n    newTodos[todoIndex] = newTodo;\n    setTodos(newTodos);\n  };\n\n  const searchHandler = event => {\n    setQuery(event.target.value);\n    const grouped = groupTodosByDate(todos);\n    let searchedTodos = [];\n    const date = event.target.value;\n\n    if (grouped[date]) {\n      searchedTodos = grouped[date];\n    }\n\n    setTodos(searchedTodos);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n  console.log(todos);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(NewTodo, {\n        onAddTodo: todoAddHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n        query: query,\n        onSearch: searchHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoListLayout, {\n        type: \"active\",\n        changeTodoStateDrag: changeTodoState,\n        children: /*#__PURE__*/_jsxDEV(TodoList, {\n          items: activeTodos,\n          onChangeTodoStatus: toggleTodoStatus,\n          onDeleteTodo: todoDeleteHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoListLayout, {\n        type: \"finished\",\n        changeTodoStateDrag: changeTodoState,\n        children: /*#__PURE__*/_jsxDEV(TodoList, {\n          items: finishedTodos,\n          onChangeTodoStatus: toggleTodoStatus,\n          onDeleteTodo: todoDeleteHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"r4+XvfR77kZMoqdd4oo+DuIRaco=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/DRIVER D/BIT JS/typescript projects/react-typescript-demo/src/App.tsx"],"names":["React","useEffect","useState","TodoList","NewTodo","SearchBar","ProjectStatus","TodoListLayout","stringifyDate","groupTodosByDate","filterActiveTodos","filterFinishedTodos","App","query","setQuery","todos","setTodos","savedTodos","localStorage","getItem","initialTodos","JSON","parse","hasChange","today","Date","setHours","newTodos","map","todo","index","todoDate","date","getTime","console","log","status","Overdue","activeTodos","finishedTodos","todoAddHandler","text","priority","prevTodos","id","Math","floor","random","toString","Active","createdOn","fullDate","todoDeleteHandler","todoId","filter","toggleTodoStatus","newStatus","Finished","changeTodoState","todoIndex","findIndex","newTodo","searchHandler","event","target","value","grouped","searchedTodos","setItem","stringify"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, useEffect, useState } from \"react\";\n\nimport TodoList from \"./components/TodoList\";\nimport NewTodo from \"./components/NewTodo\";\nimport SearchBar from \"./components/SearchBar/SearchBar\";\n\nimport { ProjectStatus, Todo } from \"./model/todo.model\";\n\nimport TodoListLayout from \"./ui/TodoListLayout\";\n\nimport {\n  stringifyDate,\n  groupTodosByDate,\n  filterActiveTodos,\n  filterFinishedTodos,\n} from \"./util/util-functions\";\n\nconst App: React.FC = () => {\n  const [query, setQuery] = useState<string>(\"\");\n  const [todos, setTodos] = useState<Todo[]>(() => {\n    const savedTodos = localStorage.getItem(\"todos\");\n    let initialTodos: Todo[] = [];\n    if (savedTodos) {\n      initialTodos = JSON.parse(savedTodos);\n    }\n    return initialTodos;\n  });\n\n  useEffect(() => {\n    let hasChange = false;\n    const today = (new Date().setHours(0,0,0,0));\n    const newTodos = todos.map((todo, index) => {\n      const todoDate = new Date(todo.date).getTime();\n      console.log(index, todoDate);\n      if (todoDate < today) {\n        hasChange = true;\n        return {\n          ...todo,\n          status: ProjectStatus.Overdue,\n        };\n      }\n      return todo;\n    });\n\n    console.log(newTodos);\n\n    if (hasChange) {\n      setTodos(newTodos);\n    }\n  }, []);\n\n  let activeTodos = filterActiveTodos(todos);\n  let finishedTodos = filterFinishedTodos(todos);\n\n  const todoAddHandler = (text: string, date: Date, priority: string) => {\n    setTodos((prevTodos) => {\n      return [\n        ...prevTodos,\n        {\n          id: Math.floor(Math.random() * (100000 - 10000) + 10000).toString(),\n          text: text,\n          status: ProjectStatus.Active,\n          priority: priority,\n          date: stringifyDate(date),\n          createdOn: new Date(),\n          fullDate: new Date(date),\n        },\n      ];\n    });\n  };\n\n  const todoDeleteHandler = (todoId: string) => {\n    setTodos((prevTodos) => prevTodos.filter((todo) => todo.id !== todoId));\n  };\n\n  const toggleTodoStatus = (todoId: string, status: ProjectStatus) => {\n    // const todoIndex = todos.findIndex((todo) => todo.id === todoId);\n    // const newTodos = [...todos];\n    // const newTodo: Todo = todos[todoIndex];\n    // status === ProjectStatus.Active\n    //   ? (newTodo.status = ProjectStatus.Finished)\n    //   : (newTodo.status = ProjectStatus.Active);\n    // newTodos[todoIndex] = newTodo;\n    // setTodos(newTodos);\n\n    const newStatus =\n      status === ProjectStatus.Active\n        ? ProjectStatus.Finished\n        : ProjectStatus.Active;\n    setTodos((prevTodos) => {\n      return prevTodos.map((todo) => {\n        return todo.id === todoId ? { ...todo, status: newStatus } : todo;\n      });\n    });\n  };\n\n  // THIS IS FOR DRAG\n  const changeTodoState = (todoId: string, status: ProjectStatus) => {\n    const todoIndex = todos.findIndex((todo) => todo.id === todoId);\n    const newTodos = [...todos];\n    const newTodo: Todo = todos[todoIndex];\n    status !== ProjectStatus.Active\n      ? (newTodo.status = ProjectStatus.Finished)\n      : (newTodo.status = ProjectStatus.Active);\n    newTodos[todoIndex] = newTodo;\n    setTodos(newTodos);\n  };\n\n  const searchHandler = (event: ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n\n    const grouped: {\n      [prop: string]: Todo[];\n    } = groupTodosByDate(todos);\n    let searchedTodos: Todo[] = [];\n    const date: string = event.target.value;\n    if (grouped[date]) {\n      searchedTodos = grouped[date];\n    }\n    setTodos(searchedTodos);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n\n  console.log(todos);\n\n  return (\n    <>\n      <div className=\"App\">\n        <NewTodo onAddTodo={todoAddHandler} />\n        <SearchBar query={query} onSearch={searchHandler} />\n        <TodoListLayout type={\"active\"} changeTodoStateDrag={changeTodoState}>\n          <TodoList\n            items={activeTodos}\n            onChangeTodoStatus={toggleTodoStatus}\n            onDeleteTodo={todoDeleteHandler}\n          />\n        </TodoListLayout>\n        <TodoListLayout type={\"finished\"} changeTodoStateDrag={changeTodoState}>\n          <TodoList\n            items={finishedTodos}\n            onChangeTodoStatus={toggleTodoStatus}\n            onDeleteTodo={todoDeleteHandler}\n          />\n        </TodoListLayout>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}