{"ast":null,"code":"var _jsxFileName = \"C:\\\\DRIVER D\\\\BIT JS\\\\typescript projects\\\\react-typescript-demo\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport TodoList from \"./components/TodoList\";\nimport NewTodo from \"./components/NewTodo\";\nimport { ProjectStatus } from \"./model/todo.model\";\nimport TodoListLayout from \"./ui/TodoListLayout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const activeTodos = todos.filter(item => item.status === ProjectStatus.Active);\n  const finishedTodos = todos.filter(item => item.status === ProjectStatus.Finished);\n\n  const todoAddHandler = (text, date) => {\n    setTodos(prevTodos => {\n      return [...prevTodos, {\n        id: Math.random().toString(),\n        text: text,\n        status: ProjectStatus.Active,\n        date: {\n          day: date.getDate(),\n          month: date.getMonth() + 1,\n          year: date.getFullYear(),\n          fullDate: date\n        }\n      }];\n    });\n  };\n\n  const todoDeleteHandler = todoId => {\n    setTodos(prevTodos => prevTodos.filter(todo => todo.id !== todoId));\n  };\n\n  const toggleTodoStatus = (todoId, status) => {\n    const todoIndex = todos.findIndex(todo => todo.id === todoId);\n    const newTodos = [...todos];\n    const newTodo = todos[todoIndex];\n    status === ProjectStatus.Active ? newTodo.status = ProjectStatus.Finished : newTodo.status = ProjectStatus.Active;\n    newTodos[todoIndex] = newTodo;\n    setTodos(newTodos);\n  };\n\n  const insertTodoOnNewPosition = index => {\n    const newTodos = [...todos];\n    const todo = newTodos[index];\n    newTodos.splice(index, 1);\n    newTodos.splice(index, 0, todo);\n    setTodos(newTodos);\n  };\n\n  console.log(todos);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(NewTodo, {\n        onAddTodo: todoAddHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoListLayout, {\n        type: \"active\",\n        children: /*#__PURE__*/_jsxDEV(TodoList, {\n          items: activeTodos,\n          onChangeTodoStatus: toggleTodoStatus,\n          onDeleteTodo: todoDeleteHandler,\n          insertTodoOnNewPosition: insertTodoOnNewPosition\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoListLayout, {\n        type: \"finished\",\n        children: /*#__PURE__*/_jsxDEV(TodoList, {\n          items: finishedTodos,\n          onChangeTodoStatus: toggleTodoStatus,\n          onDeleteTodo: todoDeleteHandler,\n          insertTodoOnNewPosition: insertTodoOnNewPosition\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"ZATHeV9x55jFrDOww2hwcxQ3V1U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/DRIVER D/BIT JS/typescript projects/react-typescript-demo/src/App.tsx"],"names":["React","useState","TodoList","NewTodo","ProjectStatus","TodoListLayout","App","todos","setTodos","activeTodos","filter","item","status","Active","finishedTodos","Finished","todoAddHandler","text","date","prevTodos","id","Math","random","toString","day","getDate","month","getMonth","year","getFullYear","fullDate","todoDeleteHandler","todoId","todo","toggleTodoStatus","todoIndex","findIndex","newTodos","newTodo","insertTodoOnNewPosition","index","splice","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,SAASC,aAAT,QAAoC,oBAApC;AACA,OAAOC,cAAP,MAA2B,qBAA3B;;;;AAEA,MAAMC,GAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAS,EAAT,CAAlC;AACA,QAAMQ,WAAW,GAAGF,KAAK,CAACG,MAAN,CACjBC,IAAD,IAAUA,IAAI,CAACC,MAAL,KAAgBR,aAAa,CAACS,MADtB,CAApB;AAGA,QAAMC,aAAa,GAAGP,KAAK,CAACG,MAAN,CACnBC,IAAD,IAAUA,IAAI,CAACC,MAAL,KAAgBR,aAAa,CAACW,QADpB,CAAtB;;AAIA,QAAMC,cAAc,GAAG,CAACC,IAAD,EAAeC,IAAf,KAA8B;AACnDV,IAAAA,QAAQ,CAAEW,SAAD,IAAe;AACtB,aAAO,CACL,GAAGA,SADE,EAEL;AACEC,QAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd,EADN;AAEEN,QAAAA,IAAI,EAAEA,IAFR;AAGEL,QAAAA,MAAM,EAAER,aAAa,CAACS,MAHxB;AAIEK,QAAAA,IAAI,EAAE;AACJM,UAAAA,GAAG,EAAEN,IAAI,CAACO,OAAL,EADD;AAEJC,UAAAA,KAAK,EAAER,IAAI,CAACS,QAAL,KAAkB,CAFrB;AAGJC,UAAAA,IAAI,EAAEV,IAAI,CAACW,WAAL,EAHF;AAIJC,UAAAA,QAAQ,EAAEZ;AAJN;AAJR,OAFK,CAAP;AAcD,KAfO,CAAR;AAgBD,GAjBD;;AAmBA,QAAMa,iBAAiB,GAAIC,MAAD,IAAoB;AAC5CxB,IAAAA,QAAQ,CAAEW,SAAD,IAAeA,SAAS,CAACT,MAAV,CAAkBuB,IAAD,IAAUA,IAAI,CAACb,EAAL,KAAYY,MAAvC,CAAhB,CAAR;AACD,GAFD;;AAIA,QAAME,gBAAgB,GAAG,CAACF,MAAD,EAAiBpB,MAAjB,KAA2C;AAClE,UAAMuB,SAAS,GAAG5B,KAAK,CAAC6B,SAAN,CAAiBH,IAAD,IAAUA,IAAI,CAACb,EAAL,KAAYY,MAAtC,CAAlB;AACA,UAAMK,QAAQ,GAAG,CAAC,GAAG9B,KAAJ,CAAjB;AACA,UAAM+B,OAAa,GAAG/B,KAAK,CAAC4B,SAAD,CAA3B;AACAvB,IAAAA,MAAM,KAAKR,aAAa,CAACS,MAAzB,GACKyB,OAAO,CAAC1B,MAAR,GAAiBR,aAAa,CAACW,QADpC,GAEKuB,OAAO,CAAC1B,MAAR,GAAiBR,aAAa,CAACS,MAFpC;AAGAwB,IAAAA,QAAQ,CAACF,SAAD,CAAR,GAAsBG,OAAtB;AACA9B,IAAAA,QAAQ,CAAC6B,QAAD,CAAR;AACD,GATD;;AAWA,QAAME,uBAAuB,GAAIC,KAAD,IAAmB;AACjD,UAAMH,QAAQ,GAAG,CAAC,GAAG9B,KAAJ,CAAjB;AACA,UAAM0B,IAAI,GAAGI,QAAQ,CAACG,KAAD,CAArB;AACAH,IAAAA,QAAQ,CAACI,MAAT,CAAgBD,KAAhB,EAAuB,CAAvB;AACAH,IAAAA,QAAQ,CAACI,MAAT,CAAgBD,KAAhB,EAAuB,CAAvB,EAA0BP,IAA1B;AACAzB,IAAAA,QAAQ,CAAC6B,QAAD,CAAR;AACD,GAND;;AAQAK,EAAAA,OAAO,CAACC,GAAR,CAAYpC,KAAZ;AAEA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,SAAS,EAAES;AAApB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,cAAD;AAAgB,QAAA,IAAI,EAAE,QAAtB;AAAA,+BACE,QAAC,QAAD;AACE,UAAA,KAAK,EAAEP,WADT;AAEE,UAAA,kBAAkB,EAAEyB,gBAFtB;AAGE,UAAA,YAAY,EAAEH,iBAHhB;AAIE,UAAA,uBAAuB,EAAEQ;AAJ3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAUE,QAAC,cAAD;AAAgB,QAAA,IAAI,EAAE,UAAtB;AAAA,+BACE,QAAC,QAAD;AACE,UAAA,KAAK,EAAEzB,aADT;AAEE,UAAA,kBAAkB,EAAEoB,gBAFtB;AAGE,UAAA,YAAY,EAAEH,iBAHhB;AAIE,UAAA,uBAAuB,EAAEQ;AAJ3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAuBD,CA5ED;;GAAMjC,G;;KAAAA,G;AA8EN,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport TodoList from \"./components/TodoList\";\nimport NewTodo from \"./components/NewTodo\";\n\nimport { ProjectStatus, Todo } from \"./model/todo.model\";\nimport TodoListLayout from \"./ui/TodoListLayout\";\n\nconst App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const activeTodos = todos.filter(\n    (item) => item.status === ProjectStatus.Active\n  );\n  const finishedTodos = todos.filter(\n    (item) => item.status === ProjectStatus.Finished\n  );\n\n  const todoAddHandler = (text: string, date: Date) => {\n    setTodos((prevTodos) => {\n      return [\n        ...prevTodos,\n        {\n          id: Math.random().toString(),\n          text: text,\n          status: ProjectStatus.Active,\n          date: {\n            day: date.getDate(),\n            month: date.getMonth() + 1,\n            year: date.getFullYear(),\n            fullDate: date,\n          },\n        },\n      ];\n    });\n  };\n\n  const todoDeleteHandler = (todoId: string) => {\n    setTodos((prevTodos) => prevTodos.filter((todo) => todo.id !== todoId));\n  };\n\n  const toggleTodoStatus = (todoId: string, status: ProjectStatus) => {\n    const todoIndex = todos.findIndex((todo) => todo.id === todoId);\n    const newTodos = [...todos];\n    const newTodo: Todo = todos[todoIndex];\n    status === ProjectStatus.Active\n      ? (newTodo.status = ProjectStatus.Finished)\n      : (newTodo.status = ProjectStatus.Active);\n    newTodos[todoIndex] = newTodo;\n    setTodos(newTodos);\n  };\n\n  const insertTodoOnNewPosition = (index: number) => {\n    const newTodos = [...todos];\n    const todo = newTodos[index];\n    newTodos.splice(index, 1);\n    newTodos.splice(index, 0, todo);\n    setTodos(newTodos);\n  };\n\n  console.log(todos);\n\n  return (\n    <>\n      <div className=\"App\">\n        <NewTodo onAddTodo={todoAddHandler} />\n        <TodoListLayout type={\"active\"}>\n          <TodoList\n            items={activeTodos}\n            onChangeTodoStatus={toggleTodoStatus}\n            onDeleteTodo={todoDeleteHandler}\n            insertTodoOnNewPosition={insertTodoOnNewPosition}\n          />\n        </TodoListLayout>\n        <TodoListLayout type={\"finished\"}>\n          <TodoList\n            items={finishedTodos}\n            onChangeTodoStatus={toggleTodoStatus}\n            onDeleteTodo={todoDeleteHandler}\n            insertTodoOnNewPosition={insertTodoOnNewPosition}\n          />\n        </TodoListLayout>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}