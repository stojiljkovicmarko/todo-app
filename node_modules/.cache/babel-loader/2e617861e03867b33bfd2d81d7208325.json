{"ast":null,"code":"var _jsxFileName = \"C:\\\\DRIVER D\\\\BIT JS\\\\typescript projects\\\\todo-app\\\\src\\\\ui\\\\TodoListLayout.tsx\";\nimport React from \"react\";\nimport \"./TodoListLayout.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoListLayout = _ref => {\n  let {\n    type,\n    children,\n    changeTodoStateDrag\n  } = _ref;\n  const isActive = type === \"active\";\n  let contentToRender;\n\n  if (children.props.items.length === 0) {\n    if (type === \"overdue\") {\n      contentToRender = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No overdue tasks.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 25\n      }, this);\n    } else if (type === \"active\") {\n      contentToRender = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Start being productive! Add some todos.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this);\n    } else {\n      contentToRender = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Well done! You completed all your tasks.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }, this);\n    }\n  } else {\n    contentToRender = children;\n  } //OLD ONE\n  // const contentToRender =\n  //   children.props.items.length === 0 ? (\n  //     isActive ? (\n  //       <p>Start being productive! Add some todos.</p>\n  //     ) : (\n  //       <p>Well done! You completed all your tasks.</p>\n  //     )\n  //   ) : (\n  //     children\n  //   );\n  // const dragOverHandler = (event: DragEvent) => {\n  //   if (event.dataTransfer && event.dataTransfer.types[0] === \"todo_id\") {\n  //     event.preventDefault();\n  //     event.stopPropagation();\n  //     (event.currentTarget as HTMLDivElement).classList.add(\n  //       \"drag-target-active\"\n  //     );\n  //   }\n  //   return false;\n  // };\n  // const dropHandler = (event: DragEvent) => {\n  //   event.preventDefault();\n  //   const todoId = event.dataTransfer.getData(\"todo_id\");\n  //   const layoutClass = (event.currentTarget as HTMLDivElement).classList[1];\n  //   let status = ProjectStatus.Active;\n  //   if (layoutClass === \"finished\") {\n  //     status = ProjectStatus.Finished;\n  //   }\n  //   changeTodoStateDrag(todoId, status);\n  //   (event.currentTarget as HTMLDivElement).classList.remove(\n  //     \"drag-target-active\"\n  //   );\n  // };\n  // const dragLeaveHandler = (event: DragEvent) => {\n  //   (event.currentTarget as HTMLDivElement).classList.remove(\n  //     \"drag-target-active\"\n  //   );\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `todos-layout ${type === \"overdue\" ? \"layout-overdue\" : isActive ? \"layout-active\" : \"layout-finished\"}` // onDragOver={(event) => dragOverHandler(event)}\n    // onDrop={(event) => dropHandler(event)}\n    // onDragLeave={(event) => dragLeaveHandler(event)}\n    ,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: type === \"overdue\" ? \"overdue-layout-heading\" : isActive ? \"active-layout-heading\" : \"finished-layout-heading\",\n      children: type === \"overdue\" ? \"OVERDUE\" : isActive ? \"ACTIVE TODOS\" : \"FINISHED TODOS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), contentToRender]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TodoListLayout;\nexport default TodoListLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoListLayout\");","map":{"version":3,"sources":["C:/DRIVER D/BIT JS/typescript projects/todo-app/src/ui/TodoListLayout.tsx"],"names":["React","TodoListLayout","type","children","changeTodoStateDrag","isActive","contentToRender","props","items","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAO,sBAAP;;;AAUA,MAAMC,cAAyC,GAAG,QAI5C;AAAA,MAJ6C;AACjDC,IAAAA,IADiD;AAEjDC,IAAAA,QAFiD;AAGjDC,IAAAA;AAHiD,GAI7C;AACJ,QAAMC,QAAQ,GAAGH,IAAI,KAAK,QAA1B;AAEA,MAAII,eAAJ;;AACA,MAAIH,QAAQ,CAACI,KAAT,CAAeC,KAAf,CAAqBC,MAArB,KAAgC,CAApC,EAAuC;AACrC,QAAIP,IAAI,KAAK,SAAb,EAAwB;AACtBI,MAAAA,eAAe,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAlB;AACD,KAFD,MAEO,IAAIJ,IAAI,KAAK,QAAb,EAAuB;AAC5BI,MAAAA,eAAe,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAlB;AACD,KAFM,MAEA;AACLA,MAAAA,eAAe,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAlB;AACD;AACF,GARD,MAQO;AACLA,IAAAA,eAAe,GAAGH,QAAlB;AACD,GAdG,CAgBJ;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEA,sBACE;AACE,IAAA,SAAS,EAAG,gBACVD,IAAI,KAAK,SAAT,GACI,gBADJ,GAEIG,QAAQ,GACR,eADQ,GAER,iBACL,EAPH,CAQE;AACA;AACA;AAVF;AAAA,4BAYE;AACE,MAAA,SAAS,EACPH,IAAI,KAAK,SAAT,GACI,wBADJ,GAEIG,QAAQ,GACR,uBADQ,GAER,yBANR;AAAA,gBASGH,IAAI,KAAK,SAAT,GACG,SADH,GAEGG,QAAQ,GACR,cADQ,GAER;AAbN;AAAA;AAAA;AAAA;AAAA,YAZF,EA2BGC,eA3BH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CA/FD;;KAAML,c;AAiGN,eAAeA,cAAf","sourcesContent":["import React from \"react\";\r\nimport { ProjectStatus } from \"../model/todo.model\";\r\n\r\nimport \"./TodoListLayout.css\";\r\n\r\ninterface ListLayoutProps {\r\n  children: {\r\n    props: object;\r\n  };\r\n  type: \"active\" | \"finished\" | \"overdue\";\r\n  changeTodoStateDrag: (todoId: string, status: ProjectStatus) => void;\r\n}\r\n\r\nconst TodoListLayout: React.FC<ListLayoutProps> = ({\r\n  type,\r\n  children,\r\n  changeTodoStateDrag,\r\n}) => {\r\n  const isActive = type === \"active\";\r\n\r\n  let contentToRender;\r\n  if (children.props.items.length === 0) {\r\n    if (type === \"overdue\") {\r\n      contentToRender = <p>No overdue tasks.</p>;\r\n    } else if (type === \"active\") {\r\n      contentToRender = <p>Start being productive! Add some todos.</p>;\r\n    } else {\r\n      contentToRender = <p>Well done! You completed all your tasks.</p>;\r\n    }\r\n  } else {\r\n    contentToRender = children;\r\n  }\r\n\r\n  //OLD ONE\r\n\r\n  // const contentToRender =\r\n  //   children.props.items.length === 0 ? (\r\n  //     isActive ? (\r\n  //       <p>Start being productive! Add some todos.</p>\r\n  //     ) : (\r\n  //       <p>Well done! You completed all your tasks.</p>\r\n  //     )\r\n  //   ) : (\r\n  //     children\r\n  //   );\r\n\r\n  // const dragOverHandler = (event: DragEvent) => {\r\n  //   if (event.dataTransfer && event.dataTransfer.types[0] === \"todo_id\") {\r\n  //     event.preventDefault();\r\n  //     event.stopPropagation();\r\n  //     (event.currentTarget as HTMLDivElement).classList.add(\r\n  //       \"drag-target-active\"\r\n  //     );\r\n  //   }\r\n  //   return false;\r\n  // };\r\n\r\n  // const dropHandler = (event: DragEvent) => {\r\n  //   event.preventDefault();\r\n  //   const todoId = event.dataTransfer.getData(\"todo_id\");\r\n  //   const layoutClass = (event.currentTarget as HTMLDivElement).classList[1];\r\n  //   let status = ProjectStatus.Active;\r\n  //   if (layoutClass === \"finished\") {\r\n  //     status = ProjectStatus.Finished;\r\n  //   }\r\n  //   changeTodoStateDrag(todoId, status);\r\n  //   (event.currentTarget as HTMLDivElement).classList.remove(\r\n  //     \"drag-target-active\"\r\n  //   );\r\n  // };\r\n\r\n  // const dragLeaveHandler = (event: DragEvent) => {\r\n  //   (event.currentTarget as HTMLDivElement).classList.remove(\r\n  //     \"drag-target-active\"\r\n  //   );\r\n  // };\r\n\r\n  return (\r\n    <div\r\n      className={`todos-layout ${\r\n        type === \"overdue\"\r\n          ? \"layout-overdue\"\r\n          : isActive\r\n          ? \"layout-active\"\r\n          : \"layout-finished\"\r\n      }`}\r\n      // onDragOver={(event) => dragOverHandler(event)}\r\n      // onDrop={(event) => dropHandler(event)}\r\n      // onDragLeave={(event) => dragLeaveHandler(event)}\r\n    >\r\n      <h2\r\n        className={\r\n          type === \"overdue\"\r\n            ? \"overdue-layout-heading\"\r\n            : isActive\r\n            ? \"active-layout-heading\"\r\n            : \"finished-layout-heading\"\r\n        }\r\n      >\r\n        {type === \"overdue\"\r\n          ? \"OVERDUE\"\r\n          : isActive\r\n          ? \"ACTIVE TODOS\"\r\n          : \"FINISHED TODOS\"}\r\n      </h2>\r\n      {contentToRender}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoListLayout;\r\n"]},"metadata":{},"sourceType":"module"}