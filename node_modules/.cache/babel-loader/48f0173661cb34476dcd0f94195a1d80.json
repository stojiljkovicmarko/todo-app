{"ast":null,"code":"var _jsxFileName = \"C:\\\\DRIVER D\\\\BIT JS\\\\typescript projects\\\\react-typescript-demo\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport TodoList from \"./components/TodoList\";\nimport NewTodo from \"./components/NewTodo\";\nimport SearchBar from \"./components/SearchBar/SearchBar\";\nimport { ProjectStatus } from \"./model/todo.model\";\nimport TodoListLayout from \"./ui/TodoListLayout\";\nimport { stringifyDate, groupTodosByDate } from \"./util/util-functions\";\nimport ChangeMonth from \"./components/ChangeMonth/ChangeMonth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [todos, setTodos] = useState(() => {\n    const savedTodos = localStorage.getItem(\"todos\");\n    let initialTodos = [];\n\n    if (savedTodos) {\n      initialTodos = JSON.parse(savedTodos);\n    }\n\n    return initialTodos;\n  });\n  const [selectedDay, setSelectedDay] = useState(\"\");\n\n  const onSetSelectedDay = day => {\n    setSelectedDay(day);\n  };\n\n  const filteredTodos = todos.filter(todo => {\n    if (selectedDay) {\n      return todo.date === selectedDay;\n    }\n\n    return todo.fullDate === new Date();\n  });\n  console.log(selectedDay);\n  console.log(todos);\n  useEffect(() => {\n    let hasChange = false; //set today at midnight\n\n    const today = new Date().setHours(0, 0, 0, 0);\n    const newTodos = todos.map(todo => {\n      const todoDate = new Date(todo.fullDate).getTime();\n\n      if (todoDate < today) {\n        hasChange = true;\n        return { ...todo,\n          status: ProjectStatus.Overdue\n        };\n      }\n\n      return todo;\n    });\n\n    if (hasChange) {\n      setTodos(newTodos);\n    }\n  }, []);\n\n  const todoAddHandler = (text, date, priority) => {\n    setTodos(prevTodos => {\n      return [...prevTodos, {\n        id: Math.floor(Math.random() * (100000 - 10000) + 10000).toString(),\n        text: text,\n        status: ProjectStatus.Active,\n        priority: priority,\n        date: stringifyDate(date),\n        createdOn: new Date(),\n        fullDate: new Date(date),\n        isEditable: false\n      }];\n    });\n  }; //change map to find faster\n\n\n  const todoUpdateHandler = (text, date, priority, todoId) => {\n    setTodos(prevTodos => {\n      return prevTodos.map(todo => {\n        return todo.id === todoId ? { ...todo,\n          text: text,\n          date: stringifyDate(date),\n          priority: priority,\n          isEditable: !todo.isEditable\n        } : todo;\n      });\n    });\n  };\n\n  const todoDeleteHandler = todoId => {\n    setTodos(prevTodos => prevTodos.filter(todo => todo.id !== todoId));\n  }; // FOR CHECKBOX\n\n\n  const toggleTodoStatus = (todoId, status) => {\n    const newStatus = status === ProjectStatus.Active ? ProjectStatus.Finished : ProjectStatus.Active;\n    setTodos(prevTodos => {\n      return prevTodos.map(todo => {\n        return todo.id === todoId ? { ...todo,\n          status: newStatus\n        } : todo;\n      });\n    });\n  }; // THIS IS FOR DRAG\n\n\n  const changeTodoStateHandler = (todoId, status) => {\n    const todoIndex = todos.findIndex(todo => todo.id === todoId);\n    const newTodos = [...todos];\n    const newTodo = todos[todoIndex];\n    status !== ProjectStatus.Active ? newTodo.status = ProjectStatus.Finished : newTodo.status = ProjectStatus.Active;\n    newTodos[todoIndex] = newTodo;\n    setTodos(newTodos);\n  };\n\n  const filterByQuery = query => {\n    const grouped = groupTodosByDate(todos);\n    let searchedTodos = [];\n    const date = query;\n\n    if (grouped[date]) {\n      searchedTodos = grouped[date];\n    }\n  };\n\n  const searchHandler = event => {\n    setQuery(event.target.value);\n\n    if (event.target.value.trim() !== \"\") {\n      filterByQuery(event.target.value.trim());\n    }\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]); //better performance with find\n\n  const isEditableHandler = todoId => {\n    setTodos(prevTodos => {\n      return prevTodos.map(todo => {\n        return todo.id === todoId ? { ...todo,\n          isEditable: !todo.isEditable\n        } : todo;\n      });\n    });\n  };\n\n  const clickOutsideHandler = _event => {\n    setTodos(prevTodos => {\n      return prevTodos.map(todo => {\n        return todo.isEditable === true ? { ...todo,\n          isEditable: !todo.isEditable\n        } : todo;\n      });\n    });\n  };\n\n  console.log(todos);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ChangeMonth, {\n        todos: todos,\n        selectedDay: selectedDay,\n        onSetSelectedDay: setSelectedDay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NewTodo, {\n        type: \"new\",\n        submitTodo: todoAddHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoListLayout, {\n        type: \"active\",\n        changeTodoStateDrag: changeTodoStateHandler,\n        children: /*#__PURE__*/_jsxDEV(TodoList, {\n          list: \"active\",\n          items: todos,\n          onToggleTodoStatus: toggleTodoStatus,\n          onDeleteTodo: todoDeleteHandler,\n          onEditableTodo: isEditableHandler,\n          onUpdateTodo: todoUpdateHandler,\n          onClickOutside: clickOutsideHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoListLayout, {\n        type: \"finished\",\n        changeTodoStateDrag: changeTodoStateHandler,\n        children: /*#__PURE__*/_jsxDEV(TodoList, {\n          list: \"finished\",\n          items: todos,\n          onToggleTodoStatus: toggleTodoStatus,\n          onDeleteTodo: todoDeleteHandler,\n          onEditableTodo: isEditableHandler,\n          onUpdateTodo: todoUpdateHandler,\n          onClickOutside: clickOutsideHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n        query: query,\n        onSearch: searchHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"HToNnj8h5Iq3YC/qyhADG0+5OyM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/DRIVER D/BIT JS/typescript projects/react-typescript-demo/src/App.tsx"],"names":["React","useEffect","useState","TodoList","NewTodo","SearchBar","ProjectStatus","TodoListLayout","stringifyDate","groupTodosByDate","ChangeMonth","App","query","setQuery","todos","setTodos","savedTodos","localStorage","getItem","initialTodos","JSON","parse","selectedDay","setSelectedDay","onSetSelectedDay","day","filteredTodos","filter","todo","date","fullDate","Date","console","log","hasChange","today","setHours","newTodos","map","todoDate","getTime","status","Overdue","todoAddHandler","text","priority","prevTodos","id","Math","floor","random","toString","Active","createdOn","isEditable","todoUpdateHandler","todoId","todoDeleteHandler","toggleTodoStatus","newStatus","Finished","changeTodoStateHandler","todoIndex","findIndex","newTodo","filterByQuery","grouped","searchedTodos","searchHandler","event","target","value","trim","setItem","stringify","isEditableHandler","clickOutsideHandler","_event"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, useEffect, useState } from \"react\";\n\nimport TodoList from \"./components/TodoList\";\nimport NewTodo from \"./components/NewTodo\";\nimport SearchBar from \"./components/SearchBar/SearchBar\";\n\nimport { ProjectStatus, Todo } from \"./model/todo.model\";\n\nimport TodoListLayout from \"./ui/TodoListLayout\";\n\nimport { stringifyDate, groupTodosByDate } from \"./util/util-functions\";\nimport ChangeMonth from \"./components/ChangeMonth/ChangeMonth\";\n\nconst App: React.FC = () => {\n  const [query, setQuery] = useState<string>(\"\");\n  const [todos, setTodos] = useState<Todo[]>(() => {\n    const savedTodos = localStorage.getItem(\"todos\");\n    let initialTodos: Todo[] = [];\n    if (savedTodos) {\n      initialTodos = JSON.parse(savedTodos);\n    }\n    return initialTodos;\n  });\n\n  const [selectedDay, setSelectedDay] = useState(\"\");\n\n  const onSetSelectedDay = (day: string) => {\n    setSelectedDay(day);\n  };\n\n  const filteredTodos = todos.filter((todo) => {\n    if (selectedDay) {\n      return todo.date === selectedDay;\n    }\n    return todo.fullDate === new Date();\n  });\n\n  console.log(selectedDay);\n  console.log(todos);\n\n  useEffect(() => {\n    let hasChange = false;\n    //set today at midnight\n    const today = new Date().setHours(0, 0, 0, 0);\n    const newTodos = todos.map((todo) => {\n      const todoDate = new Date(todo.fullDate).getTime();\n      if (todoDate < today) {\n        hasChange = true;\n        return {\n          ...todo,\n          status: ProjectStatus.Overdue,\n        };\n      }\n      return todo;\n    });\n\n    if (hasChange) {\n      setTodos(newTodos);\n    }\n  }, []);\n\n  const todoAddHandler = (text: string, date: Date, priority: string) => {\n    setTodos((prevTodos) => {\n      return [\n        ...prevTodos,\n        {\n          id: Math.floor(Math.random() * (100000 - 10000) + 10000).toString(),\n          text: text,\n          status: ProjectStatus.Active,\n          priority: priority,\n          date: stringifyDate(date),\n          createdOn: new Date(),\n          fullDate: new Date(date),\n          isEditable: false,\n        },\n      ];\n    });\n  };\n\n  //change map to find faster\n  const todoUpdateHandler = (\n    text: string,\n    date: Date,\n    priority: string,\n    todoId?: string\n  ) => {\n    setTodos((prevTodos) => {\n      return prevTodos.map((todo) => {\n        return todo.id === todoId\n          ? {\n              ...todo,\n              text: text,\n              date: stringifyDate(date),\n              priority: priority,\n              isEditable: !todo.isEditable,\n            }\n          : todo;\n      });\n    });\n  };\n\n  const todoDeleteHandler = (todoId: string) => {\n    setTodos((prevTodos) => prevTodos.filter((todo) => todo.id !== todoId));\n  };\n\n  // FOR CHECKBOX\n  const toggleTodoStatus = (todoId: string, status: ProjectStatus) => {\n    const newStatus =\n      status === ProjectStatus.Active\n        ? ProjectStatus.Finished\n        : ProjectStatus.Active;\n    setTodos((prevTodos) => {\n      return prevTodos.map((todo) => {\n        return todo.id === todoId ? { ...todo, status: newStatus } : todo;\n      });\n    });\n  };\n\n  // THIS IS FOR DRAG\n  const changeTodoStateHandler = (todoId: string, status: ProjectStatus) => {\n    const todoIndex = todos.findIndex((todo) => todo.id === todoId);\n    const newTodos = [...todos];\n    const newTodo: Todo = todos[todoIndex];\n    status !== ProjectStatus.Active\n      ? (newTodo.status = ProjectStatus.Finished)\n      : (newTodo.status = ProjectStatus.Active);\n    newTodos[todoIndex] = newTodo;\n    setTodos(newTodos);\n  };\n\n  const filterByQuery = (query: string) => {\n    const grouped: {\n      [prop: string]: Todo[];\n    } = groupTodosByDate(todos);\n    let searchedTodos: Todo[] = [];\n    const date: string = query;\n    if (grouped[date]) {\n      searchedTodos = grouped[date];\n    }\n  };\n\n  const searchHandler = (event: ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    if (event.target.value.trim() !== \"\") {\n      filterByQuery(event.target.value.trim());\n    }\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n\n  //better performance with find\n  const isEditableHandler = (todoId: string) => {\n    setTodos((prevTodos) => {\n      return prevTodos.map((todo) => {\n        return todo.id === todoId\n          ? { ...todo, isEditable: !todo.isEditable }\n          : todo;\n      });\n    });\n  };\n\n  const clickOutsideHandler = (_event: MouseEvent) => {\n    setTodos((prevTodos) => {\n      return prevTodos.map((todo) => {\n        return todo.isEditable === true\n          ? { ...todo, isEditable: !todo.isEditable }\n          : todo;\n      });\n    });\n  };\n\n  console.log(todos);\n\n  return (\n    <>\n      <div className=\"App\">\n        <ChangeMonth\n          todos={todos}\n          selectedDay={selectedDay}\n          onSetSelectedDay={setSelectedDay}\n        />\n        <NewTodo type=\"new\" submitTodo={todoAddHandler} />\n        <TodoListLayout\n          type={\"active\"}\n          changeTodoStateDrag={changeTodoStateHandler}\n        >\n          <TodoList\n            list={\"active\"}\n            items={todos}\n            onToggleTodoStatus={toggleTodoStatus}\n            onDeleteTodo={todoDeleteHandler}\n            onEditableTodo={isEditableHandler}\n            onUpdateTodo={todoUpdateHandler}\n            onClickOutside={clickOutsideHandler}\n          />\n        </TodoListLayout>\n        <TodoListLayout\n          type={\"finished\"}\n          changeTodoStateDrag={changeTodoStateHandler}\n        >\n          <TodoList\n            list={\"finished\"}\n            items={todos}\n            onToggleTodoStatus={toggleTodoStatus}\n            onDeleteTodo={todoDeleteHandler}\n            onEditableTodo={isEditableHandler}\n            onUpdateTodo={todoUpdateHandler}\n            onClickOutside={clickOutsideHandler}\n          />\n        </TodoListLayout>\n\n        <SearchBar query={query} onSearch={searchHandler} />\n      </div>\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}