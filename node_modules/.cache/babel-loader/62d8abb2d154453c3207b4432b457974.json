{"ast":null,"code":"var _jsxFileName = \"C:\\\\DRIVER D\\\\BIT JS\\\\typescript projects\\\\react-typescript-demo\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport TodoList from \"./components/TodoList\";\nimport NewTodo from \"./components/NewTodo\";\nimport SearchBar from \"./components/SearchBar/SearchBar\";\nimport { ProjectStatus } from \"./model/todo.model\";\nimport TodoListLayout from \"./ui/TodoListLayout\";\nimport { stringifyDate, groupTodosByDate, filterTodos } from \"./util/util-functions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [todos, setTodos] = useState(() => {\n    const savedTodos = localStorage.getItem(\"todos\");\n    let initialTodos = [];\n\n    if (savedTodos) {\n      initialTodos = JSON.parse(savedTodos);\n    }\n\n    return initialTodos;\n  });\n  const [activeTodos, setActiveTodos] = useState(filterTodos(todos, ProjectStatus.Active));\n  const [finishedTodos, setFinishedTodos] = useState(filterTodos(todos, ProjectStatus.Finished));\n\n  const resetTodos = () => {\n    setActiveTodos(() => {\n      return [...filterTodos(todos, ProjectStatus.Active)];\n    });\n    setFinishedTodos(() => {\n      return [...filterTodos(todos, ProjectStatus.Finished)];\n    });\n  };\n\n  useEffect(() => {\n    let hasChange = false; //set today at midnight\n\n    const today = new Date().setHours(0, 0, 0, 0);\n    const newTodos = todos.map(todo => {\n      const todoDate = new Date(todo.fullDate).getTime();\n\n      if (todoDate < today) {\n        hasChange = true;\n        return { ...todo,\n          status: ProjectStatus.Overdue\n        };\n      }\n\n      return todo;\n    });\n\n    if (hasChange) {\n      setTodos(newTodos);\n    }\n  }, []);\n\n  const todoAddHandler = (text, date, priority) => {\n    setTodos(prevTodos => {\n      return [...prevTodos, {\n        id: Math.floor(Math.random() * (100000 - 10000) + 10000).toString(),\n        text: text,\n        status: ProjectStatus.Active,\n        priority: priority,\n        date: stringifyDate(date),\n        createdOn: new Date(),\n        fullDate: new Date(date)\n      }];\n    });\n    console.log(\"pre reset: \", todos);\n    resetTodos();\n    console.log(\"nakon reset \", todos);\n  };\n\n  const todoDeleteHandler = todoId => {\n    setTodos(prevTodos => prevTodos.filter(todo => todo.id !== todoId));\n    resetTodos();\n  }; // FOR CHECKBOX\n\n\n  const toggleTodoStatus = (todoId, status) => {\n    // const todoIndex = todos.findIndex((todo) => todo.id === todoId);\n    // const newTodos = [...todos];\n    // const newTodo: Todo = todos[todoIndex];\n    // status === ProjectStatus.Active\n    //   ? (newTodo.status = ProjectStatus.Finished)\n    //   : (newTodo.status = ProjectStatus.Active);\n    // newTodos[todoIndex] = newTodo;\n    // setTodos(newTodos);\n    console.log(\"clicked\");\n    const newStatus = status === ProjectStatus.Active ? ProjectStatus.Finished : ProjectStatus.Active;\n    setTodos(prevTodos => {\n      return prevTodos.map(todo => {\n        return todo.id === todoId ? { ...todo,\n          status: newStatus\n        } : todo;\n      });\n    });\n    resetTodos();\n  }; // THIS IS FOR DRAG\n\n\n  const changeTodoStateHandler = (todoId, status) => {\n    const todoIndex = todos.findIndex(todo => todo.id === todoId);\n    const newTodos = [...todos];\n    const newTodo = todos[todoIndex];\n    status !== ProjectStatus.Active ? newTodo.status = ProjectStatus.Finished : newTodo.status = ProjectStatus.Active;\n    newTodos[todoIndex] = newTodo;\n    setTodos(newTodos);\n  };\n\n  const filterByQuery = query => {\n    const grouped = groupTodosByDate(todos);\n    let searchedTodos = [];\n    const date = query;\n\n    if (grouped[date]) {\n      searchedTodos = grouped[date];\n      console.log(searchedTodos);\n      setActiveTodos(filterTodos(searchedTodos, ProjectStatus.Active));\n      setFinishedTodos(filterTodos(searchedTodos, ProjectStatus.Finished));\n    } else {\n      setActiveTodos(filterTodos([], ProjectStatus.Active));\n      setFinishedTodos(filterTodos([], ProjectStatus.Finished));\n    }\n  };\n\n  const searchHandler = event => {\n    setQuery(event.target.value);\n\n    if (event.target.value.trim() !== \"\") {\n      filterByQuery(event.target.value.trim());\n    } else {\n      setActiveTodos(filterTodos(todos, ProjectStatus.Active));\n      setFinishedTodos(filterTodos(todos, ProjectStatus.Finished));\n    }\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n  console.log(activeTodos);\n  console.log(finishedTodos);\n  console.log(todos);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(NewTodo, {\n        onAddTodo: todoAddHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n        query: query,\n        onSearch: searchHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoListLayout, {\n        type: \"active\",\n        changeTodoStateDrag: changeTodoStateHandler,\n        children: /*#__PURE__*/_jsxDEV(TodoList, {\n          items: activeTodos,\n          onToggleTodoStatus: toggleTodoStatus,\n          onDeleteTodo: todoDeleteHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoListLayout, {\n        type: \"finished\",\n        changeTodoStateDrag: changeTodoStateHandler,\n        children: /*#__PURE__*/_jsxDEV(TodoList, {\n          items: finishedTodos,\n          onToggleTodoStatus: toggleTodoStatus,\n          onDeleteTodo: todoDeleteHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"7KPKYTN/8MjHS7NPBpLnGbujQS8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/DRIVER D/BIT JS/typescript projects/react-typescript-demo/src/App.tsx"],"names":["React","useEffect","useState","TodoList","NewTodo","SearchBar","ProjectStatus","TodoListLayout","stringifyDate","groupTodosByDate","filterTodos","App","query","setQuery","todos","setTodos","savedTodos","localStorage","getItem","initialTodos","JSON","parse","activeTodos","setActiveTodos","Active","finishedTodos","setFinishedTodos","Finished","resetTodos","hasChange","today","Date","setHours","newTodos","map","todo","todoDate","fullDate","getTime","status","Overdue","todoAddHandler","text","date","priority","prevTodos","id","Math","floor","random","toString","createdOn","console","log","todoDeleteHandler","todoId","filter","toggleTodoStatus","newStatus","changeTodoStateHandler","todoIndex","findIndex","newTodo","filterByQuery","grouped","searchedTodos","searchHandler","event","target","value","trim","setItem","stringify"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, useEffect, useState } from \"react\";\n\nimport TodoList from \"./components/TodoList\";\nimport NewTodo from \"./components/NewTodo\";\nimport SearchBar from \"./components/SearchBar/SearchBar\";\n\nimport { ProjectStatus, Todo } from \"./model/todo.model\";\n\nimport TodoListLayout from \"./ui/TodoListLayout\";\n\nimport {\n  stringifyDate,\n  groupTodosByDate,\n  filterTodos,\n} from \"./util/util-functions\";\n\nconst App: React.FC = () => {\n  const [query, setQuery] = useState<string>(\"\");\n  const [todos, setTodos] = useState<Todo[]>(() => {\n    const savedTodos = localStorage.getItem(\"todos\");\n    let initialTodos: Todo[] = [];\n    if (savedTodos) {\n      initialTodos = JSON.parse(savedTodos);\n    }\n    return initialTodos;\n  });\n\n  const [activeTodos, setActiveTodos] = useState(\n    filterTodos(todos, ProjectStatus.Active)\n  );\n  const [finishedTodos, setFinishedTodos] = useState(\n    filterTodos(todos, ProjectStatus.Finished)\n  );\n\n  const resetTodos = () => {\n    setActiveTodos(() => {\n      return [...filterTodos(todos, ProjectStatus.Active)];\n    });\n    setFinishedTodos(() => {\n      return [...filterTodos(todos, ProjectStatus.Finished)];\n    });\n  };\n\n  useEffect(() => {\n    let hasChange = false;\n    //set today at midnight\n    const today = new Date().setHours(0, 0, 0, 0);\n    const newTodos = todos.map((todo) => {\n      const todoDate = new Date(todo.fullDate).getTime();\n      if (todoDate < today) {\n        hasChange = true;\n        return {\n          ...todo,\n          status: ProjectStatus.Overdue,\n        };\n      }\n      return todo;\n    });\n\n    if (hasChange) {\n      setTodos(newTodos);\n    }\n  }, []);\n\n  const todoAddHandler = (text: string, date: Date, priority: string) => {\n    setTodos((prevTodos) => {\n      return [\n        ...prevTodos,\n        {\n          id: Math.floor(Math.random() * (100000 - 10000) + 10000).toString(),\n          text: text,\n          status: ProjectStatus.Active,\n          priority: priority,\n          date: stringifyDate(date),\n          createdOn: new Date(),\n          fullDate: new Date(date),\n        },\n      ];\n    });\n    console.log(\"pre reset: \", todos);\n    resetTodos();\n    console.log(\"nakon reset \",todos);\n  };\n\n  const todoDeleteHandler = (todoId: string) => {\n    setTodos((prevTodos) => prevTodos.filter((todo) => todo.id !== todoId));\n    resetTodos();\n  };\n\n  // FOR CHECKBOX\n  const toggleTodoStatus = (todoId: string, status: ProjectStatus) => {\n    // const todoIndex = todos.findIndex((todo) => todo.id === todoId);\n    // const newTodos = [...todos];\n    // const newTodo: Todo = todos[todoIndex];\n    // status === ProjectStatus.Active\n    //   ? (newTodo.status = ProjectStatus.Finished)\n    //   : (newTodo.status = ProjectStatus.Active);\n    // newTodos[todoIndex] = newTodo;\n    // setTodos(newTodos);\n    console.log(\"clicked\");\n    const newStatus =\n      status === ProjectStatus.Active\n        ? ProjectStatus.Finished\n        : ProjectStatus.Active;\n    setTodos((prevTodos) => {\n      return prevTodos.map((todo) => {\n        return todo.id === todoId ? { ...todo, status: newStatus } : todo;\n      });\n    });\n    resetTodos();\n  };\n\n  // THIS IS FOR DRAG\n  const changeTodoStateHandler = (todoId: string, status: ProjectStatus) => {\n    const todoIndex = todos.findIndex((todo) => todo.id === todoId);\n    const newTodos = [...todos];\n    const newTodo: Todo = todos[todoIndex];\n    status !== ProjectStatus.Active\n      ? (newTodo.status = ProjectStatus.Finished)\n      : (newTodo.status = ProjectStatus.Active);\n    newTodos[todoIndex] = newTodo;\n    setTodos(newTodos);\n  };\n\n  const filterByQuery = (query: string) => {\n    const grouped: {\n      [prop: string]: Todo[];\n    } = groupTodosByDate(todos);\n    let searchedTodos: Todo[] = [];\n    const date: string = query;\n    if (grouped[date]) {\n      searchedTodos = grouped[date];\n      console.log(searchedTodos);\n      setActiveTodos(filterTodos(searchedTodos, ProjectStatus.Active));\n      setFinishedTodos(filterTodos(searchedTodos, ProjectStatus.Finished));\n    } else {\n      setActiveTodos(filterTodos([], ProjectStatus.Active));\n      setFinishedTodos(filterTodos([], ProjectStatus.Finished));\n    }\n  };\n\n  const searchHandler = (event: ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    if (event.target.value.trim() !== \"\") {\n      filterByQuery(event.target.value.trim());\n    } else {\n      setActiveTodos(filterTodos(todos, ProjectStatus.Active));\n      setFinishedTodos(filterTodos(todos, ProjectStatus.Finished));\n    }\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n\n\n  console.log(activeTodos);\n  console.log(finishedTodos);\n  console.log(todos);\n\n  return (\n    <>\n      <div className=\"App\">\n        <NewTodo onAddTodo={todoAddHandler} />\n        <SearchBar query={query} onSearch={searchHandler} />\n        <TodoListLayout\n          type={\"active\"}\n          changeTodoStateDrag={changeTodoStateHandler}\n        >\n          <TodoList\n            items={activeTodos}\n            onToggleTodoStatus={toggleTodoStatus}\n            onDeleteTodo={todoDeleteHandler}\n          />\n        </TodoListLayout>\n        <TodoListLayout\n          type={\"finished\"}\n          changeTodoStateDrag={changeTodoStateHandler}\n        >\n          <TodoList\n            items={finishedTodos}\n            onToggleTodoStatus={toggleTodoStatus}\n            onDeleteTodo={todoDeleteHandler}\n          />\n        </TodoListLayout>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}