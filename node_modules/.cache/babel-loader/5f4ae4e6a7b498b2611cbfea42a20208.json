{"ast":null,"code":"var _jsxFileName = \"C:\\\\DRIVER D\\\\BIT JS\\\\typescript projects\\\\react-typescript-demo\\\\src\\\\components\\\\ChangeMonth\\\\ChangeMonth.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { ProjectStatus } from \"../../model/todo.model\";\nimport months from \"../../data/months\";\nimport daysOfWeek from \"../../data/daysOfWeek\";\nimport { addLeadingZero, sliceDayName, stringifyDate, sameDate, lesserDate } from \"../../util/util-functions\";\nimport \"./ChangeMonth.css\";\nimport NewTodo from \"../NewTodo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChangeMonth = _ref => {\n  _s();\n\n  let {\n    todos,\n    selectedDay,\n    onSetSelectedDay\n  } = _ref;\n  let monthInitOn1st = new Date();\n  monthInitOn1st.setDate(1);\n  const [actualDate, setActualDate] = useState(monthInitOn1st);\n  const [disablePreviousMonth, setDisablePreviousMonth] = useState(true);\n  useEffect(() => {\n    if (actualDate.getFullYear() === monthInitOn1st.getFullYear() && actualDate.getMonth() === monthInitOn1st.getMonth()) {\n      setDisablePreviousMonth(true);\n    } else {\n      setDisablePreviousMonth(false);\n    }\n  }, [actualDate, monthInitOn1st]); //kalendar je niz dana kao objekti sa klasama i brojem koji je broj dana\n\n  const calendar = [];\n\n  const onPreviousMonth = () => {\n    if (actualDate.getMonth() === 0) {\n      setActualDate(prevDate => {\n        const newDate = new Date(prevDate.getTime());\n        newDate.setMonth(11);\n        newDate.setFullYear(prevDate.getFullYear() - 1);\n        return newDate;\n      });\n    } else {\n      setActualDate(prevDate => {\n        const newDate = new Date(prevDate.getTime());\n        newDate.setMonth(prevDate.getMonth() - 1);\n        return newDate;\n      });\n    }\n  };\n\n  const onNextMonth = () => {\n    if (actualDate.getMonth() === 11) {\n      setActualDate(prevDate => {\n        const newDate = new Date(prevDate.getTime());\n        newDate.setMonth(0);\n        newDate.setFullYear(prevDate.getFullYear() + 1);\n        return newDate;\n      });\n    } else {\n      setActualDate(prevDate => {\n        const newDate = new Date(prevDate.getTime());\n        newDate.setMonth(prevDate.getMonth() + 1);\n        return newDate;\n      });\n    }\n  }; //trenutno prikazani mesec\n\n\n  let thisMonth = new Date(actualDate.getTime());\n  thisMonth.setDate(1);\n  let firstDayOfMonth = actualDate.getDay() === 0 ? 7 : actualDate.getDay(); //zbog stampanja stavimo prvo dane koji ne pocinju od pocetka nedelje\n\n  for (let i = 0; i < firstDayOfMonth; i++) {\n    if (firstDayOfMonth !== 7) {\n      calendar.push({\n        dayClass: \"no-day\",\n        number: null\n      });\n    }\n  }\n\n  while (thisMonth.getMonth() === actualDate.getMonth()) {\n    //napravimo dayClass kao niz u koji stavljamo klase\n    let dayClass = [\"day\"]; //ako je datum manji od danasnjeg onda stavimo disabled\n    //ako je actualDate == today stavimo today\n\n    if (lesserDate(thisMonth, new Date())) {\n      dayClass.push(\"day-disabled\");\n    } else if (sameDate(thisMonth, new Date())) {\n      dayClass.push(\"today\");\n    } //zatim filter todos za taj datum koji prolazimo thismonth koj pocinje od prvog\n    //vraca prvi element koji ispunjava uslov ako postoji za taj dan\n\n\n    if (todos.find(todo => todo.status === ProjectStatus.Active && todo.date === stringifyDate(thisMonth))) {\n      dayClass.push(\"day-todo\");\n    } //zatim niz klasa stavimo u string i dodamo u kalendar niz objekat sa stringom i broejm\n\n\n    calendar.push({\n      dayClass: dayClass.join(\" \"),\n      number: thisMonth.getDate()\n    }); //uvecamo dan za jedan ali mesec mora biti isti\n    //kada zbir predje broj dana u mesecu datum automatski prelazi na prvi dan sledeceg meseca\n    //kada se to desi while petlja se prekida\n\n    thisMonth.setDate(thisMonth.getDate() + 1);\n  }\n\n  const onDaySelectHandler = event => {\n    const selectedDay = event.target.getAttribute(\"day-value\");\n    onSetSelectedDay(selectedDay);\n  };\n\n  let renderSelectedDay;\n\n  if (selectedDay) {\n    renderSelectedDay = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-day\",\n      children: selectedDay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 25\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"default-layout\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"month\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"month__btn\",\n        onClick: onPreviousMonth,\n        disabled: disablePreviousMonth,\n        children: [\" \", \"<\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"month__name\",\n        children: `${months[actualDate.getMonth()]} ${actualDate.getFullYear()}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"month__btn\",\n        onClick: onNextMonth,\n        children: [\" \", \">\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-col7 days-week\",\n      children: daysOfWeek.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: sliceDayName(day)\n      }, day, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-col7\",\n      children: calendar.map((day, index) => {\n        let dateOfDay = `${addLeadingZero(day.number)}/${addLeadingZero(actualDate.getMonth() + 1)}/${actualDate.getFullYear()}`;\n        return day.number !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: day.dayClass,\n          \"day-value\": dateOfDay,\n          onClick: event => onDaySelectHandler(event),\n          children: day.number\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: day.dayClass\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), renderSelectedDay, /*#__PURE__*/_jsxDEV(NewTodo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChangeMonth, \"D6Tm9zPSPxVfvfYRA7t0R36Fu3k=\");\n\n_c = ChangeMonth;\nexport default ChangeMonth;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangeMonth\");","map":{"version":3,"sources":["C:/DRIVER D/BIT JS/typescript projects/react-typescript-demo/src/components/ChangeMonth/ChangeMonth.tsx"],"names":["React","useEffect","useState","ProjectStatus","months","daysOfWeek","addLeadingZero","sliceDayName","stringifyDate","sameDate","lesserDate","NewTodo","ChangeMonth","todos","selectedDay","onSetSelectedDay","monthInitOn1st","Date","setDate","actualDate","setActualDate","disablePreviousMonth","setDisablePreviousMonth","getFullYear","getMonth","calendar","onPreviousMonth","prevDate","newDate","getTime","setMonth","setFullYear","onNextMonth","thisMonth","firstDayOfMonth","getDay","i","push","dayClass","number","find","todo","status","Active","date","join","getDate","onDaySelectHandler","event","target","getAttribute","renderSelectedDay","map","day","index","dateOfDay"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport { ProjectStatus, Todo } from \"../../model/todo.model\";\r\nimport months from \"../../data/months\";\r\nimport daysOfWeek from \"../../data/daysOfWeek\";\r\nimport {\r\n  addLeadingZero,\r\n  sliceDayName,\r\n  stringifyDate,\r\n  sameDate,\r\n  lesserDate,\r\n} from \"../../util/util-functions\";\r\n\r\nimport \"./ChangeMonth.css\";\r\nimport NewTodo from \"../NewTodo\";\r\n\r\ntype ChangeMonthProps = {\r\n  todos: Todo[];\r\n  selectedDay: string;\r\n  onSetSelectedDay: (day: string) => void;\r\n};\r\n\r\ntype Day = {\r\n  dayClass: string;\r\n  number: number | null;\r\n};\r\n\r\nconst ChangeMonth: React.FC<ChangeMonthProps> = ({\r\n  todos,\r\n  selectedDay,\r\n  onSetSelectedDay,\r\n}) => {\r\n  let monthInitOn1st = new Date();\r\n  monthInitOn1st.setDate(1);\r\n  const [actualDate, setActualDate] = useState(monthInitOn1st);\r\n\r\n  const [disablePreviousMonth, setDisablePreviousMonth] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      actualDate.getFullYear() === monthInitOn1st.getFullYear() &&\r\n      actualDate.getMonth() === monthInitOn1st.getMonth()\r\n    ) {\r\n      setDisablePreviousMonth(true);\r\n    } else {\r\n      setDisablePreviousMonth(false);\r\n    }\r\n  }, [actualDate, monthInitOn1st]);\r\n\r\n  //kalendar je niz dana kao objekti sa klasama i brojem koji je broj dana\r\n  const calendar: Day[] = [];\r\n\r\n  const onPreviousMonth = () => {\r\n    if (actualDate.getMonth() === 0) {\r\n      setActualDate((prevDate) => {\r\n        const newDate = new Date(prevDate.getTime());\r\n        newDate.setMonth(11);\r\n        newDate.setFullYear(prevDate.getFullYear() - 1);\r\n        return newDate;\r\n      });\r\n    } else {\r\n      setActualDate((prevDate) => {\r\n        const newDate = new Date(prevDate.getTime());\r\n        newDate.setMonth(prevDate.getMonth() - 1);\r\n        return newDate;\r\n      });\r\n    }\r\n  };\r\n\r\n  const onNextMonth = () => {\r\n    if (actualDate.getMonth() === 11) {\r\n      setActualDate((prevDate) => {\r\n        const newDate = new Date(prevDate.getTime());\r\n        newDate.setMonth(0);\r\n        newDate.setFullYear(prevDate.getFullYear() + 1);\r\n        return newDate;\r\n      });\r\n    } else {\r\n      setActualDate((prevDate) => {\r\n        const newDate = new Date(prevDate.getTime());\r\n        newDate.setMonth(prevDate.getMonth() + 1);\r\n        return newDate;\r\n      });\r\n    }\r\n  };\r\n\r\n  //trenutno prikazani mesec\r\n  let thisMonth = new Date(actualDate.getTime());\r\n  thisMonth.setDate(1);\r\n\r\n  let firstDayOfMonth = actualDate.getDay() === 0 ? 7 : actualDate.getDay();\r\n\r\n  //zbog stampanja stavimo prvo dane koji ne pocinju od pocetka nedelje\r\n  for (let i = 0; i < firstDayOfMonth; i++) {\r\n    if (firstDayOfMonth !== 7) {\r\n      calendar.push({ dayClass: \"no-day\", number: null });\r\n    }\r\n  }\r\n\r\n  while (thisMonth.getMonth() === actualDate.getMonth()) {\r\n    //napravimo dayClass kao niz u koji stavljamo klase\r\n    let dayClass = [\"day\"];\r\n\r\n    //ako je datum manji od danasnjeg onda stavimo disabled\r\n    //ako je actualDate == today stavimo today\r\n    if (lesserDate(thisMonth, new Date())) {\r\n      dayClass.push(\"day-disabled\");\r\n    } else if (sameDate(thisMonth, new Date())) {\r\n      dayClass.push(\"today\");\r\n    }\r\n    //zatim filter todos za taj datum koji prolazimo thismonth koj pocinje od prvog\r\n    //vraca prvi element koji ispunjava uslov ako postoji za taj dan\r\n    if (\r\n      todos.find(\r\n        (todo) =>\r\n          todo.status === ProjectStatus.Active &&\r\n          todo.date === stringifyDate(thisMonth)\r\n      )\r\n    ) {\r\n      dayClass.push(\"day-todo\");\r\n    }\r\n\r\n    //zatim niz klasa stavimo u string i dodamo u kalendar niz objekat sa stringom i broejm\r\n    calendar.push({\r\n      dayClass: dayClass.join(\" \"),\r\n      number: thisMonth.getDate(),\r\n    });\r\n\r\n    //uvecamo dan za jedan ali mesec mora biti isti\r\n    //kada zbir predje broj dana u mesecu datum automatski prelazi na prvi dan sledeceg meseca\r\n    //kada se to desi while petlja se prekida\r\n    thisMonth.setDate(thisMonth.getDate() + 1);\r\n  }\r\n\r\n  const onDaySelectHandler = (event: React.MouseEvent) => {\r\n    const selectedDay = (event.target as Element).getAttribute(\r\n      \"day-value\"\r\n    ) as string;\r\n    onSetSelectedDay(selectedDay);\r\n  };\r\n\r\n  let renderSelectedDay;\r\n\r\n  if (selectedDay) {\r\n    renderSelectedDay = <div className=\"selected-day\">{selectedDay}</div>;\r\n  }\r\n\r\n  return (\r\n    <section className=\"default-layout\">\r\n      <div className=\"month\">\r\n        <button\r\n          className=\"month__btn\"\r\n          onClick={onPreviousMonth}\r\n          disabled={disablePreviousMonth}\r\n        >\r\n          {\" \"}\r\n          &lt;{\" \"}\r\n        </button>\r\n        <p className=\"month__name\">{`${\r\n          months[actualDate.getMonth()]\r\n        } ${actualDate.getFullYear()}`}</p>\r\n        <button className=\"month__btn\" onClick={onNextMonth}>\r\n          {\" \"}\r\n          &gt;{\" \"}\r\n        </button>\r\n      </div>\r\n      <div className=\"grid-col7 days-week\">\r\n        {daysOfWeek.map((day) => (\r\n          <div key={day}>{sliceDayName(day)}</div>\r\n        ))}\r\n      </div>\r\n      <div className=\"grid-col7\">\r\n        {calendar.map((day, index) => {\r\n          let dateOfDay = `${addLeadingZero(day.number)}/${addLeadingZero(\r\n            actualDate.getMonth() + 1\r\n          )}/${actualDate.getFullYear()}`;\r\n          return day.number !== null ? (\r\n            <div\r\n              className={day.dayClass}\r\n              key={index}\r\n              day-value={dateOfDay}\r\n              onClick={(event) => onDaySelectHandler(event)}\r\n            >\r\n              {day.number}\r\n            </div>\r\n          ) : (\r\n            <div className={day.dayClass} key={index} />\r\n          );\r\n        })}\r\n      </div>\r\n      {renderSelectedDay}\r\n      <NewTodo />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ChangeMonth;\r\n"]},"metadata":{},"sourceType":"module"}