{"ast":null,"code":"var _jsxFileName = \"C:\\\\DRIVER D\\\\BIT JS\\\\typescript projects\\\\react-typescript-demo\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport TodoList from \"./components/TodoList\";\nimport NewTodo from \"./components/NewTodo\";\nimport SearchBar from \"./components/SearchBar/SearchBar\";\nimport { ProjectStatus } from \"./model/todo.model\";\nimport TodoListLayout from \"./ui/TodoListLayout\";\nimport { stringifyDate, groupTodosByDate, filterActiveTodos, filterFinishedTodos } from \"./util/util-functions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [todos, setTodos] = useState(() => {\n    const savedTodos = localStorage.getItem(\"todos\");\n    let initialTodos = [];\n\n    if (savedTodos) {\n      initialTodos = JSON.parse(savedTodos);\n    }\n\n    return initialTodos;\n  });\n  useEffect(() => {\n    let hasChange = false;\n    const today = new Date().setHours(0, 0, 0, 0);\n    console.log(today);\n    const newTodos = todos.map(todo => {\n      const todoDate = new Date(todo.date).getTime();\n      console.log(todoDate);\n\n      if (todoDate < today) {\n        console.log(todoDate);\n        console.log(today);\n        hasChange = true;\n        return { ...todo,\n          status: ProjectStatus.Overdue\n        };\n      }\n\n      return todo;\n    });\n    console.log(newTodos);\n\n    if (hasChange) {\n      setTodos(newTodos);\n    }\n  }, []);\n  let activeTodos = filterActiveTodos(todos);\n  let finishedTodos = filterFinishedTodos(todos);\n\n  const todoAddHandler = (text, date, priority) => {\n    setTodos(prevTodos => {\n      return [...prevTodos, {\n        id: Math.floor(Math.random() * (100000 - 10000) + 10000).toString(),\n        text: text,\n        status: ProjectStatus.Active,\n        priority: priority,\n        date: stringifyDate(date),\n        createdOn: new Date()\n      }];\n    });\n  };\n\n  const todoDeleteHandler = todoId => {\n    setTodos(prevTodos => prevTodos.filter(todo => todo.id !== todoId));\n  };\n\n  const toggleTodoStatus = (todoId, status) => {\n    // const todoIndex = todos.findIndex((todo) => todo.id === todoId);\n    // const newTodos = [...todos];\n    // const newTodo: Todo = todos[todoIndex];\n    // status === ProjectStatus.Active\n    //   ? (newTodo.status = ProjectStatus.Finished)\n    //   : (newTodo.status = ProjectStatus.Active);\n    // newTodos[todoIndex] = newTodo;\n    // setTodos(newTodos);\n    const newStatus = status === ProjectStatus.Active ? ProjectStatus.Finished : ProjectStatus.Active;\n    setTodos(prevTodos => {\n      return prevTodos.map(todo => {\n        return todo.id === todoId ? { ...todo,\n          status: newStatus\n        } : todo;\n      });\n    });\n  }; // THIS IS FOR DRAG\n\n\n  const changeTodoState = (todoId, status) => {\n    const todoIndex = todos.findIndex(todo => todo.id === todoId);\n    const newTodos = [...todos];\n    const newTodo = todos[todoIndex];\n    status !== ProjectStatus.Active ? newTodo.status = ProjectStatus.Finished : newTodo.status = ProjectStatus.Active;\n    newTodos[todoIndex] = newTodo;\n    setTodos(newTodos);\n  };\n\n  const searchHandler = event => {\n    setQuery(event.target.value);\n    const grouped = groupTodosByDate(todos);\n    let searchedTodos = [];\n    const date = event.target.value;\n\n    if (grouped[date]) {\n      searchedTodos = grouped[date];\n    }\n\n    setTodos(searchedTodos);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n  console.log(todos);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(NewTodo, {\n        onAddTodo: todoAddHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n        query: query,\n        onSearch: searchHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoListLayout, {\n        type: \"active\",\n        changeTodoStateDrag: changeTodoState,\n        children: /*#__PURE__*/_jsxDEV(TodoList, {\n          items: activeTodos,\n          onChangeTodoStatus: toggleTodoStatus,\n          onDeleteTodo: todoDeleteHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoListLayout, {\n        type: \"finished\",\n        changeTodoStateDrag: changeTodoState,\n        children: /*#__PURE__*/_jsxDEV(TodoList, {\n          items: finishedTodos,\n          onChangeTodoStatus: toggleTodoStatus,\n          onDeleteTodo: todoDeleteHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"r4+XvfR77kZMoqdd4oo+DuIRaco=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/DRIVER D/BIT JS/typescript projects/react-typescript-demo/src/App.tsx"],"names":["React","useEffect","useState","TodoList","NewTodo","SearchBar","ProjectStatus","TodoListLayout","stringifyDate","groupTodosByDate","filterActiveTodos","filterFinishedTodos","App","query","setQuery","todos","setTodos","savedTodos","localStorage","getItem","initialTodos","JSON","parse","hasChange","today","Date","setHours","console","log","newTodos","map","todo","todoDate","date","getTime","status","Overdue","activeTodos","finishedTodos","todoAddHandler","text","priority","prevTodos","id","Math","floor","random","toString","Active","createdOn","todoDeleteHandler","todoId","filter","toggleTodoStatus","newStatus","Finished","changeTodoState","todoIndex","findIndex","newTodo","searchHandler","event","target","value","grouped","searchedTodos","setItem","stringify"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, useEffect, useState } from \"react\";\n\nimport TodoList from \"./components/TodoList\";\nimport NewTodo from \"./components/NewTodo\";\nimport SearchBar from \"./components/SearchBar/SearchBar\";\n\nimport { ProjectStatus, Todo } from \"./model/todo.model\";\n\nimport TodoListLayout from \"./ui/TodoListLayout\";\n\nimport {\n  stringifyDate,\n  groupTodosByDate,\n  filterActiveTodos,\n  filterFinishedTodos,\n} from \"./util/util-functions\";\n\nconst App: React.FC = () => {\n  const [query, setQuery] = useState<string>(\"\");\n  const [todos, setTodos] = useState<Todo[]>(() => {\n    const savedTodos = localStorage.getItem(\"todos\");\n    let initialTodos: Todo[] = [];\n    if (savedTodos) {\n      initialTodos = JSON.parse(savedTodos);\n    }\n    return initialTodos;\n  });\n\n  useEffect(() => {\n    let hasChange = false;\n    const today = (new Date().setHours(0,0,0,0));\n    console.log(today);\n    const newTodos = todos.map((todo) => {\n      const todoDate = new Date(todo.date).getTime();\n      console.log(todoDate);\n      if (todoDate < today) {\n        console.log(todoDate);\n        console.log(today);\n        hasChange = true;\n        return {\n          ...todo,\n          status: ProjectStatus.Overdue,\n        };\n      }\n      return todo;\n    });\n\n    console.log(newTodos);\n\n    if (hasChange) {\n      setTodos(newTodos);\n    }\n  }, []);\n\n  let activeTodos = filterActiveTodos(todos);\n  let finishedTodos = filterFinishedTodos(todos);\n\n  const todoAddHandler = (text: string, date: Date, priority: string) => {\n    setTodos((prevTodos) => {\n      return [\n        ...prevTodos,\n        {\n          id: Math.floor(Math.random() * (100000 - 10000) + 10000).toString(),\n          text: text,\n          status: ProjectStatus.Active,\n          priority: priority,\n          date: stringifyDate(date),\n          createdOn: new Date(),\n        },\n      ];\n    });\n  };\n\n  const todoDeleteHandler = (todoId: string) => {\n    setTodos((prevTodos) => prevTodos.filter((todo) => todo.id !== todoId));\n  };\n\n  const toggleTodoStatus = (todoId: string, status: ProjectStatus) => {\n    // const todoIndex = todos.findIndex((todo) => todo.id === todoId);\n    // const newTodos = [...todos];\n    // const newTodo: Todo = todos[todoIndex];\n    // status === ProjectStatus.Active\n    //   ? (newTodo.status = ProjectStatus.Finished)\n    //   : (newTodo.status = ProjectStatus.Active);\n    // newTodos[todoIndex] = newTodo;\n    // setTodos(newTodos);\n\n    const newStatus =\n      status === ProjectStatus.Active\n        ? ProjectStatus.Finished\n        : ProjectStatus.Active;\n    setTodos((prevTodos) => {\n      return prevTodos.map((todo) => {\n        return todo.id === todoId ? { ...todo, status: newStatus } : todo;\n      });\n    });\n  };\n\n  // THIS IS FOR DRAG\n  const changeTodoState = (todoId: string, status: ProjectStatus) => {\n    const todoIndex = todos.findIndex((todo) => todo.id === todoId);\n    const newTodos = [...todos];\n    const newTodo: Todo = todos[todoIndex];\n    status !== ProjectStatus.Active\n      ? (newTodo.status = ProjectStatus.Finished)\n      : (newTodo.status = ProjectStatus.Active);\n    newTodos[todoIndex] = newTodo;\n    setTodos(newTodos);\n  };\n\n  const searchHandler = (event: ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n\n    const grouped: {\n      [prop: string]: Todo[];\n    } = groupTodosByDate(todos);\n    let searchedTodos: Todo[] = [];\n    const date: string = event.target.value;\n    if (grouped[date]) {\n      searchedTodos = grouped[date];\n    }\n    setTodos(searchedTodos);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n\n  console.log(todos);\n\n  return (\n    <>\n      <div className=\"App\">\n        <NewTodo onAddTodo={todoAddHandler} />\n        <SearchBar query={query} onSearch={searchHandler} />\n        <TodoListLayout type={\"active\"} changeTodoStateDrag={changeTodoState}>\n          <TodoList\n            items={activeTodos}\n            onChangeTodoStatus={toggleTodoStatus}\n            onDeleteTodo={todoDeleteHandler}\n          />\n        </TodoListLayout>\n        <TodoListLayout type={\"finished\"} changeTodoStateDrag={changeTodoState}>\n          <TodoList\n            items={finishedTodos}\n            onChangeTodoStatus={toggleTodoStatus}\n            onDeleteTodo={todoDeleteHandler}\n          />\n        </TodoListLayout>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}