{"ast":null,"code":"var _jsxFileName = \"C:\\\\DRIVER D\\\\BIT JS\\\\typescript projects\\\\react-typescript-demo\\\\src\\\\components\\\\ChangeMonth\\\\ChangeMonth.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport months from \"../../data/months\";\nimport daysOfWeek from \"../../data/daysOfWeek\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst sameDate = (date1, date2) => date1.getDate() === date2.getDate() && date1.getMonth() === date2.getMonth() && date1.getFullYear() === date2.getFullYear();\n\nconst ChangeMonth = () => {\n  _s();\n\n  let initialDayOfMonth = new Date();\n  initialDayOfMonth.setDate(1);\n  const [actualDate, setActualDate] = useState(initialDayOfMonth); //kalendar je niz dana kao objekti sa klasama i brojem koji je broj dana\n\n  const calendar = [];\n\n  const onDecrease = () => {\n    if (actualDate.getMonth() === 0) {\n      setActualDate(prevDate => {\n        const newDate = new Date(prevDate.getTime());\n        newDate.setMonth(11);\n        newDate.setFullYear(prevDate.getFullYear() - 1);\n        return newDate;\n      });\n    } else {\n      setActualDate(prevDate => {\n        const newDate = new Date(prevDate.getTime());\n        newDate.setMonth(prevDate.getMonth() - 1);\n        return newDate;\n      });\n    }\n  };\n\n  const onIncrease = () => {\n    if (actualDate.getMonth() === 11) {\n      setActualDate(prevDate => {\n        const newDate = new Date(prevDate.getTime());\n        newDate.setMonth(0);\n        newDate.setFullYear(prevDate.getFullYear() + 1);\n        return newDate;\n      });\n    } else {\n      setActualDate(prevDate => {\n        const newDate = new Date(prevDate.getTime());\n        newDate.setMonth(prevDate.getMonth() + 1);\n        return newDate;\n      });\n    }\n  };\n\n  let thisMonth = new Date(actualDate.getTime());\n  thisMonth.setDate(1);\n  let firstDayOfMonth = actualDate.getDay() === 0 ? 7 : actualDate.getDay();\n  console.log(\"prvi dan meseca: \", firstDayOfMonth); //zbog stampanja stavimo prvo dane koji ne pocinju od pocetka nedelje\n\n  while (thisMonth.getMonth() === actualDate.getMonth()) {\n    //napravimo dayClass kao niz u koji stavljamo klase\n    let dayClass = [\"day\"]; //ako je actualDAte == today stavimo today\n\n    if (sameDate(thisMonth, new Date())) {\n      dayClass.push(\"today\");\n    } //zatim filter todos za taj datum koji prolazimo actual date koj pocinje od prvog\n    //zatim niz klasa stavimo u string i dodamo u kalendar niz objekat sa stringom i broejm\n\n\n    calendar.push({\n      dayClass: dayClass.join(\" \"),\n      number: thisMonth.getDate()\n    }); //uvecamo dan za jedan ali mesec mora biti isti\n\n    thisMonth.setDate(thisMonth.getDate() + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"default-layout\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onDecrease,\n        children: \" decrement - \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: `${months[actualDate.getMonth()]} ${actualDate.getFullYear()}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onIncrease,\n        children: \" increment + \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-col7\",\n      children: daysOfWeek.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: day\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: calendar.map((day, index) => {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: day.dayClass,\n          children: day.number\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChangeMonth, \"SHPC5Fbw3OXJKh25NisoZqGFN8Q=\");\n\n_c = ChangeMonth;\nexport default ChangeMonth;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangeMonth\");","map":{"version":3,"sources":["C:/DRIVER D/BIT JS/typescript projects/react-typescript-demo/src/components/ChangeMonth/ChangeMonth.tsx"],"names":["React","useState","months","daysOfWeek","sameDate","date1","date2","getDate","getMonth","getFullYear","ChangeMonth","initialDayOfMonth","Date","setDate","actualDate","setActualDate","calendar","onDecrease","prevDate","newDate","getTime","setMonth","setFullYear","onIncrease","thisMonth","firstDayOfMonth","getDay","console","log","dayClass","push","join","number","map","day","index"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport months from \"../../data/months\";\r\nimport daysOfWeek from \"../../data/daysOfWeek\";\r\n\r\nconst sameDate = (date1: Date, date2: Date) =>\r\n  date1.getDate() === date2.getDate() &&\r\n  date1.getMonth() === date2.getMonth() &&\r\n  date1.getFullYear() === date2.getFullYear();\r\n\r\ntype ChangeMonthProps = {};\r\n\r\ntype Day = {\r\n  dayClass: string;\r\n  number: number | null;\r\n};\r\n\r\nconst ChangeMonth: React.FC<ChangeMonthProps> = () => {\r\n  let initialDayOfMonth = new Date();\r\n  initialDayOfMonth.setDate(1);\r\n  const [actualDate, setActualDate] = useState(initialDayOfMonth);\r\n\r\n  //kalendar je niz dana kao objekti sa klasama i brojem koji je broj dana\r\n  const calendar: Day[] = [];\r\n\r\n  const onDecrease = () => {\r\n    if (actualDate.getMonth() === 0) {\r\n      setActualDate((prevDate) => {\r\n        const newDate = new Date(prevDate.getTime());\r\n        newDate.setMonth(11);\r\n        newDate.setFullYear(prevDate.getFullYear() - 1);\r\n        return newDate;\r\n      });\r\n    } else {\r\n      setActualDate((prevDate) => {\r\n        const newDate = new Date(prevDate.getTime());\r\n        newDate.setMonth(prevDate.getMonth() - 1);\r\n        return newDate;\r\n      });\r\n    }\r\n  };\r\n\r\n  const onIncrease = () => {\r\n    if (actualDate.getMonth() === 11) {\r\n      setActualDate((prevDate) => {\r\n        const newDate = new Date(prevDate.getTime());\r\n        newDate.setMonth(0);\r\n        newDate.setFullYear(prevDate.getFullYear() + 1);\r\n        return newDate;\r\n      });\r\n    } else {\r\n      setActualDate((prevDate) => {\r\n        const newDate = new Date(prevDate.getTime());\r\n        newDate.setMonth(prevDate.getMonth() + 1);\r\n        return newDate;\r\n      });\r\n    }\r\n  };\r\n\r\n  let thisMonth = new Date(actualDate.getTime());\r\n  thisMonth.setDate(1);\r\n\r\n  let firstDayOfMonth = actualDate.getDay() === 0 ? 7 : actualDate.getDay();\r\n  console.log(\"prvi dan meseca: \", firstDayOfMonth);\r\n\r\n  //zbog stampanja stavimo prvo dane koji ne pocinju od pocetka nedelje\r\n\r\n  while (thisMonth.getMonth() === actualDate.getMonth()) {\r\n    //napravimo dayClass kao niz u koji stavljamo klase\r\n    let dayClass = [\"day\"];\r\n\r\n    //ako je actualDAte == today stavimo today\r\n    if (sameDate(thisMonth, new Date())) {\r\n      dayClass.push(\"today\");\r\n    }\r\n    //zatim filter todos za taj datum koji prolazimo actual date koj pocinje od prvog\r\n\r\n    //zatim niz klasa stavimo u string i dodamo u kalendar niz objekat sa stringom i broejm\r\n    calendar.push({\r\n      dayClass: dayClass.join(\" \"),\r\n      number: thisMonth.getDate(),\r\n    });\r\n\r\n    //uvecamo dan za jedan ali mesec mora biti isti\r\n    thisMonth.setDate(thisMonth.getDate() + 1);\r\n  }\r\n  return (\r\n    <section className=\"default-layout\">\r\n      <div>\r\n        <button onClick={onDecrease}> decrement - </button>\r\n        <p>{`${months[actualDate.getMonth()]} ${actualDate.getFullYear()}`}</p>\r\n        <button onClick={onIncrease}> increment + </button>\r\n      </div>\r\n      <div className=\"grid-col7\">\r\n        {daysOfWeek.map((day) => (\r\n          <div>{day}</div>\r\n        ))}\r\n      </div>\r\n      <div>\r\n        {calendar.map((day, index) => {\r\n          return (\r\n            <span className={day.dayClass} key={index}>\r\n              {day.number}\r\n            </span>\r\n          );\r\n        })}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ChangeMonth;\r\n"]},"metadata":{},"sourceType":"module"}