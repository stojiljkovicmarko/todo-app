{"ast":null,"code":"var _jsxFileName = \"C:\\\\DRIVER D\\\\BIT JS\\\\typescript projects\\\\react-typescript-demo\\\\src\\\\components\\\\ChangeMonth\\\\ChangeMonth.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport months from \"../../data/months\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ChangeMonth = () => {\n  _s();\n\n  let firstOfMonth = new Date();\n  firstOfMonth.setDate(1);\n  const [actualDate, setActualDate] = useState(firstOfMonth);\n  const calendar = [];\n\n  const onDecrease = () => {\n    if (actualDate.getMonth() === 0) {\n      setActualDate(prevDate => {\n        const newDate = new Date(prevDate.getTime());\n        newDate.setMonth(11);\n        newDate.setFullYear(prevDate.getFullYear() - 1);\n        return newDate;\n      });\n    } else {\n      setActualDate(prevDate => {\n        const newDate = new Date(prevDate.getTime());\n        newDate.setMonth(prevDate.getMonth() - 1);\n        return newDate;\n      });\n    }\n  };\n\n  const onIncrease = () => {\n    if (actualDate.getMonth() === 11) {\n      setActualDate(prevDate => {\n        const newDate = new Date(prevDate.getTime());\n        newDate.setMonth(0);\n        newDate.setFullYear(prevDate.getFullYear() + 1);\n        return newDate;\n      });\n    } else {\n      setActualDate(prevDate => {\n        const newDate = new Date(prevDate.getTime());\n        newDate.setMonth(prevDate.getMonth() + 1);\n        return newDate;\n      });\n    }\n  };\n\n  let actualMonth = actualDate.getMonth(); //   while(actualDate.getMonth() === actualMonth) {\n  //     //napravimo dayClass kao niz u koji stavljamo klase\n  //     //ako je actualDAte == today stavimo today\n  //     //zatim filter todos za taj datum koji prolazimo actual date koj pocinje od prvog\n  //   }\n\n  console.log(actualDate);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onDecrease,\n        children: \" decrement - \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: `${months[actualDate.getMonth()]} ${actualDate.getFullYear()}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onIncrease,\n        children: \" increment + \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ChangeMonth, \"qDhBeilshKPjXi8+1dCsKW6uOao=\");\n\n_c = ChangeMonth;\nexport default ChangeMonth;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangeMonth\");","map":{"version":3,"sources":["C:/DRIVER D/BIT JS/typescript projects/react-typescript-demo/src/components/ChangeMonth/ChangeMonth.tsx"],"names":["React","useState","months","ChangeMonth","firstOfMonth","Date","setDate","actualDate","setActualDate","calendar","onDecrease","getMonth","prevDate","newDate","getTime","setMonth","setFullYear","getFullYear","onIncrease","actualMonth","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;;;;AAIA,MAAMC,WAAuC,GAAG,MAAM;AAAA;;AAClD,MAAIC,YAAY,GAAG,IAAIC,IAAJ,EAAnB;AACAD,EAAAA,YAAY,CAACE,OAAb,CAAqB,CAArB;AACF,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAACG,YAAD,CAA5C;AAKA,QAAMK,QAAQ,GAAG,EAAjB;;AAEA,QAAMC,UAAU,GAAG,MAAM;AACvB,QAAIH,UAAU,CAACI,QAAX,OAA0B,CAA9B,EAAiC;AAC/BH,MAAAA,aAAa,CAAEI,QAAD,IAAc;AAC1B,cAAMC,OAAO,GAAG,IAAIR,IAAJ,CAASO,QAAQ,CAACE,OAAT,EAAT,CAAhB;AACAD,QAAAA,OAAO,CAACE,QAAR,CAAiB,EAAjB;AACAF,QAAAA,OAAO,CAACG,WAAR,CAAoBJ,QAAQ,CAACK,WAAT,KAAyB,CAA7C;AACA,eAAOJ,OAAP;AACD,OALY,CAAb;AAMD,KAPD,MAOO;AACLL,MAAAA,aAAa,CAAEI,QAAD,IAAc;AAC1B,cAAMC,OAAO,GAAG,IAAIR,IAAJ,CAASO,QAAQ,CAACE,OAAT,EAAT,CAAhB;AACAD,QAAAA,OAAO,CAACE,QAAR,CAAiBH,QAAQ,CAACD,QAAT,KAAsB,CAAvC;AACA,eAAOE,OAAP;AACD,OAJY,CAAb;AAKD;AACF,GAfD;;AAiBA,QAAMK,UAAU,GAAG,MAAM;AACvB,QAAIX,UAAU,CAACI,QAAX,OAA0B,EAA9B,EAAkC;AAChCH,MAAAA,aAAa,CAAEI,QAAD,IAAc;AAC1B,cAAMC,OAAO,GAAG,IAAIR,IAAJ,CAASO,QAAQ,CAACE,OAAT,EAAT,CAAhB;AACAD,QAAAA,OAAO,CAACE,QAAR,CAAiB,CAAjB;AACAF,QAAAA,OAAO,CAACG,WAAR,CAAoBJ,QAAQ,CAACK,WAAT,KAAyB,CAA7C;AACA,eAAOJ,OAAP;AACD,OALY,CAAb;AAMD,KAPD,MAOO;AACLL,MAAAA,aAAa,CAAEI,QAAD,IAAc;AAC1B,cAAMC,OAAO,GAAG,IAAIR,IAAJ,CAASO,QAAQ,CAACE,OAAT,EAAT,CAAhB;AACAD,QAAAA,OAAO,CAACE,QAAR,CAAiBH,QAAQ,CAACD,QAAT,KAAsB,CAAvC;AACA,eAAOE,OAAP;AACD,OAJY,CAAb;AAKD;AACF,GAfD;;AAiBA,MAAIM,WAAW,GAAGZ,UAAU,CAACI,QAAX,EAAlB,CA5CoD,CA8CtD;AAEA;AACA;AACA;AACA;;AAEES,EAAAA,OAAO,CAACC,GAAR,CAAYd,UAAZ;AAEA,sBACE;AAAA,4BACE;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAEG,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAK,GAAER,MAAM,CAACK,UAAU,CAACI,QAAX,EAAD,CAAwB,IAAGJ,UAAU,CAACU,WAAX,EAAyB;AAAjE;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAEC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBADF;AAYD,CAnED;;GAAMf,W;;KAAAA,W;AAqEN,eAAeA,WAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport months from \"../../data/months\";\r\n\r\ntype ChangeMonthProps = {};\r\n\r\nconst ChangeMonth: React.FC<ChangeMonthProps> = () => {\r\n    let firstOfMonth = new Date();\r\n    firstOfMonth.setDate(1);\r\n  const [actualDate, setActualDate] = useState(firstOfMonth);\r\n\r\n\r\n  \r\n\r\n  const calendar = [];\r\n\r\n  const onDecrease = () => {\r\n    if (actualDate.getMonth() === 0) {\r\n      setActualDate((prevDate) => {\r\n        const newDate = new Date(prevDate.getTime());\r\n        newDate.setMonth(11);\r\n        newDate.setFullYear(prevDate.getFullYear() - 1);\r\n        return newDate;\r\n      });\r\n    } else {\r\n      setActualDate((prevDate) => {\r\n        const newDate = new Date(prevDate.getTime());\r\n        newDate.setMonth(prevDate.getMonth() - 1);\r\n        return newDate;\r\n      });\r\n    }\r\n  };\r\n\r\n  const onIncrease = () => {\r\n    if (actualDate.getMonth() === 11) {\r\n      setActualDate((prevDate) => {\r\n        const newDate = new Date(prevDate.getTime());\r\n        newDate.setMonth(0);\r\n        newDate.setFullYear(prevDate.getFullYear() + 1);\r\n        return newDate;\r\n      });\r\n    } else {\r\n      setActualDate((prevDate) => {\r\n        const newDate = new Date(prevDate.getTime());\r\n        newDate.setMonth(prevDate.getMonth() + 1);\r\n        return newDate;\r\n      });\r\n    }\r\n  };\r\n\r\n  let actualMonth = actualDate.getMonth();\r\n\r\n//   while(actualDate.getMonth() === actualMonth) {\r\n      \r\n//     //napravimo dayClass kao niz u koji stavljamo klase\r\n//     //ako je actualDAte == today stavimo today\r\n//     //zatim filter todos za taj datum koji prolazimo actual date koj pocinje od prvog\r\n//   }\r\n\r\n  console.log(actualDate);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <button onClick={onDecrease}> decrement - </button>\r\n        <p>{`${months[actualDate.getMonth()]} ${actualDate.getFullYear()}`}</p>\r\n        <button onClick={onIncrease}> increment + </button>\r\n      </div>\r\n      <div>\r\n\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChangeMonth;\r\n"]},"metadata":{},"sourceType":"module"}