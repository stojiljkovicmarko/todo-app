{"ast":null,"code":"var _jsxFileName = \"C:\\\\DRIVER D\\\\BIT JS\\\\typescript projects\\\\react-typescript-demo\\\\src\\\\components\\\\TodoList.tsx\";\nimport React from \"react\";\nimport \"./TodoList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoList = props => {\n  const dragStartHandler = (event, todoId) => {\n    console.log(event);\n    console.log(event.dataTransfer.effectAllowed = \"move\");\n  };\n\n  const dropHandler = event => {\n    console.log(event);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    onDrop: event => dropHandler(event),\n    children: props.items.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n      draggable: \"true\",\n      className: `todo ${todo.status === 0 ? \"active-todo\" : \"finished-todo\"}`,\n      onDragStart: event => dragStartHandler(event, todo.id),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: todo.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: props.onChangeTodoStatus.bind(null, todo.id, todo.status),\n          children: \"\\u270E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: props.onDeleteTodo.bind(null, todo.id),\n          children: \"\\u2716\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, todo.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["C:/DRIVER D/BIT JS/typescript projects/react-typescript-demo/src/components/TodoList.tsx"],"names":["React","TodoList","props","dragStartHandler","event","todoId","console","log","dataTransfer","effectAllowed","dropHandler","items","map","todo","status","id","text","onChangeTodoStatus","bind","onDeleteTodo"],"mappings":";AAAA,OAAOA,KAAP,MAAiC,OAAjC;AAGA,OAAO,gBAAP;;;AAQA,MAAMC,QAAiC,GAAIC,KAAD,IAAW;AACnD,QAAMC,gBAAgB,GAAG,CACvBC,KADuB,EAEvBC,MAFuB,KAGpB;AACHC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAaH,KAAK,CAACI,YAAN,CAAmBC,aAAnB,GAAmC,MAAhD;AACD,GAND;;AAQA,QAAMC,WAAW,GAAIN,KAAD,IAAwC;AAC1DE,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACD,GAFD;;AAIA,sBACE;AAAI,IAAA,MAAM,EAAGA,KAAD,IAAWM,WAAW,CAACN,KAAD,CAAlC;AAAA,cACGF,KAAK,CAACS,KAAN,CAAYC,GAAZ,CAAiBC,IAAD,iBACf;AACE,MAAA,SAAS,EAAC,MADZ;AAGE,MAAA,SAAS,EAAG,QACVA,IAAI,CAACC,MAAL,KAAgB,CAAhB,GAAoB,aAApB,GAAoC,eACrC,EALH;AAME,MAAA,WAAW,EAAGV,KAAD,IAAWD,gBAAgB,CAACC,KAAD,EAAQS,IAAI,CAACE,EAAb,CAN1C;AAAA,8BAQE;AAAA,kBAAOF,IAAI,CAACG;AAAZ;AAAA;AAAA;AAAA;AAAA,cARF,eASE;AAAA,gCACE;AACE,UAAA,OAAO,EAAEd,KAAK,CAACe,kBAAN,CAAyBC,IAAzB,CACP,IADO,EAEPL,IAAI,CAACE,EAFE,EAGPF,IAAI,CAACC,MAHE,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE;AAAQ,UAAA,OAAO,EAAEZ,KAAK,CAACiB,YAAN,CAAmBD,IAAnB,CAAwB,IAAxB,EAA8BL,IAAI,CAACE,EAAnC,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA,OAEOF,IAAI,CAACE,EAFZ;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CA3CD;;KAAMd,Q;AA6CN,eAAeA,QAAf","sourcesContent":["import React, { DragEvent } from \"react\";\r\nimport { ProjectStatus } from \"../model/todo.model\";\r\n\r\nimport \"./TodoList.css\";\r\n\r\ninterface TodoListProps {\r\n  items: { id: string; text: string; status: ProjectStatus }[];\r\n  onChangeTodoStatus: (id: string, newStatus: ProjectStatus) => void;\r\n  onDeleteTodo: (id: string) => void;\r\n}\r\n\r\nconst TodoList: React.FC<TodoListProps> = (props) => {\r\n  const dragStartHandler = (\r\n    event: DragEvent<HTMLLIElement>,\r\n    todoId: string\r\n  ) => {\r\n    console.log(event);\r\n    console.log((event.dataTransfer.effectAllowed = \"move\"));\r\n  };\r\n\r\n  const dropHandler = (event: DragEvent<HTMLUListElement>) => {\r\n    console.log(event);\r\n  };\r\n\r\n  return (\r\n    <ul onDrop={(event) => dropHandler(event)}>\r\n      {props.items.map((todo) => (\r\n        <li\r\n          draggable=\"true\"\r\n          key={todo.id}\r\n          className={`todo ${\r\n            todo.status === 0 ? \"active-todo\" : \"finished-todo\"\r\n          }`}\r\n          onDragStart={(event) => dragStartHandler(event, todo.id)}\r\n        >\r\n          <span>{todo.text}</span>\r\n          <div>\r\n            <button\r\n              onClick={props.onChangeTodoStatus.bind(\r\n                null,\r\n                todo.id,\r\n                todo.status\r\n              )}\r\n            >\r\n              &#9998;\r\n            </button>\r\n            <button onClick={props.onDeleteTodo.bind(null, todo.id)}>\r\n              &#10006;\r\n            </button>\r\n          </div>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n"]},"metadata":{},"sourceType":"module"}