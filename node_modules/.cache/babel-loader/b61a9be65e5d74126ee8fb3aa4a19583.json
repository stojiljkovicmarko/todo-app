{"ast":null,"code":"var _jsxFileName = \"C:\\\\DRIVER D\\\\BIT JS\\\\typescript projects\\\\todo-app\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport TodoList from \"./components/TodoList\";\nimport { ProjectStatus } from \"./model/todo.model\";\nimport TodoListLayout from \"./ui/TodoListLayout\";\nimport { stringifyDate } from \"./util/util-functions\";\nimport ChangeMonth from \"./components/ChangeMonth/ChangeMonth\";\nimport TodosContainer from \"./components/TodosContainer/TodosContainer\";\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [todos, setTodos] = useState(() => {\n    const savedTodos = localStorage.getItem(\"todos\");\n    let initialTodos = [];\n\n    if (savedTodos) {\n      initialTodos = JSON.parse(savedTodos);\n    }\n\n    return initialTodos;\n  });\n  const [selectedDay, setSelectedDay] = useState(\"\");\n\n  const onSetSelectedDay = day => {\n    setSelectedDay(day);\n  };\n\n  const filteredTodos = todos.filter(todo => {\n    if (selectedDay) {\n      return todo.date === selectedDay;\n    }\n\n    return new Date(new Date(todo.fullDate).setHours(0, 0, 0, 0)).getTime() === new Date(new Date().setHours(0, 0, 0, 0)).getTime();\n  });\n  useEffect(() => {\n    let hasChange = false; //set today at midnight\n\n    const today = new Date().setHours(0, 0, 0, 0);\n    const newTodos = todos.map(todo => {\n      const todoDate = new Date(todo.fullDate).getTime();\n\n      if (todoDate < today) {\n        hasChange = true;\n\n        if (todo.status !== ProjectStatus.Finished) {\n          return { ...todo,\n            status: ProjectStatus.Overdue\n          };\n        }\n      }\n\n      return todo;\n    });\n\n    if (hasChange) {\n      setTodos(newTodos);\n    }\n  }, []);\n  const navigate = useNavigate();\n\n  const todoAddHandler = (text, date, priority) => {\n    setTodos(prevTodos => {\n      return [...prevTodos, {\n        id: Math.floor(Math.random() * (100000 - 10000) + 10000).toString(),\n        text: text,\n        status: ProjectStatus.Active,\n        priority: priority,\n        date: stringifyDate(date),\n        createdOn: new Date(),\n        fullDate: new Date(date),\n        isEditable: false\n      }];\n    });\n    setSelectedDay(stringifyDate(date));\n    navigate(\"/todo-app/active\");\n  }; //change map to find to find faster\n\n\n  const todoUpdateHandler = (text, date, priority, todoId) => {\n    setTodos(prevTodos => {\n      return prevTodos.map(todo => {\n        return todo.id === todoId ? { ...todo,\n          text: text,\n          date: stringifyDate(date),\n          priority: priority,\n          isEditable: !todo.isEditable\n        } : todo;\n      });\n    });\n  };\n\n  const todoDeleteHandler = todoId => {\n    setTodos(prevTodos => prevTodos.filter(todo => todo.id !== todoId));\n  }; // FOR CHECKBOX\n\n\n  const toggleTodoStatus = (todoId, status) => {\n    const newStatus = status === ProjectStatus.Active ? ProjectStatus.Finished : ProjectStatus.Active;\n    setTodos(prevTodos => {\n      return prevTodos.map(todo => {\n        return todo.id === todoId ? { ...todo,\n          status: newStatus\n        } : todo;\n      });\n    });\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]); //better performance with find\n\n  const isEditableHandler = todoId => {\n    setTodos(prevTodos => {\n      return prevTodos.map(todo => {\n        return todo.id === todoId ? { ...todo,\n          isEditable: !todo.isEditable\n        } : todo;\n      });\n    });\n  };\n\n  const clickOutsideHandler = _event => {\n    setTodos(prevTodos => {\n      return prevTodos.map(todo => {\n        return todo.isEditable === true ? { ...todo,\n          isEditable: !todo.isEditable\n        } : todo;\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ChangeMonth, {\n      todos: todos,\n      selectedDay: selectedDay,\n      onSetSelectedDay: onSetSelectedDay,\n      submitTodo: todoAddHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodosContainer, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/todo-app/overdue\",\n          element: /*#__PURE__*/_jsxDEV(TodoListLayout, {\n            type: \"overdue\",\n            children: /*#__PURE__*/_jsxDEV(TodoList, {\n              list: \"overdue\",\n              items: todos,\n              onToggleTodoStatus: toggleTodoStatus,\n              onDeleteTodo: todoDeleteHandler,\n              onEditableTodo: isEditableHandler,\n              onUpdateTodo: todoUpdateHandler,\n              onClickOutside: clickOutsideHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/todo-app/active\",\n          element: /*#__PURE__*/_jsxDEV(TodoListLayout, {\n            type: \"active\",\n            children: /*#__PURE__*/_jsxDEV(TodoList, {\n              list: \"active\",\n              items: filteredTodos,\n              onToggleTodoStatus: toggleTodoStatus,\n              onDeleteTodo: todoDeleteHandler,\n              onEditableTodo: isEditableHandler,\n              onUpdateTodo: todoUpdateHandler,\n              onClickOutside: clickOutsideHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/todo-app/finished\",\n          element: /*#__PURE__*/_jsxDEV(TodoListLayout, {\n            type: \"finished\",\n            children: /*#__PURE__*/_jsxDEV(TodoList, {\n              list: \"finished\",\n              items: filteredTodos,\n              onToggleTodoStatus: toggleTodoStatus,\n              onDeleteTodo: todoDeleteHandler,\n              onEditableTodo: isEditableHandler,\n              onUpdateTodo: todoUpdateHandler,\n              onClickOutside: clickOutsideHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/*\",\n          element: /*#__PURE__*/_jsxDEV(TodoListLayout, {\n            type: \"active\",\n            children: /*#__PURE__*/_jsxDEV(TodoList, {\n              list: \"active\",\n              items: filteredTodos,\n              onToggleTodoStatus: toggleTodoStatus,\n              onDeleteTodo: todoDeleteHandler,\n              onEditableTodo: isEditableHandler,\n              onUpdateTodo: todoUpdateHandler,\n              onClickOutside: clickOutsideHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"8j+D636AOB41tKlvNZX+pu5KcfQ=\", false, function () {\n  return [useNavigate];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/DRIVER D/BIT JS/typescript projects/todo-app/src/App.tsx"],"names":["React","useEffect","useState","TodoList","ProjectStatus","TodoListLayout","stringifyDate","ChangeMonth","TodosContainer","Routes","Route","useNavigate","App","todos","setTodos","savedTodos","localStorage","getItem","initialTodos","JSON","parse","selectedDay","setSelectedDay","onSetSelectedDay","day","filteredTodos","filter","todo","date","Date","fullDate","setHours","getTime","hasChange","today","newTodos","map","todoDate","status","Finished","Overdue","navigate","todoAddHandler","text","priority","prevTodos","id","Math","floor","random","toString","Active","createdOn","isEditable","todoUpdateHandler","todoId","todoDeleteHandler","toggleTodoStatus","newStatus","setItem","stringify","isEditableHandler","clickOutsideHandler","_event"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport TodoList from \"./components/TodoList\";\r\n\r\nimport { ProjectStatus, Todo } from \"./model/todo.model\";\r\n\r\nimport TodoListLayout from \"./ui/TodoListLayout\";\r\n\r\nimport { stringifyDate } from \"./util/util-functions\";\r\nimport ChangeMonth from \"./components/ChangeMonth/ChangeMonth\";\r\nimport TodosContainer from \"./components/TodosContainer/TodosContainer\";\r\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\r\n\r\nconst App: React.FC = () => {\r\n  const [todos, setTodos] = useState<Todo[]>(() => {\r\n    const savedTodos = localStorage.getItem(\"todos\");\r\n    let initialTodos: Todo[] = [];\r\n    if (savedTodos) {\r\n      initialTodos = JSON.parse(savedTodos);\r\n    }\r\n    return initialTodos;\r\n  });\r\n\r\n  const [selectedDay, setSelectedDay] = useState(\"\");\r\n\r\n  const onSetSelectedDay = (day: string) => {\r\n    setSelectedDay(day);\r\n  };\r\n\r\n  const filteredTodos = todos.filter((todo) => {\r\n    if (selectedDay) {\r\n      return todo.date === selectedDay;\r\n    }\r\n    return (\r\n      new Date(new Date(todo.fullDate).setHours(0, 0, 0, 0)).getTime() ===\r\n      new Date(new Date().setHours(0, 0, 0, 0)).getTime()\r\n    );\r\n  });\r\n\r\n  useEffect(() => {\r\n    let hasChange = false;\r\n    //set today at midnight\r\n    const today = new Date().setHours(0, 0, 0, 0);\r\n    const newTodos = todos.map((todo) => {\r\n      const todoDate = new Date(todo.fullDate).getTime();\r\n      if (todoDate < today) {\r\n        hasChange = true;\r\n        if (todo.status !== ProjectStatus.Finished) {\r\n          return {\r\n            ...todo,\r\n            status: ProjectStatus.Overdue,\r\n          };\r\n        }\r\n      }\r\n      return todo;\r\n    });\r\n\r\n    if (hasChange) {\r\n      setTodos(newTodos);\r\n    }\r\n  }, []);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const todoAddHandler = (text: string, date: Date, priority: string) => {\r\n    setTodos((prevTodos) => {\r\n      return [\r\n        ...prevTodos,\r\n        {\r\n          id: Math.floor(Math.random() * (100000 - 10000) + 10000).toString(),\r\n          text: text,\r\n          status: ProjectStatus.Active,\r\n          priority: priority,\r\n          date: stringifyDate(date),\r\n          createdOn: new Date(),\r\n          fullDate: new Date(date),\r\n          isEditable: false,\r\n        },\r\n      ];\r\n    });\r\n    setSelectedDay(stringifyDate(date));\r\n    navigate(\"/todo-app/active\");\r\n  };\r\n\r\n  //change map to find to find faster\r\n  const todoUpdateHandler = (\r\n    text: string,\r\n    date: Date,\r\n    priority: string,\r\n    todoId?: string\r\n  ) => {\r\n    setTodos((prevTodos) => {\r\n      return prevTodos.map((todo) => {\r\n        return todo.id === todoId\r\n          ? {\r\n              ...todo,\r\n              text: text,\r\n              date: stringifyDate(date),\r\n              priority: priority,\r\n              isEditable: !todo.isEditable,\r\n            }\r\n          : todo;\r\n      });\r\n    });\r\n  };\r\n\r\n  const todoDeleteHandler = (todoId: string) => {\r\n    setTodos((prevTodos) => prevTodos.filter((todo) => todo.id !== todoId));\r\n  };\r\n\r\n  // FOR CHECKBOX\r\n  const toggleTodoStatus = (todoId: string, status: ProjectStatus) => {\r\n    const newStatus =\r\n      status === ProjectStatus.Active\r\n        ? ProjectStatus.Finished\r\n        : ProjectStatus.Active;\r\n    setTodos((prevTodos) => {\r\n      return prevTodos.map((todo) => {\r\n        return todo.id === todoId ? { ...todo, status: newStatus } : todo;\r\n      });\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n  }, [todos]);\r\n\r\n  //better performance with find\r\n  const isEditableHandler = (todoId: string) => {\r\n    setTodos((prevTodos) => {\r\n      return prevTodos.map((todo) => {\r\n        return todo.id === todoId\r\n          ? { ...todo, isEditable: !todo.isEditable }\r\n          : todo;\r\n      });\r\n    });\r\n  };\r\n\r\n  const clickOutsideHandler = (_event: MouseEvent) => {\r\n    setTodos((prevTodos) => {\r\n      return prevTodos.map((todo) => {\r\n        return todo.isEditable === true\r\n          ? { ...todo, isEditable: !todo.isEditable }\r\n          : todo;\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ChangeMonth\r\n        todos={todos}\r\n        selectedDay={selectedDay}\r\n        onSetSelectedDay={onSetSelectedDay}\r\n        submitTodo={todoAddHandler}\r\n      />\r\n      <TodosContainer>\r\n        <Routes>\r\n          <Route\r\n            path=\"/todo-app/overdue\"\r\n            element={\r\n              <TodoListLayout type={\"overdue\"}>\r\n                <TodoList\r\n                  list={\"overdue\"}\r\n                  items={todos}\r\n                  onToggleTodoStatus={toggleTodoStatus}\r\n                  onDeleteTodo={todoDeleteHandler}\r\n                  onEditableTodo={isEditableHandler}\r\n                  onUpdateTodo={todoUpdateHandler}\r\n                  onClickOutside={clickOutsideHandler}\r\n                />\r\n              </TodoListLayout>\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/todo-app/active\"\r\n            element={\r\n              <TodoListLayout type={\"active\"}>\r\n                <TodoList\r\n                  list={\"active\"}\r\n                  items={filteredTodos}\r\n                  onToggleTodoStatus={toggleTodoStatus}\r\n                  onDeleteTodo={todoDeleteHandler}\r\n                  onEditableTodo={isEditableHandler}\r\n                  onUpdateTodo={todoUpdateHandler}\r\n                  onClickOutside={clickOutsideHandler}\r\n                />\r\n              </TodoListLayout>\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/todo-app/finished\"\r\n            element={\r\n              <TodoListLayout type={\"finished\"}>\r\n                <TodoList\r\n                  list={\"finished\"}\r\n                  items={filteredTodos}\r\n                  onToggleTodoStatus={toggleTodoStatus}\r\n                  onDeleteTodo={todoDeleteHandler}\r\n                  onEditableTodo={isEditableHandler}\r\n                  onUpdateTodo={todoUpdateHandler}\r\n                  onClickOutside={clickOutsideHandler}\r\n                />\r\n              </TodoListLayout>\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/*\"\r\n            element={\r\n              <TodoListLayout type={\"active\"}>\r\n                <TodoList\r\n                  list={\"active\"}\r\n                  items={filteredTodos}\r\n                  onToggleTodoStatus={toggleTodoStatus}\r\n                  onDeleteTodo={todoDeleteHandler}\r\n                  onEditableTodo={isEditableHandler}\r\n                  onUpdateTodo={todoUpdateHandler}\r\n                  onClickOutside={clickOutsideHandler}\r\n                />\r\n              </TodoListLayout>\r\n            }\r\n          />\r\n        </Routes>\r\n      </TodosContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}